
theory Axiomatic_Padding 
                           use why3.Bool.Bool 
                           
end

theory Int32_of_Int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int32.t = (Int32.of_int (Int16.to_int n))
  
end

theory Bit_int32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int32_of_Int16
  
  use export enum.Bit_int32_of_bit_int16
  
end

theory Int64_of_Int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int64.t = (Int64.of_int (Int16.to_int n))
  
end

theory Bit_int64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int64_of_Int16
  
  use export enum.Bit_int64_of_bit_int16
  
end

theory Int64_of_Int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int64.t = (Int64.of_int (Int32.to_int n))
  
end

theory Bit_int64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int64_of_Int32
  
  use export enum.Bit_int64_of_bit_int32
  
end

theory Int8_of_Int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int8.t = (Int8.of_int (Int16.to_int n))
  
end

theory Bit_int8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int8_of_Int16
  
  use export enum.Bit_int8_of_bit_int16
  
end

theory Int8_of_Int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int8.t = (Int8.of_int (Int32.to_int n))
  
end

theory Bit_int8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int8_of_Int32
  
  use export enum.Bit_int8_of_bit_int32
  
end

theory Int8_of_Int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int8.t = (Int8.of_int (Int64.to_int n))
  
end

theory Bit_int8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int8_of_Int64
  
  use export enum.Bit_int8_of_bit_int64
  
end

theory Uint16_of_Int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint16.t = (Uint16.of_int (Int16.to_int n))
  
end

theory Bit_uint16_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint16_of_Int16
  
  use export enum.Bit_uint16_of_bit_int16
  
end

theory Uint16_of_Int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint16.t = (Uint16.of_int (Int32.to_int n))
  
end

theory Bit_uint16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint16_of_Int32
  
  use export enum.Bit_uint16_of_bit_int32
  
end

theory Uint16_of_Int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint16.t = (Uint16.of_int (Int64.to_int n))
  
end

theory Bit_uint16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint16_of_Int64
  
  use export enum.Bit_uint16_of_bit_int64
  
end

theory Uint16_of_Int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint16.t = (Uint16.of_int (Int8.to_int n))
  
end

theory Bit_uint16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint16_of_Int8
  
  use export enum.Bit_uint16_of_bit_int8
  
end

theory Uint32_of_Int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint32.t = (Uint32.of_int (Int16.to_int n))
  
end

theory Bit_uint32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint32_of_Int16
  
  use export enum.Bit_uint32_of_bit_int16
  
end

theory Uint32_of_Int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint32.t = (Uint32.of_int (Int32.to_int n))
  
end

theory Bit_uint32_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint32_of_Int32
  
  use export enum.Bit_uint32_of_bit_int32
  
end

theory Uint32_of_Int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint32.t = (Uint32.of_int (Int64.to_int n))
  
end

theory Bit_uint32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint32_of_Int64
  
  use export enum.Bit_uint32_of_bit_int64
  
end

theory Uint32_of_Int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint32.t = (Uint32.of_int (Int8.to_int n))
  
end

theory Bit_uint32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint32_of_Int8
  
  use export enum.Bit_uint32_of_bit_int8
  
end

theory Uint32_of_Uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint32.t = (Uint32.of_int (Uint16.to_int n))
  
end

theory Bit_uint32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint16
  
  use export enum.Bit_uint32_of_bit_uint16
  
end

theory Uint64_of_Int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint64.t = (Uint64.of_int (Int16.to_int n))
  
end

theory Bit_uint64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint64_of_Int16
  
  use export enum.Bit_uint64_of_bit_int16
  
end

theory Uint64_of_Int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint64.t = (Uint64.of_int (Int32.to_int n))
  
end

theory Bit_uint64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint64_of_Int32
  
  use export enum.Bit_uint64_of_bit_int32
  
end

theory Uint64_of_Int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint64.t = (Uint64.of_int (Int64.to_int n))
  
end

theory Bit_uint64_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint64_of_Int64
  
  use export enum.Bit_uint64_of_bit_int64
  
end

theory Uint64_of_Int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint64.t = (Uint64.of_int (Int8.to_int n))
  
end

theory Bit_uint64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint64_of_Int8
  
  use export enum.Bit_uint64_of_bit_int8
  
end

theory Uint64_of_Uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint64.t = (Uint64.of_int (Uint16.to_int n))
  
end

theory Bit_uint64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint16
  
  use export enum.Bit_uint64_of_bit_uint16
  
end

theory Uint64_of_Uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint64.t = (Uint64.of_int (Uint32.to_int n))
  
end

theory Bit_uint64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint32
  
  use export enum.Bit_uint64_of_bit_uint32
  
end

theory Uint8_of_Int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint8.t = (Uint8.of_int (Int16.to_int n))
  
end

theory Bit_uint8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint8_of_Int16
  
  use export enum.Bit_uint8_of_bit_int16
  
end

theory Uint8_of_Int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint8.t = (Uint8.of_int (Int32.to_int n))
  
end

theory Bit_uint8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint8_of_Int32
  
  use export enum.Bit_uint8_of_bit_int32
  
end

theory Uint8_of_Int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint8.t = (Uint8.of_int (Int64.to_int n))
  
end

theory Bit_uint8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint8_of_Int64
  
  use export enum.Bit_uint8_of_bit_int64
  
end

theory Uint8_of_Int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint8.t = (Uint8.of_int (Int8.to_int n))
  
end

theory Bit_uint8_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint8_of_Int8
  
  use export enum.Bit_uint8_of_bit_int8
  
end

theory Uint8_of_Uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint8.t = (Uint8.of_int (Uint16.to_int n))
  
end

theory Bit_uint8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint16
  
  use export enum.Bit_uint8_of_bit_uint16
  
end

theory Uint8_of_Uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint8.t = (Uint8.of_int (Uint32.to_int n))
  
end

theory Bit_uint8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint32
  
  use export enum.Bit_uint8_of_bit_uint32
  
end

theory Uint8_of_Uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint8.t = (Uint8.of_int (Uint64.to_int n))
  
end

theory Bit_uint8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint64
  
  use export enum.Bit_uint8_of_bit_uint64
  
end

theory Int16_of_Int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int16.t = (Int16.of_int (Int32.to_int n))
  
end

theory Bit_int16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int16_of_Int32
  
  use export enum.Bit_int16_of_bit_int32
  
end

theory Int16_of_Int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int16.t = (Int16.of_int (Int64.to_int n))
  
end

theory Bit_int16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int16_of_Int64
  
  use export enum.Bit_int16_of_bit_int64
  
end

theory Int32_of_Int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int32.t = (Int32.of_int (Int64.to_int n))
  
end

theory Bit_int32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int32_of_Int64
  
  use export enum.Bit_int32_of_bit_int64
  
end

theory Int16_of_Int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int16.t = (Int16.of_int (Int8.to_int n))
  
end

theory Bit_int16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int16_of_Int8
  
  use export enum.Bit_int16_of_bit_int8
  
end

theory Int32_of_Int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int32.t = (Int32.of_int (Int8.to_int n))
  
end

theory Bit_int32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int32_of_Int8
  
  use export enum.Bit_int32_of_bit_int8
  
end

theory Int64_of_Int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int64.t = (Int64.of_int (Int8.to_int n))
  
end

theory Bit_int64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int64_of_Int8
  
  use export enum.Bit_int64_of_bit_int8
  
end

theory Int16_of_Uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int16.t = (Int16.of_int (Uint16.to_int n))
  
end

theory Bit_int16_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int16_of_Uint16
  
  use export enum.Bit_int16_of_bit_uint16
  
end

theory Int32_of_Uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int32.t = (Int32.of_int (Uint16.to_int n))
  
end

theory Bit_int32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int32_of_Uint16
  
  use export enum.Bit_int32_of_bit_uint16
  
end

theory Int64_of_Uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int64.t = (Int64.of_int (Uint16.to_int n))
  
end

theory Bit_int64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int64_of_Uint16
  
  use export enum.Bit_int64_of_bit_uint16
  
end

theory Int8_of_Uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int8.t = (Int8.of_int (Uint16.to_int n))
  
end

theory Bit_int8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int8_of_Uint16
  
  use export enum.Bit_int8_of_bit_uint16
  
end

theory Int16_of_Uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int16.t = (Int16.of_int (Uint32.to_int n))
  
end

theory Bit_int16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int16_of_Uint32
  
  use export enum.Bit_int16_of_bit_uint32
  
end

theory Int32_of_Uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int32.t = (Int32.of_int (Uint32.to_int n))
  
end

theory Bit_int32_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int32_of_Uint32
  
  use export enum.Bit_int32_of_bit_uint32
  
end

theory Int64_of_Uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int64.t = (Int64.of_int (Uint32.to_int n))
  
end

theory Bit_int64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int64_of_Uint32
  
  use export enum.Bit_int64_of_bit_uint32
  
end

theory Int8_of_Uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int8.t = (Int8.of_int (Uint32.to_int n))
  
end

theory Bit_int8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int8_of_Uint32
  
  use export enum.Bit_int8_of_bit_uint32
  
end

theory Uint16_of_Uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint16.t = (Uint16.of_int (Uint32.to_int n))
  
end

theory Bit_uint16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint32
  
  use export enum.Bit_uint16_of_bit_uint32
  
end

theory Int16_of_Uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int16.t = (Int16.of_int (Uint64.to_int n))
  
end

theory Bit_int16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int16_of_Uint64
  
  use export enum.Bit_int16_of_bit_uint64
  
end

theory Int32_of_Uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int32.t = (Int32.of_int (Uint64.to_int n))
  
end

theory Bit_int32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int32_of_Uint64
  
  use export enum.Bit_int32_of_bit_uint64
  
end

theory Int64_of_Uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int64.t = (Int64.of_int (Uint64.to_int n))
  
end

theory Bit_int64_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int64_of_Uint64
  
  use export enum.Bit_int64_of_bit_uint64
  
end

theory Int8_of_Uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int8.t = (Int8.of_int (Uint64.to_int n))
  
end

theory Bit_int8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int8_of_Uint64
  
  use export enum.Bit_int8_of_bit_uint64
  
end

theory Uint16_of_Uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint16.t = (Uint16.of_int (Uint64.to_int n))
  
end

theory Bit_uint16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint64
  
  use export enum.Bit_uint16_of_bit_uint64
  
end

theory Uint32_of_Uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint32.t = (Uint32.of_int (Uint64.to_int n))
  
end

theory Bit_uint32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint64
  
  use export enum.Bit_uint32_of_bit_uint64
  
end

theory Int16_of_Uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int16.t = (Int16.of_int (Uint8.to_int n))
  
end

theory Bit_int16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int16_of_Uint8
  
  use export enum.Bit_int16_of_bit_uint8
  
end

theory Int32_of_Uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int32.t = (Int32.of_int (Uint8.to_int n))
  
end

theory Bit_int32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int32_of_Uint8
  
  use export enum.Bit_int32_of_bit_uint8
  
end

theory Int64_of_Uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int64.t = (Int64.of_int (Uint8.to_int n))
  
end

theory Bit_int64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int64_of_Uint8
  
  use export enum.Bit_int64_of_bit_uint8
  
end

theory Int8_of_Uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int8.t = (Int8.of_int (Uint8.to_int n))
  
end

theory Bit_int8_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int8_of_Uint8
  
  use export enum.Bit_int8_of_bit_uint8
  
end

theory Uint16_of_Uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint16.t = (Uint16.of_int (Uint8.to_int n))
  
end

theory Bit_uint16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint8
  
  use export enum.Bit_uint16_of_bit_uint8
  
end

theory Uint32_of_Uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint32.t = (Uint32.of_int (Uint8.to_int n))
  
end

theory Bit_uint32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint8
  
  use export enum.Bit_uint32_of_bit_uint8
  
end

theory Uint64_of_Uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint64.t = (Uint64.of_int (Uint8.to_int n))
  
end

theory Bit_uint64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint8
  
  use export enum.Bit_uint64_of_bit_uint8
  
end

module Unsafe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Globals_simple

  use why3.Bool.Bool 
  
end

theory Root_voidP

  use why3.Bool.Bool 
  
  use import core.Voidp 
  
end

module Root_voidP_safe

  use why3.Bool.Bool 
  
end

module Root_voidP_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_3_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_3_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_5_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_5_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_2_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_2_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Item_4_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Item_4_unsafe

  use why3.Bool.Bool 
  
end

theory Root___anonstruct_Map_5

  use why3.Bool.Bool 
  
  type __anonstruct_Map_5 
  
end

theory Root___anonstruct_Item_4

  use why3.Bool.Bool 
  
  type __anonstruct_Item_4 
  
end

theory Axiomatic_MapCount

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  function count (pointer __anonstruct_Map_5) int int (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)) (memory
  __anonstruct_Item_4 Int32.t) : int
  
  
  axiom Count_zero #"/home/nik/Projects/ver/hw4/map.h" 92 59 156#
  "expl:Axiom count_zero"  :
  (forall __anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5
   (pointer __anonstruct_Item_4)).
   (forall __anonstruct_Item_4_existent_items_49_at_L : (memory
    __anonstruct_Item_4 Int32.t).
    (#"/home/nik/Projects/ver/hw4/map.h" 94 22 94#
    (forall map_0_1 : (pointer __anonstruct_Map_5).
     (forall m_0 : int.
      (forall n_2 : int.
       (((>=) m_0 n_2) ->
        ((=)
        (count map_0_1 m_0 n_2 __anonstruct_Map_5_items_map_2_at_L
        __anonstruct_Item_4_existent_items_49_at_L) (0)))))))))
  
  predicate count_one_p (map_1 : (pointer __anonstruct_Map_5)) (m_1 : int)
  (__anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5 (pointer
  __anonstruct_Item_4))) (__anonstruct_Item_4_existent_items_49_at_L :
  (memory __anonstruct_Item_4 Int32.t))
  =
     ((=)
     (count map_1 m_1 (Int.(+) m_1 (1)) __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)
     (if
      ((<>)
      (Int32.to_int
      (select __anonstruct_Item_4_existent_items_49_at_L
      (shift (select __anonstruct_Map_5_items_map_2_at_L map_1) m_1))) (0))
      then (1) else (0)))
  
  
  axiom Count_one #"/home/nik/Projects/ver/hw4/map.h" 98 65 140#
  "expl:Axiom count_one"  :
  (forall __anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5
   (pointer __anonstruct_Item_4)).
   (forall __anonstruct_Item_4_existent_items_49_at_L : (memory
    __anonstruct_Item_4 Int32.t).
    (#"/home/nik/Projects/ver/hw4/map.h" 100 24 72#
    (forall map_2 : (pointer __anonstruct_Map_5).
     (forall m_2 : int.
      (count_one_p map_2 m_2 __anonstruct_Map_5_items_map_2_at_L
      __anonstruct_Item_4_existent_items_49_at_L))))))
  
  predicate count_split_p (map_3 : (pointer __anonstruct_Map_5)) (m_3 : int)
  (n_3 : int) (k_1 : int) (__anonstruct_Map_5_items_map_2_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_49_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     ((=)
     (count map_3 m_3 k_1 __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)
     (Int.(+)
     (count map_3 m_3 n_3 __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)
     (count map_3 n_3 k_1 __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)))
  
  
  axiom Count_split #"/home/nik/Projects/ver/hw4/map.h" 103 64 179#
  "expl:Axiom count_split"  :
  (forall __anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5
   (pointer __anonstruct_Item_4)).
   (forall __anonstruct_Item_4_existent_items_49_at_L : (memory
    __anonstruct_Item_4 Int32.t).
    (#"/home/nik/Projects/ver/hw4/map.h" 105 26 112#
    (forall map_4 : (pointer __anonstruct_Map_5).
     (forall m_4 : int.
      (forall n_4 : int.
       (forall k_2 : int.
        ((((<=) m_4 n_4) /\ ((<=) n_4 k_2)) ->
         (count_split_p map_4 m_4 n_4 k_2 __anonstruct_Map_5_items_map_2_at_L
         __anonstruct_Item_4_existent_items_49_at_L)))))))))
  
  function count_exist (map_5 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_5_5_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_5_5_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_107_at_L : (memory __anonstruct_Item_4
  Int32.t)) : int
  =
     (count map_5 (0)
     (Int32.to_int (select __anonstruct_Map_5_capacity_map_5_5_at_L map_5))
     __anonstruct_Map_5_items_map_5_5_at_L
     __anonstruct_Item_4_existent_items_107_at_L)
  
  
end

theory Logic_type_padding

  use why3.Bool.Bool 
  
  type padding 
  
end

theory Root___anonstruct_Key_2

  use why3.Bool.Bool 
  
  type __anonstruct_Key_2 
  
end

theory Root___anonstruct_Value_3

  use why3.Bool.Bool 
  
  type __anonstruct_Value_3 
  
end

theory Struct___anonstruct_Value_3

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Value_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Value_3_tag  : (tag_id
  __anonstruct_Value_3)
  
  axiom U___anonstruct_Value_3_parenttag_bottom  :
  (parenttag __anonstruct_Value_3_tag bottom_tag)
  
  axiom U___anonstruct_Value_3_is_final  :
  (forall __anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3).
   (forall p : (pointer __anonstruct_Value_3).
    ((instanceof __anonstruct_Value_3_tag_table p __anonstruct_Value_3_tag)
     ->
     ((=) (typeof __anonstruct_Value_3_tag_table p) __anonstruct_Value_3_tag))))
  
  predicate frame_tag_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (old___anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3))
  =
     ((tag_extends old___anonstruct_Value_3_tag_table
      __anonstruct_Value_3_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Value_3_tag_table
     __anonstruct_Value_3_tag_table p))
  
  predicate frame_free_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (old___anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3))
  =
     ((free_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     (free_block old___anonstruct_Value_3_alloc_table
     __anonstruct_Value_3_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (n : int) (old___anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  =
     ((alloc_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     (alloc_block old___anonstruct_Value_3_alloc_table
     __anonstruct_Value_3_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (n : int) (__anonstruct_Value_3_tag_table :
  (tag_table __anonstruct_Value_3))
  = (tag_fresh __anonstruct_Value_3_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (n : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = (alloc_fresh __anonstruct_Value_3_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) = true
  
  predicate container_of_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (l : int) (r : int) (__anonstruct_Value_3_tag_table
  : (tag_table __anonstruct_Value_3)) = true
  
  predicate typeof_singleton_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3))
  = ((=) (typeof __anonstruct_Value_3_tag_table p) __anonstruct_Value_3_tag)
  
  predicate typeof_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (l : int) (r : int) (__anonstruct_Value_3_tag_table
  : (tag_table __anonstruct_Value_3))
  =
     (((=) (typeof __anonstruct_Value_3_tag_table p) __anonstruct_Value_3_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Value_3_tag_table (shift p i))
       __anonstruct_Value_3_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3))
  = (instanceof __anonstruct_Value_3_tag_table p __anonstruct_Value_3_tag)
  
  predicate instanceof_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (l : int) (r : int) (__anonstruct_Value_3_tag_table
  : (tag_table __anonstruct_Value_3))
  =
     ((instanceof __anonstruct_Value_3_tag_table p __anonstruct_Value_3_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Value_3_tag_table (shift p i)
       __anonstruct_Value_3_tag))))
  
  predicate right_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (b : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = ((>=) (offset_max __anonstruct_Value_3_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = ((<=) (offset_min __anonstruct_Value_3_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = ((=) (offset_min __anonstruct_Value_3_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (b : int)
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  =
     (((<=) (offset_min __anonstruct_Value_3_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Value_3_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (b : int)
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  =
     (((=) (offset_min __anonstruct_Value_3_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Value_3_alloc_table p) b))
  
  axiom U___anonstruct_Value_3_int  :
  ((=) (int_of_tag __anonstruct_Value_3_tag) (7))
  
end

theory Struct___anonstruct_Key_2

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Key_2_tag  : (tag_id
  __anonstruct_Key_2)
  
  axiom U___anonstruct_Key_2_parenttag_bottom  :
  (parenttag __anonstruct_Key_2_tag bottom_tag)
  
  axiom U___anonstruct_Key_2_is_final  :
  (forall __anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2).
   (forall p : (pointer __anonstruct_Key_2).
    ((instanceof __anonstruct_Key_2_tag_table p __anonstruct_Key_2_tag) ->
     ((=) (typeof __anonstruct_Key_2_tag_table p) __anonstruct_Key_2_tag))))
  
  predicate frame_tag_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (old___anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2))
  =
     ((tag_extends old___anonstruct_Key_2_tag_table
      __anonstruct_Key_2_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Key_2_tag_table
     __anonstruct_Key_2_tag_table p))
  
  predicate frame_free_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (old___anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2))
  =
     ((free_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     (free_block old___anonstruct_Key_2_alloc_table
     __anonstruct_Key_2_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (n : int) (old___anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  =
     ((alloc_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     (alloc_block old___anonstruct_Key_2_alloc_table
     __anonstruct_Key_2_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (n : int) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) = (tag_fresh __anonstruct_Key_2_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (n : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = (alloc_fresh __anonstruct_Key_2_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) = true
  
  predicate container_of_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (l : int) (r : int) (__anonstruct_Key_2_tag_table :
  (tag_table __anonstruct_Key_2)) = true
  
  predicate typeof_singleton_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2))
  = ((=) (typeof __anonstruct_Key_2_tag_table p) __anonstruct_Key_2_tag)
  
  predicate typeof_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (l : int) (r : int) (__anonstruct_Key_2_tag_table :
  (tag_table __anonstruct_Key_2))
  =
     (((=) (typeof __anonstruct_Key_2_tag_table p) __anonstruct_Key_2_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Key_2_tag_table (shift p i))
       __anonstruct_Key_2_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2))
  = (instanceof __anonstruct_Key_2_tag_table p __anonstruct_Key_2_tag)
  
  predicate instanceof_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (l : int) (r : int) (__anonstruct_Key_2_tag_table :
  (tag_table __anonstruct_Key_2))
  =
     ((instanceof __anonstruct_Key_2_tag_table p __anonstruct_Key_2_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Key_2_tag_table (shift p i)
       __anonstruct_Key_2_tag))))
  
  predicate right_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (b : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = ((>=) (offset_max __anonstruct_Key_2_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = ((<=) (offset_min __anonstruct_Key_2_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = ((=) (offset_min __anonstruct_Key_2_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (b : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  =
     (((<=) (offset_min __anonstruct_Key_2_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Key_2_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (b : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  =
     (((=) (offset_min __anonstruct_Key_2_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Key_2_alloc_table p) b))
  
  axiom U___anonstruct_Key_2_int  :
  ((=) (int_of_tag __anonstruct_Key_2_tag) (5))
  
end

theory Struct___anonstruct_Item_4

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Struct___anonstruct_Value_3 
  
  use import Struct___anonstruct_Key_2 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Item_4_tag  : (tag_id
  __anonstruct_Item_4)
  
  axiom U___anonstruct_Item_4_parenttag_bottom  :
  (parenttag __anonstruct_Item_4_tag bottom_tag)
  
  axiom U___anonstruct_Item_4_is_final  :
  (forall __anonstruct_Item_4_tag_table : (tag_table __anonstruct_Item_4).
   (forall p : (pointer __anonstruct_Item_4).
    ((instanceof __anonstruct_Item_4_tag_table p __anonstruct_Item_4_tag) ->
     ((=) (typeof __anonstruct_Item_4_tag_table p) __anonstruct_Item_4_tag))))
  
  predicate frame_tag_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (old___anonstruct_Item_4_tag_table : (tag_table
  __anonstruct_Item_4)) (__anonstruct_Item_4_tag_table : (tag_table
  __anonstruct_Item_4)) (old___anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (old___anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((tag_extends old___anonstruct_Item_4_tag_table
      __anonstruct_Item_4_tag_table)
     /\
     ((alloc_tag_block old___anonstruct_Item_4_tag_table
      __anonstruct_Item_4_tag_table p)
     /\
     ((tag_extends old___anonstruct_Key_2_tag_table
      __anonstruct_Key_2_tag_table)
     /\
     ((alloc_tag_blockset old___anonstruct_Key_2_tag_table
      __anonstruct_Key_2_tag_table
      (pset_singleton (select __anonstruct_Item_4_key_1 p)))
     /\
     ((tag_extends old___anonstruct_Value_3_tag_table
      __anonstruct_Value_3_tag_table)
     /\
     (alloc_tag_blockset old___anonstruct_Value_3_tag_table
     __anonstruct_Value_3_tag_table
     (pset_singleton (select __anonstruct_Item_4_value_1 p))))))))
  
  predicate frame_free_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (old___anonstruct_Item_4_alloc_table : (alloc_table
  __anonstruct_Item_4)) (__anonstruct_Item_4_alloc_table : (alloc_table
  __anonstruct_Item_4)) (old___anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (old___anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((free_extends old___anonstruct_Item_4_alloc_table
      __anonstruct_Item_4_alloc_table)
     /\
     ((free_block old___anonstruct_Item_4_alloc_table
      __anonstruct_Item_4_alloc_table p)
     /\
     ((free_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table
      (pset_singleton (select __anonstruct_Item_4_key_1 p)))
     /\
     ((free_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     (alloc_blockset old___anonstruct_Value_3_alloc_table
     __anonstruct_Value_3_alloc_table
     (pset_singleton (select __anonstruct_Item_4_value_1 p))))))))
  
  predicate frame_alloc_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (n : int) (old___anonstruct_Item_4_alloc_table :
  (alloc_table __anonstruct_Item_4)) (__anonstruct_Item_4_alloc_table :
  (alloc_table __anonstruct_Item_4)) (old___anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (old___anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((alloc_extends old___anonstruct_Item_4_alloc_table
      __anonstruct_Item_4_alloc_table)
     /\
     ((alloc_block old___anonstruct_Item_4_alloc_table
      __anonstruct_Item_4_alloc_table p n)
     /\
     ((alloc_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table
      (pset_singleton (select __anonstruct_Item_4_key_1 p)))
     /\
     ((alloc_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     (alloc_blockset old___anonstruct_Value_3_alloc_table
     __anonstruct_Value_3_alloc_table
     (pset_singleton (select __anonstruct_Item_4_value_1 p))))))))
  
  predicate fresh_tag_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (n : int) (__anonstruct_Item_4_tag_table : (tag_table
  __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((tag_fresh __anonstruct_Item_4_tag_table p) /\
     ((fresh_tag_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0)
      __anonstruct_Value_3_tag_table)
     /\
     ((fresh_tag_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_1 p) (0) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((instanceof __anonstruct_Item_4_tag_table (shift p i)
       __anonstruct_Item_4_tag) ->
       ((fresh_tag_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i)) (0)
        __anonstruct_Value_3_tag_table)
       /\
       (fresh_tag_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i)) (0)
       __anonstruct_Key_2_tag_table)))))))
  
  predicate fresh_alloc_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (n : int) (__anonstruct_Item_4_alloc_table :
  (alloc_table __anonstruct_Item_4)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((alloc_fresh __anonstruct_Item_4_alloc_table p) /\
     ((fresh_alloc_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     ((fresh_alloc_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_1 p) (0)
      __anonstruct_Key_2_alloc_table)
     /\
     (forall i : int.
      ((((<=) (0) i) /\ ((<=) i n)) ->
       ((fresh_alloc_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i)) (0)
        __anonstruct_Value_3_alloc_table)
       /\
       (fresh_alloc_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i)) (0)
       __anonstruct_Key_2_alloc_table)))))))
  
  predicate container_of_singleton_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (__anonstruct_Item_4_tag_table : (tag_table
  __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((container_of_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) __anonstruct_Value_3_tag_table)
     /\
     (container_of_singleton_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_1 p) __anonstruct_Key_2_tag_table))
  
  predicate container_of_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (l : int) (r : int) (__anonstruct_Item_4_tag_table :
  (tag_table __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((container_of_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) __anonstruct_Value_3_tag_table)
     /\
     ((container_of_singleton_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_1 p) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((container_of_singleton_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i))
        __anonstruct_Value_3_tag_table)
       /\
       (container_of_singleton_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i))
       __anonstruct_Key_2_tag_table))))))
  
  predicate typeof_singleton_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (__anonstruct_Item_4_tag_table : (tag_table
  __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((=) (typeof __anonstruct_Item_4_tag_table p) __anonstruct_Item_4_tag)
     /\
     ((typeof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) __anonstruct_Value_3_tag_table)
     /\
     (typeof_singleton_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_1 p) __anonstruct_Key_2_tag_table)))
  
  predicate typeof_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (l : int) (r : int) (__anonstruct_Item_4_tag_table :
  (tag_table __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((=) (typeof __anonstruct_Item_4_tag_table p) __anonstruct_Item_4_tag)
     /\
     ((typeof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) __anonstruct_Value_3_tag_table)
     /\
     ((typeof_singleton_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_1 p) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (((=) (typeof __anonstruct_Item_4_tag_table (shift p i))
        __anonstruct_Item_4_tag)
       /\
       ((typeof_singleton_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i))
        __anonstruct_Value_3_tag_table)
       /\
       (typeof_singleton_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i))
       __anonstruct_Key_2_tag_table))))))))
  
  predicate instanceof_singleton_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (__anonstruct_Item_4_tag_table : (tag_table
  __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((instanceof __anonstruct_Item_4_tag_table p __anonstruct_Item_4_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) __anonstruct_Value_3_tag_table)
     /\
     (instanceof_singleton_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_1 p) __anonstruct_Key_2_tag_table)))
  
  predicate instanceof_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (l : int) (r : int) (__anonstruct_Item_4_tag_table :
  (tag_table __anonstruct_Item_4)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     ((instanceof __anonstruct_Item_4_tag_table p __anonstruct_Item_4_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) __anonstruct_Value_3_tag_table)
     /\
     ((instanceof_singleton_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_1 p) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((instanceof __anonstruct_Item_4_tag_table (shift p i)
        __anonstruct_Item_4_tag)
       /\
       ((instanceof_singleton_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i))
        __anonstruct_Value_3_tag_table)
       /\
       (instanceof_singleton_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i))
       __anonstruct_Key_2_tag_table))))))))
  
  predicate right_valid_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (b : int) (__anonstruct_Item_4_alloc_table :
  (alloc_table __anonstruct_Item_4)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((>=) (offset_max __anonstruct_Item_4_alloc_table p) b) /\
     ((right_valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     (right_valid_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_1 p) (0) __anonstruct_Key_2_alloc_table)))
  
  predicate left_valid_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (a : int) (__anonstruct_Item_4_alloc_table :
  (alloc_table __anonstruct_Item_4)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((<=) (offset_min __anonstruct_Item_4_alloc_table p) a) /\
     ((left_valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     (left_valid_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_1 p) (0) __anonstruct_Key_2_alloc_table)))
  
  predicate strict_left_valid_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (a : int) (__anonstruct_Item_4_alloc_table :
  (alloc_table __anonstruct_Item_4)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((=) (offset_min __anonstruct_Item_4_alloc_table p) a) /\
     ((left_valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     (left_valid_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_1 p) (0) __anonstruct_Key_2_alloc_table)))
  
  predicate valid_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (a : int) (b : int) (__anonstruct_Item_4_alloc_table
  : (alloc_table __anonstruct_Item_4)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((<=) (offset_min __anonstruct_Item_4_alloc_table p) a) /\
     (((>=) (offset_max __anonstruct_Item_4_alloc_table p) b) /\
     ((valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     ((valid_struct___anonstruct_Key_2 (select __anonstruct_Item_4_key_1 p)
      (0) (0) __anonstruct_Key_2_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       ((valid_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i)) (0) (0)
        __anonstruct_Value_3_alloc_table)
       /\
       (valid_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i)) (0) (0)
       __anonstruct_Key_2_alloc_table))))))))
  
  predicate strict_valid_struct___anonstruct_Item_4 (p : (pointer
  __anonstruct_Item_4)) (a : int) (b : int) (__anonstruct_Item_4_alloc_table
  : (alloc_table __anonstruct_Item_4)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Item_4_key_1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
  __anonstruct_Value_3)))
  =
     (((=) (offset_min __anonstruct_Item_4_alloc_table p) a) /\
     (((=) (offset_max __anonstruct_Item_4_alloc_table p) b) /\
     ((valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_1 p) (0) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     ((valid_struct___anonstruct_Key_2 (select __anonstruct_Item_4_key_1 p)
      (0) (0) __anonstruct_Key_2_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       ((valid_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_1 (shift p i)) (0) (0)
        __anonstruct_Value_3_alloc_table)
       /\
       (valid_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_1 (shift p i)) (0) (0)
       __anonstruct_Key_2_alloc_table))))))))
  
  axiom U___anonstruct_Item_4_int  :
  ((=) (int_of_tag __anonstruct_Item_4_tag) (4))
  
end

module Struct___anonstruct_Item_4_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Item_4
  (p : (pointer __anonstruct_Item_4)) 
   (__anonstruct_Item_4_alloc_table : ref (alloc_table __anonstruct_Item_4)) 
    (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
     (__anonstruct_Value_3_alloc_table : ref (alloc_table
      __anonstruct_Value_3)) 
      (__anonstruct_Item_4_key_1 : (memory __anonstruct_Item_4 (pointer
       __anonstruct_Key_2))) 
       (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
        __anonstruct_Value_3))) : unit
        requires {
          (("expl:Deallocation" ((=) p null)) \/
          (freeable !__anonstruct_Item_4_alloc_table p)) }
        writes { __anonstruct_Item_4_alloc_table,
        __anonstruct_Key_2_alloc_table, __anonstruct_Value_3_alloc_table }
        ensures {
          ((((=) p null) /\
           (((=) !__anonstruct_Item_4_alloc_table (old
            !__anonstruct_Item_4_alloc_table))
           /\
           (((=) !__anonstruct_Key_2_alloc_table (old
            !__anonstruct_Key_2_alloc_table))
           /\
           ((=) !__anonstruct_Value_3_alloc_table (old
           !__anonstruct_Value_3_alloc_table)))))
          \/
          ((frame_free_struct___anonstruct_Item_4 p (old
           !__anonstruct_Item_4_alloc_table) !__anonstruct_Item_4_alloc_table
           (old !__anonstruct_Key_2_alloc_table)
           !__anonstruct_Key_2_alloc_table (old
           !__anonstruct_Value_3_alloc_table)
           !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
           __anonstruct_Item_4_value_1)
          /\
          (fresh_alloc_struct___anonstruct_Item_4 p
          (offset_max (old !__anonstruct_Item_4_alloc_table) p)
          !__anonstruct_Item_4_alloc_table !__anonstruct_Key_2_alloc_table
          !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
          __anonstruct_Item_4_value_1))) }
  
  val allocate_struct___anonstruct_Item_4_requires
  (n : int) 
   (__anonstruct_Item_4_alloc_table : ref (alloc_table __anonstruct_Item_4)) 
    (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
     (__anonstruct_Value_3_alloc_table : ref (alloc_table
      __anonstruct_Value_3)) 
      (__anonstruct_Item_4_tag_table : ref (tag_table __anonstruct_Item_4)) 
       (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) 
        (__anonstruct_Value_3_tag_table : ref (tag_table
         __anonstruct_Value_3)) 
         (__anonstruct_Item_4_key_1 : (memory __anonstruct_Item_4 (pointer
          __anonstruct_Key_2))) 
          (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
           __anonstruct_Value_3))) : (pointer __anonstruct_Item_4)
           requires { ((>=) n (0)) } writes {
           __anonstruct_Item_4_alloc_table, __anonstruct_Item_4_tag_table,
           __anonstruct_Key_2_alloc_table, __anonstruct_Key_2_tag_table,
           __anonstruct_Value_3_alloc_table, __anonstruct_Value_3_tag_table }
           ensures {
             ((strict_valid_struct___anonstruct_Item_4 result (0)
              (Int.(-) n (1)) !__anonstruct_Item_4_alloc_table
              !__anonstruct_Key_2_alloc_table
              !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((frame_alloc_struct___anonstruct_Item_4 result n (old
              !__anonstruct_Item_4_alloc_table)
              !__anonstruct_Item_4_alloc_table (old
              !__anonstruct_Key_2_alloc_table)
              !__anonstruct_Key_2_alloc_table (old
              !__anonstruct_Value_3_alloc_table)
              !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((frame_tag_struct___anonstruct_Item_4 result (old
              !__anonstruct_Item_4_tag_table) !__anonstruct_Item_4_tag_table
              (old !__anonstruct_Key_2_tag_table)
              !__anonstruct_Key_2_tag_table (old
              !__anonstruct_Value_3_tag_table)
              !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((fresh_alloc_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Item_4_alloc_table) (old
              !__anonstruct_Key_2_alloc_table) (old
              !__anonstruct_Value_3_alloc_table) __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((fresh_tag_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Item_4_tag_table) (old
              !__anonstruct_Key_2_tag_table) (old
              !__anonstruct_Value_3_tag_table) __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((typeof_struct___anonstruct_Item_4 result (0) n
              !__anonstruct_Item_4_tag_table !__anonstruct_Key_2_tag_table
              !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             (container_of_struct___anonstruct_Item_4 result (0) n
             !__anonstruct_Item_4_tag_table !__anonstruct_Key_2_tag_table
             !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1))))))) }
  
end

module Struct___anonstruct_Item_4_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Item_4
  (p : (pointer __anonstruct_Item_4)) 
   (__anonstruct_Item_4_alloc_table : ref (alloc_table __anonstruct_Item_4)) 
    (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
     (__anonstruct_Value_3_alloc_table : ref (alloc_table
      __anonstruct_Value_3)) 
      (__anonstruct_Item_4_key_1 : (memory __anonstruct_Item_4 (pointer
       __anonstruct_Key_2))) 
       (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
        __anonstruct_Value_3))) : unit
        requires { true } writes { __anonstruct_Item_4_alloc_table,
        __anonstruct_Key_2_alloc_table, __anonstruct_Value_3_alloc_table }
        ensures {
          ((((=) p null) /\
           (((=) !__anonstruct_Item_4_alloc_table (old
            !__anonstruct_Item_4_alloc_table))
           /\
           (((=) !__anonstruct_Key_2_alloc_table (old
            !__anonstruct_Key_2_alloc_table))
           /\
           ((=) !__anonstruct_Value_3_alloc_table (old
           !__anonstruct_Value_3_alloc_table)))))
          \/
          ((frame_free_struct___anonstruct_Item_4 p (old
           !__anonstruct_Item_4_alloc_table) !__anonstruct_Item_4_alloc_table
           (old !__anonstruct_Key_2_alloc_table)
           !__anonstruct_Key_2_alloc_table (old
           !__anonstruct_Value_3_alloc_table)
           !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
           __anonstruct_Item_4_value_1)
          /\
          (fresh_alloc_struct___anonstruct_Item_4 p
          (offset_max (old !__anonstruct_Item_4_alloc_table) p)
          !__anonstruct_Item_4_alloc_table !__anonstruct_Key_2_alloc_table
          !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
          __anonstruct_Item_4_value_1))) }
  
  val allocate_struct___anonstruct_Item_4
  (n : int) 
   (__anonstruct_Item_4_alloc_table : ref (alloc_table __anonstruct_Item_4)) 
    (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
     (__anonstruct_Value_3_alloc_table : ref (alloc_table
      __anonstruct_Value_3)) 
      (__anonstruct_Item_4_tag_table : ref (tag_table __anonstruct_Item_4)) 
       (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) 
        (__anonstruct_Value_3_tag_table : ref (tag_table
         __anonstruct_Value_3)) 
         (__anonstruct_Item_4_key_1 : (memory __anonstruct_Item_4 (pointer
          __anonstruct_Key_2))) 
          (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
           __anonstruct_Value_3))) : (pointer __anonstruct_Item_4)
           requires { true } writes { __anonstruct_Item_4_alloc_table,
           __anonstruct_Item_4_tag_table, __anonstruct_Key_2_alloc_table,
           __anonstruct_Key_2_tag_table, __anonstruct_Value_3_alloc_table,
           __anonstruct_Value_3_tag_table }
           ensures {
             ((strict_valid_struct___anonstruct_Item_4 result (0)
              (Int.(-) n (1)) !__anonstruct_Item_4_alloc_table
              !__anonstruct_Key_2_alloc_table
              !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((frame_alloc_struct___anonstruct_Item_4 result n (old
              !__anonstruct_Item_4_alloc_table)
              !__anonstruct_Item_4_alloc_table (old
              !__anonstruct_Key_2_alloc_table)
              !__anonstruct_Key_2_alloc_table (old
              !__anonstruct_Value_3_alloc_table)
              !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((frame_tag_struct___anonstruct_Item_4 result (old
              !__anonstruct_Item_4_tag_table) !__anonstruct_Item_4_tag_table
              (old !__anonstruct_Key_2_tag_table)
              !__anonstruct_Key_2_tag_table (old
              !__anonstruct_Value_3_tag_table)
              !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((fresh_alloc_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Item_4_alloc_table) (old
              !__anonstruct_Key_2_alloc_table) (old
              !__anonstruct_Value_3_alloc_table) __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((fresh_tag_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Item_4_tag_table) (old
              !__anonstruct_Key_2_tag_table) (old
              !__anonstruct_Value_3_tag_table) __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             ((typeof_struct___anonstruct_Item_4 result (0) n
              !__anonstruct_Item_4_tag_table !__anonstruct_Key_2_tag_table
              !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
              __anonstruct_Item_4_value_1)
             /\
             (container_of_struct___anonstruct_Item_4 result (0) n
             !__anonstruct_Item_4_tag_table !__anonstruct_Key_2_tag_table
             !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1))))))) }
  
  val allocate_singleton_struct___anonstruct_Item_4
  (__anonstruct_Item_4_alloc_table : ref (alloc_table __anonstruct_Item_4)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Value_3_alloc_table : ref (alloc_table
     __anonstruct_Value_3)) 
     (__anonstruct_Item_4_tag_table : ref (tag_table __anonstruct_Item_4)) 
      (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) 
       (__anonstruct_Value_3_tag_table : ref (tag_table
        __anonstruct_Value_3)) 
        (__anonstruct_Item_4_key_1 : (memory __anonstruct_Item_4 (pointer
         __anonstruct_Key_2))) 
         (__anonstruct_Item_4_value_1 : (memory __anonstruct_Item_4 (pointer
          __anonstruct_Value_3))) : (pointer __anonstruct_Item_4)
          requires { true } writes { __anonstruct_Item_4_alloc_table,
          __anonstruct_Item_4_tag_table, __anonstruct_Key_2_alloc_table,
          __anonstruct_Key_2_tag_table, __anonstruct_Value_3_alloc_table,
          __anonstruct_Value_3_tag_table }
          ensures {
            ((strict_valid_struct___anonstruct_Item_4 result (0) (0)
             !__anonstruct_Item_4_alloc_table !__anonstruct_Key_2_alloc_table
             !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1)
            /\
            ((frame_alloc_struct___anonstruct_Item_4 result (1) (old
             !__anonstruct_Item_4_alloc_table)
             !__anonstruct_Item_4_alloc_table (old
             !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table
             (old !__anonstruct_Value_3_alloc_table)
             !__anonstruct_Value_3_alloc_table __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1)
            /\
            ((frame_tag_struct___anonstruct_Item_4 result (old
             !__anonstruct_Item_4_tag_table) !__anonstruct_Item_4_tag_table
             (old !__anonstruct_Key_2_tag_table)
             !__anonstruct_Key_2_tag_table (old
             !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table
             __anonstruct_Item_4_key_1 __anonstruct_Item_4_value_1)
            /\
            ((fresh_alloc_struct___anonstruct_Item_4 result (0) (old
             !__anonstruct_Item_4_alloc_table) (old
             !__anonstruct_Key_2_alloc_table) (old
             !__anonstruct_Value_3_alloc_table) __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1)
            /\
            ((fresh_tag_struct___anonstruct_Item_4 result (0) (old
             !__anonstruct_Item_4_tag_table) (old
             !__anonstruct_Key_2_tag_table) (old
             !__anonstruct_Value_3_tag_table) __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1)
            /\
            ((typeof_singleton_struct___anonstruct_Item_4 result
             !__anonstruct_Item_4_tag_table !__anonstruct_Key_2_tag_table
             !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
             __anonstruct_Item_4_value_1)
            /\
            (container_of_singleton_struct___anonstruct_Item_4 result
            !__anonstruct_Item_4_tag_table !__anonstruct_Key_2_tag_table
            !__anonstruct_Value_3_tag_table __anonstruct_Item_4_key_1
            __anonstruct_Item_4_value_1))))))) }
  
end

module Struct___anonstruct_Key_2_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_2 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Key_2
  (p : (pointer __anonstruct_Key_2)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) :
    unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Key_2_alloc_table p)) }
    writes { __anonstruct_Key_2_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_2_alloc_table (old
       !__anonstruct_Key_2_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_2 p (old
       !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_2 p
      (offset_max (old !__anonstruct_Key_2_alloc_table) p)
      !__anonstruct_Key_2_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_2_requires
  (n : int) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) :
     (pointer __anonstruct_Key_2)
     requires { ((>=) n (0)) } writes { __anonstruct_Key_2_alloc_table,
     __anonstruct_Key_2_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_2 result (0) (Int.(-) n (1))
        !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_2 result n (old
        !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_2 result (old
        !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_2 result (0) n
        !__anonstruct_Key_2_tag_table)
       /\
       (container_of_struct___anonstruct_Key_2 result (0) n
       !__anonstruct_Key_2_tag_table))))))) }
  
end

module Struct___anonstruct_Key_2_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_2 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Key_2
  (p : (pointer __anonstruct_Key_2)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) :
    unit
    requires { true } writes { __anonstruct_Key_2_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_2_alloc_table (old
       !__anonstruct_Key_2_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_2 p (old
       !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_2 p
      (offset_max (old !__anonstruct_Key_2_alloc_table) p)
      !__anonstruct_Key_2_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_2
  (n : int) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) :
     (pointer __anonstruct_Key_2)
     requires { true } writes { __anonstruct_Key_2_alloc_table,
     __anonstruct_Key_2_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_2 result (0) (Int.(-) n (1))
        !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_2 result n (old
        !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_2 result (old
        !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_2 result (0) n
        !__anonstruct_Key_2_tag_table)
       /\
       (container_of_struct___anonstruct_Key_2 result (0) n
       !__anonstruct_Key_2_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Key_2
  (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
   (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) :
    (pointer __anonstruct_Key_2)
    requires { true } writes { __anonstruct_Key_2_alloc_table,
    __anonstruct_Key_2_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Key_2 result (0) (0)
       !__anonstruct_Key_2_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Key_2 result (1) (old
       !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Key_2 result (old
       !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Key_2 result (0) (old
       !__anonstruct_Key_2_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Key_2 result (0) (old
       !__anonstruct_Key_2_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Key_2 result
       !__anonstruct_Key_2_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Key_2 result
      !__anonstruct_Key_2_tag_table))))))) }
  
end

theory Struct___anonstruct_Map_5

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Map_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Map_5_tag  : (tag_id
  __anonstruct_Map_5)
  
  axiom U___anonstruct_Map_5_parenttag_bottom  :
  (parenttag __anonstruct_Map_5_tag bottom_tag)
  
  axiom U___anonstruct_Map_5_is_final  :
  (forall __anonstruct_Map_5_tag_table : (tag_table __anonstruct_Map_5).
   (forall p : (pointer __anonstruct_Map_5).
    ((instanceof __anonstruct_Map_5_tag_table p __anonstruct_Map_5_tag) ->
     ((=) (typeof __anonstruct_Map_5_tag_table p) __anonstruct_Map_5_tag))))
  
  predicate frame_tag_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (old___anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5))
  =
     ((tag_extends old___anonstruct_Map_5_tag_table
      __anonstruct_Map_5_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Map_5_tag_table
     __anonstruct_Map_5_tag_table p))
  
  predicate frame_free_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (old___anonstruct_Map_5_alloc_table : (alloc_table
  __anonstruct_Map_5)) (__anonstruct_Map_5_alloc_table : (alloc_table
  __anonstruct_Map_5))
  =
     ((free_extends old___anonstruct_Map_5_alloc_table
      __anonstruct_Map_5_alloc_table)
     /\
     (free_block old___anonstruct_Map_5_alloc_table
     __anonstruct_Map_5_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (n : int) (old___anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5)) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  =
     ((alloc_extends old___anonstruct_Map_5_alloc_table
      __anonstruct_Map_5_alloc_table)
     /\
     (alloc_block old___anonstruct_Map_5_alloc_table
     __anonstruct_Map_5_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (n : int) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5)) = (tag_fresh __anonstruct_Map_5_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (n : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = (alloc_fresh __anonstruct_Map_5_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5)) = true
  
  predicate container_of_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (l : int) (r : int) (__anonstruct_Map_5_tag_table :
  (tag_table __anonstruct_Map_5)) = true
  
  predicate typeof_singleton_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5))
  = ((=) (typeof __anonstruct_Map_5_tag_table p) __anonstruct_Map_5_tag)
  
  predicate typeof_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (l : int) (r : int) (__anonstruct_Map_5_tag_table :
  (tag_table __anonstruct_Map_5))
  =
     (((=) (typeof __anonstruct_Map_5_tag_table p) __anonstruct_Map_5_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Map_5_tag_table (shift p i))
       __anonstruct_Map_5_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5))
  = (instanceof __anonstruct_Map_5_tag_table p __anonstruct_Map_5_tag)
  
  predicate instanceof_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (l : int) (r : int) (__anonstruct_Map_5_tag_table :
  (tag_table __anonstruct_Map_5))
  =
     ((instanceof __anonstruct_Map_5_tag_table p __anonstruct_Map_5_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Map_5_tag_table (shift p i)
       __anonstruct_Map_5_tag))))
  
  predicate right_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (b : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = ((>=) (offset_max __anonstruct_Map_5_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = ((<=) (offset_min __anonstruct_Map_5_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = ((=) (offset_min __anonstruct_Map_5_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (b : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  =
     (((<=) (offset_min __anonstruct_Map_5_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Map_5_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (b : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  =
     (((=) (offset_min __anonstruct_Map_5_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Map_5_alloc_table p) b))
  
  axiom U___anonstruct_Map_5_int  :
  ((=) (int_of_tag __anonstruct_Map_5_tag) (6))
  
end

module Struct___anonstruct_Map_5_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_5 
  
  use import Root___anonstruct_Map_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Map_5
  (p : (pointer __anonstruct_Map_5)) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) :
    unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Map_5_alloc_table p)) }
    writes { __anonstruct_Map_5_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_5_alloc_table (old
       !__anonstruct_Map_5_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_5 p (old
       !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_5 p
      (offset_max (old !__anonstruct_Map_5_alloc_table) p)
      !__anonstruct_Map_5_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_5_requires
  (n : int) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) 
    (__anonstruct_Map_5_tag_table : ref (tag_table __anonstruct_Map_5)) :
     (pointer __anonstruct_Map_5)
     requires { ((>=) n (0)) } writes { __anonstruct_Map_5_alloc_table,
     __anonstruct_Map_5_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_5 result (0) (Int.(-) n (1))
        !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_5 result n (old
        !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_5 result (old
        !__anonstruct_Map_5_tag_table) !__anonstruct_Map_5_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_5 result (0) n
        !__anonstruct_Map_5_tag_table)
       /\
       (container_of_struct___anonstruct_Map_5 result (0) n
       !__anonstruct_Map_5_tag_table))))))) }
  
end

module Struct___anonstruct_Map_5_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_5 
  
  use import Root___anonstruct_Map_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Map_5
  (p : (pointer __anonstruct_Map_5)) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) :
    unit
    requires { true } writes { __anonstruct_Map_5_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_5_alloc_table (old
       !__anonstruct_Map_5_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_5 p (old
       !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_5 p
      (offset_max (old !__anonstruct_Map_5_alloc_table) p)
      !__anonstruct_Map_5_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_5
  (n : int) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) 
    (__anonstruct_Map_5_tag_table : ref (tag_table __anonstruct_Map_5)) :
     (pointer __anonstruct_Map_5)
     requires { true } writes { __anonstruct_Map_5_alloc_table,
     __anonstruct_Map_5_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_5 result (0) (Int.(-) n (1))
        !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_5 result n (old
        !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_5 result (old
        !__anonstruct_Map_5_tag_table) !__anonstruct_Map_5_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_5 result (0) n
        !__anonstruct_Map_5_tag_table)
       /\
       (container_of_struct___anonstruct_Map_5 result (0) n
       !__anonstruct_Map_5_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Map_5
  (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) 
   (__anonstruct_Map_5_tag_table : ref (tag_table __anonstruct_Map_5)) :
    (pointer __anonstruct_Map_5)
    requires { true } writes { __anonstruct_Map_5_alloc_table,
    __anonstruct_Map_5_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Map_5 result (0) (0)
       !__anonstruct_Map_5_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Map_5 result (1) (old
       !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Map_5 result (old
       !__anonstruct_Map_5_tag_table) !__anonstruct_Map_5_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Map_5 result (0) (old
       !__anonstruct_Map_5_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Map_5 result (0) (old
       !__anonstruct_Map_5_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Map_5 result
       !__anonstruct_Map_5_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Map_5 result
      !__anonstruct_Map_5_tag_table))))))) }
  
end

module Struct___anonstruct_Value_3_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_3 
  
  use import Root___anonstruct_Value_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Value_3
  (p : (pointer __anonstruct_Value_3)) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Value_3_alloc_table p)) }
    writes { __anonstruct_Value_3_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_3_alloc_table (old
       !__anonstruct_Value_3_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_3 p (old
       !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_3 p
      (offset_max (old !__anonstruct_Value_3_alloc_table) p)
      !__anonstruct_Value_3_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_3_requires
  (n : int) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) 
    (__anonstruct_Value_3_tag_table : ref (tag_table __anonstruct_Value_3)) :
     (pointer __anonstruct_Value_3)
     requires { ((>=) n (0)) } writes { __anonstruct_Value_3_alloc_table,
     __anonstruct_Value_3_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_3 result (0) (Int.(-) n (1))
        !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_3 result n (old
        !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_3 result (old
        !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_3 result (0) n
        !__anonstruct_Value_3_tag_table)
       /\
       (container_of_struct___anonstruct_Value_3 result (0) n
       !__anonstruct_Value_3_tag_table))))))) }
  
end

module Struct___anonstruct_Value_3_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_3 
  
  use import Root___anonstruct_Value_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Value_3
  (p : (pointer __anonstruct_Value_3)) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) : unit
    requires { true } writes { __anonstruct_Value_3_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_3_alloc_table (old
       !__anonstruct_Value_3_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_3 p (old
       !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_3 p
      (offset_max (old !__anonstruct_Value_3_alloc_table) p)
      !__anonstruct_Value_3_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_3
  (n : int) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) 
    (__anonstruct_Value_3_tag_table : ref (tag_table __anonstruct_Value_3)) :
     (pointer __anonstruct_Value_3)
     requires { true } writes { __anonstruct_Value_3_alloc_table,
     __anonstruct_Value_3_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_3 result (0) (Int.(-) n (1))
        !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_3 result n (old
        !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_3 result (old
        !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_3 result (0) n
        !__anonstruct_Value_3_tag_table)
       /\
       (container_of_struct___anonstruct_Value_3 result (0) n
       !__anonstruct_Value_3_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Value_3
  (__anonstruct_Value_3_alloc_table : ref (alloc_table
   __anonstruct_Value_3)) 
   (__anonstruct_Value_3_tag_table : ref (tag_table __anonstruct_Value_3)) :
    (pointer __anonstruct_Value_3)
    requires { true } writes { __anonstruct_Value_3_alloc_table,
    __anonstruct_Value_3_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Value_3 result (0) (0)
       !__anonstruct_Value_3_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Value_3 result (1) (old
       !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Value_3 result (old
       !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Value_3 result (0) (old
       !__anonstruct_Value_3_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Value_3 result (0) (old
       !__anonstruct_Value_3_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Value_3 result
       !__anonstruct_Value_3_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Value_3 result
      !__anonstruct_Value_3_tag_table))))))) }
  
end

theory Struct_voidP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Voidp_tag_id 
  
  predicate frame_tag_struct_voidP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_voidP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (tag_fresh voidP_tag_table p)
  
  predicate fresh_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (alloc_fresh voidP_alloc_table p)
  
  predicate container_of_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_voidP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) voidP_tag)
  
  predicate typeof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) voidP_tag))))
  
  predicate instanceof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p voidP_tag)
  
  predicate instanceof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) voidP_tag))))
  
  predicate right_valid_struct_voidP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((>=) (offset_max voidP_alloc_table p) b)
  
  predicate left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((<=) (offset_min voidP_alloc_table p) a)
  
  predicate strict_left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((=) (offset_min voidP_alloc_table p) a)
  
  predicate valid_struct_voidP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  =
     (((<=) (offset_min voidP_alloc_table p) a) /\
     ((>=) (offset_max voidP_alloc_table p) b))
  
  predicate strict_valid_struct_voidP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  =
     (((=) (offset_min voidP_alloc_table p) a) /\
     ((=) (offset_max voidP_alloc_table p) b))
  
end

theory Struct_charP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import Struct_voidP 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Charp_tag_id 
  
  predicate frame_tag_struct_charP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_charP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (fresh_tag_struct_voidP p n voidP_tag_table)
  
  predicate fresh_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (fresh_alloc_struct_voidP p n voidP_alloc_table)
  
  predicate container_of_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_charP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) charP_tag)
  
  predicate typeof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) charP_tag))))
  
  predicate instanceof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p charP_tag)
  
  predicate instanceof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) charP_tag))))
  
  predicate right_valid_struct_charP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (right_valid_struct_voidP p b voidP_alloc_table)
  
  predicate left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate strict_left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (strict_left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate valid_struct_charP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (valid_struct_voidP p a b voidP_alloc_table)
  
  predicate strict_valid_struct_charP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  = (strict_valid_struct_voidP p a b voidP_alloc_table)
  
end

module Struct_charP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_charP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_charP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_charP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_charP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_charP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_charP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_charP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_charP result !voidP_tag_table) /\
      (container_of_singleton_struct_charP result !voidP_tag_table))))))) }
  
end

module Struct_voidP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_voidP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_voidP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_voidP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_voidP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_voidP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_voidP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_voidP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_voidP result !voidP_tag_table) /\
      (container_of_singleton_struct_voidP result !voidP_tag_table))))))) }
  
end

module Exceptions

  use why3.Bool.Bool 
  
  exception Loop_continue_exc unit
  
  exception Loop_exit_exc unit
  
  exception Return_label_exc unit
  
end

module Safe_bit_uint64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint8.to_int n)) \/
     (Bit_int8_of_Bit_uint8.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { (Int8.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Uint64.to_int n)) \/
     (Bit_uint32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { (Uint32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint64.to_int n)) \/
     (Bit_uint16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint64.to_int n)) \/
     (Bit_int8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { (Int8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires {
     ((Bit_int64.in_bounds (Uint64.to_int n)) \/
     (Bit_int64_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { (Int64.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint64.to_int n)) \/
     (Bit_int32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { (Int32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint64.to_int n)) \/
     (Bit_int16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { (Int16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint32.to_int n)) \/
     (Bit_uint16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint32.to_int n)) \/
     (Bit_int8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { (Int8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint32.to_int n)) \/
     (Bit_int32_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { (Int32.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint32.to_int n)) \/
     (Bit_int16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { (Int16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint16.to_int n)) \/
     (Bit_int8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { (Int8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint16.to_int n)) \/
     (Bit_int16_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { (Int16.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Int64.to_int n)) \/
     (Bit_int32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { (Int32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int64.to_int n)) \/
     (Bit_int16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { (Int16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int32.to_int n)) \/
     (Bit_int16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { (Int16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint64.to_int n)) \/
     (Bit_uint8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint32.to_int n)) \/
     (Bit_uint8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint16.to_int n)) \/
     (Bit_uint8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int8.to_int n)) \/
     (Bit_uint8_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { (Uint8.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int64.to_int n)) \/
     (Bit_uint8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { (Uint8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int32.to_int n)) \/
     (Bit_uint8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { (Uint8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int16.to_int n)) \/
     (Bit_uint8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { (Uint8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int8.to_int n)) \/
     (Bit_uint64_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { (Uint64.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true } ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int64.to_int n)) \/
     (Bit_uint64_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { (Uint64.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int32.to_int n)) \/
     (Bit_uint64_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { (Uint64.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int16.to_int n)) \/
     (Bit_uint64_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { (Uint64.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int8.to_int n)) \/
     (Bit_uint32_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { (Uint32.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true } ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int64.to_int n)) \/
     (Bit_uint32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { (Uint32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int32.to_int n)) \/
     (Bit_uint32_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { (Uint32.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int16.to_int n)) \/
     (Bit_uint32_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { (Uint32.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int8.to_int n)) \/
     (Bit_uint16_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { (Uint16.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true } ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int64.to_int n)) \/
     (Bit_uint16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { (Uint16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int32.to_int n)) \/
     (Bit_uint16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { (Uint16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int16.to_int n)) \/
     (Bit_uint16_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { (Uint16.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int64.to_int n)) \/
     (Bit_int8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { (Int8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int32.to_int n)) \/
     (Bit_int8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { (Int8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int16.to_int n)) \/
     (Bit_int8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { (Int8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

theory Logic_is_valid_map_mem

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map_mem (map_6 : (pointer __anonstruct_Map_5))
  (__anonstruct_Value_3_items_52_alloc_table_at_L : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Map_5_map_6_6_alloc_table_at_L :
  (alloc_table __anonstruct_Map_5))
  (__anonstruct_Key_2_items_52_alloc_table_at_L : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Item_4_items_52_alloc_table_at_L :
  (alloc_table __anonstruct_Item_4))
  (__anonstruct_Map_5_capacity_map_6_6_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_6_6_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_value_1_items_52_at_L : (memory __anonstruct_Item_4
  (pointer __anonstruct_Value_3))) (__anonstruct_Item_4_key_1_items_52_at_L :
  (memory __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  =
     ((((<=) (offset_min __anonstruct_Map_5_map_6_6_alloc_table_at_L map_6)
       (0))
      /\
      (((>=) (offset_max __anonstruct_Map_5_map_6_6_alloc_table_at_L map_6)
       (0))
      /\ ((=) true true)))
     /\
     (((=)
      (offset_max __anonstruct_Item_4_items_52_alloc_table_at_L
      (select __anonstruct_Map_5_items_map_6_6_at_L map_6))
      (Int.(-)
      (Int32.to_int (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6))
      (1)))
     /\
     ((not
      (((<=)
       (offset_min __anonstruct_Item_4_items_52_alloc_table_at_L
       (select __anonstruct_Map_5_items_map_6_6_at_L map_6))
       (Int32.to_int (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6)))
      /\
      (((>=)
       (offset_max __anonstruct_Item_4_items_52_alloc_table_at_L
       (select __anonstruct_Map_5_items_map_6_6_at_L map_6))
       (Int32.to_int (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6)))
      /\
      (forall __framac_tmp4 : int.
       ((((<=)
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6))
         __framac_tmp4)
        /\
        ((<=) __framac_tmp4
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6)))) ->
        (((<=)
         (offset_min __anonstruct_Key_2_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_key_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp4))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Key_2_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_key_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp4))) (0))
        /\
        (((=) true true) /\
        (((<=)
         (offset_min __anonstruct_Value_3_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_value_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp4))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Value_3_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_value_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp4))) (0))
        /\ ((=) true true)))))))))))
     /\
     (if
      ((<=) (0)
      (Int.(-)
      (Int32.to_int (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6))
      (1))) then
      (((<=)
       (offset_min __anonstruct_Item_4_items_52_alloc_table_at_L
       (select __anonstruct_Map_5_items_map_6_6_at_L map_6)) (0))
      /\
      (((>=)
       (offset_max __anonstruct_Item_4_items_52_alloc_table_at_L
       (select __anonstruct_Map_5_items_map_6_6_at_L map_6))
       (Int.(-)
       (Int32.to_int (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6))
       (1)))
      /\
      (forall __framac_tmp1 : int.
       ((((<=) (0) __framac_tmp1) /\
        ((<=) __framac_tmp1
        (Int.(-)
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_6_6_at_L map_6)) (1)))) ->
        (((<=)
         (offset_min __anonstruct_Key_2_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_key_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp1))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Key_2_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_key_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp1))) (0))
        /\
        (((=) true true) /\
        (((<=)
         (offset_min __anonstruct_Value_3_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_value_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp1))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Value_3_items_52_alloc_table_at_L
         (select __anonstruct_Item_4_value_1_items_52_at_L
         (shift (select __anonstruct_Map_5_items_map_6_6_at_L map_6)
         __framac_tmp1))) (0))
        /\ ((=) true true)))))))))) else ((=) true true)))))
  
  
end

theory Logic_is_valid_map_sizes

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map_sizes (map_7 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_7_7_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_7_7_at_L : (memory
  __anonstruct_Map_5 Int32.t))
  =
     ((Int32.(<=) (#"map_h.jc" 126 7 19# "expl:Integer cast" (Int32.of_int
      (0))) (select __anonstruct_Map_5_count_map_7_7_at_L map_7))
     /\
     ((Int32.(<=) (select __anonstruct_Map_5_count_map_7_7_at_L map_7)
      (select __anonstruct_Map_5_capacity_map_7_7_at_L map_7))
     /\
     (Int32.(<=) (select __anonstruct_Map_5_capacity_map_7_7_at_L map_7)
     (#"map_h.jc" 127 25 46# "expl:Integer cast" (Int32.of_int
     (2147483647))))))
  
  
end

theory Logic_begin_ok

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate begin_ok (map_8 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_8_8_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_8_8_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_53_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     ((Int32.(>) (select __anonstruct_Map_5_count_map_8_8_at_L map_8)
      (#"map_h.jc" 130 20 32# "expl:Integer cast" (Int32.of_int (0)))) ->
      (Int32.(=)
      (select __anonstruct_Item_4_existent_items_53_at_L
      (shift (select __anonstruct_Map_5_items_map_8_8_at_L map_8) (0)))
      (#"map_h.jc" 131 37 49# "expl:Integer cast" (Int32.of_int (1)))))
  
  
end

theory Logic_is_valid_item

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_valid_item (map_9 : (pointer __anonstruct_Map_5)) (idx : int)
  (__anonstruct_Map_5_capacity_map_9_9_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_9_9_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_54_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     ((((<=) (0) idx) /\
      ((<) idx
      (Int32.to_int (select __anonstruct_Map_5_capacity_map_9_9_at_L map_9))))
      ->
      ((Int32.(<=) (#"map_h.jc" 135 8 20# "expl:Integer cast" (Int32.of_int
       (0)))
       (select __anonstruct_Item_4_existent_items_54_at_L
       (shift (select __anonstruct_Map_5_items_map_9_9_at_L map_9) idx)))
      /\
      (Int32.(<=)
      (select __anonstruct_Item_4_existent_items_54_at_L
      (shift (select __anonstruct_Map_5_items_map_9_9_at_L map_9) idx))
      (#"map_h.jc" 136 41 53# "expl:Integer cast" (Int32.of_int (1))))))
  
  
end

theory Logic_count_ok

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_MapCount 
  
  use why3.Bool.Bool 
  
  predicate count_ok (map_10 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_10_10_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_10_10_at_L : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_items_map_10_10_at_L :
  (memory __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_111_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     ((=)
     (count_exist map_10 __anonstruct_Map_5_capacity_map_10_10_at_L
     __anonstruct_Map_5_items_map_10_10_at_L
     __anonstruct_Item_4_existent_items_111_at_L)
     (Int32.to_int (select __anonstruct_Map_5_count_map_10_10_at_L map_10)))
  
  
end

theory Logic_gap_ok

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate gap_ok (map_11 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_11_11_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_11_11_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_55_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     (forall i : int.
      (forall j : int.
       ((((<) (Int.(+) i (1)) j) /\
        (((<) j
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_11_11_at_L map_11)))
        /\
        (((<=) (0) i) /\
        (((<) i
         (Int.(-)
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_11_11_at_L map_11)) (1)))
        /\
        ((Int32.(=)
         (select __anonstruct_Item_4_existent_items_55_at_L
         (shift (select __anonstruct_Map_5_items_map_11_11_at_L map_11) i))
         (#"map_h.jc" 147 44 56# "expl:Integer cast" (Int32.of_int (0))))
        /\
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_55_at_L
        (shift (select __anonstruct_Map_5_items_map_11_11_at_L map_11)
        (Int.(+) i (1)))) (#"map_h.jc" 148 49 61# "expl:Integer cast"
        (Int32.of_int (0))))))))) ->
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_55_at_L
        (shift (select __anonstruct_Map_5_items_map_11_11_at_L map_11) j))
        (#"map_h.jc" 149 42 54# "expl:Integer cast" (Int32.of_int (0)))))))
  
  
end

theory Logic_is_valid_items

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_item 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_valid_items (map_12 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_12_12_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_12_12_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_115_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     (forall i_0 : int.
      ((((<=) (0) i_0) /\
       ((<) i_0
       (Int32.to_int
       (select __anonstruct_Map_5_capacity_map_12_12_at_L map_12)))) ->
       (is_valid_item map_12 i_0 __anonstruct_Map_5_capacity_map_12_12_at_L
       __anonstruct_Map_5_items_map_12_12_at_L
       __anonstruct_Item_4_existent_items_115_at_L)))
  
  
end

theory Logic_compare_keys

  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_keys (k1 : (pointer __anonstruct_Key_2)) (k2 : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_b_k2_14_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_k1_13_at_L1 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k2_14_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k1_13_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     ((Int32.(=) (select __anonstruct_Key_2_a_k1_13_at_L1 k1)
      (select __anonstruct_Key_2_a_k2_14_at_L2 k2))
     /\
     (Int32.(=) (select __anonstruct_Key_2_b_k1_13_at_L1 k1)
     (select __anonstruct_Key_2_b_k2_14_at_L2 k2)))
  
  
end

theory Logic_compare_values

  use import Root___anonstruct_Value_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_values (v1 : (pointer __anonstruct_Value_3)) (v2 :
  (pointer __anonstruct_Value_3)) (__anonstruct_Value_3_d_v2_16_at_L2 :
  (memory __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_v1_15_at_L1
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_v2_16_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_v1_15_at_L1 : (memory
  __anonstruct_Value_3 Int32.t))
  =
     ((Int32.(=) (select __anonstruct_Value_3_c_v1_15_at_L1 v1)
      (select __anonstruct_Value_3_c_v2_16_at_L2 v2))
     /\
     (Int32.(=) (select __anonstruct_Value_3_d_v1_15_at_L1 v1)
     (select __anonstruct_Value_3_d_v2_16_at_L2 v2)))
  
  
end

theory Logic_compare_keys_now

  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_keys_now (k1_0 : (pointer __anonstruct_Key_2)) (k2_0 :
  (pointer __anonstruct_Key_2)) (__anonstruct_Key_2_b_k2_0_18_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_k1_0_17_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k2_0_18_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k1_0_17_at_L : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (compare_keys k1_0 k2_0 __anonstruct_Key_2_b_k2_0_18_at_L
     __anonstruct_Key_2_b_k1_0_17_at_L __anonstruct_Key_2_a_k2_0_18_at_L
     __anonstruct_Key_2_a_k1_0_17_at_L)
  
  
end

theory Logic_compare_values_now

  use import Root___anonstruct_Value_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_compare_values 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_values_now (v1_0 : (pointer __anonstruct_Value_3)) (v2_0
  : (pointer __anonstruct_Value_3)) (__anonstruct_Value_3_d_v2_0_20_at_L :
  (memory __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_v1_0_19_at_L
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_v2_0_20_at_L : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_v1_0_19_at_L : (memory
  __anonstruct_Value_3 Int32.t))
  =
     (compare_values v1_0 v2_0 __anonstruct_Value_3_d_v2_0_20_at_L
     __anonstruct_Value_3_d_v1_0_19_at_L __anonstruct_Value_3_c_v2_0_20_at_L
     __anonstruct_Value_3_c_v1_0_19_at_L)
  
  
end

theory Logic_valid_existence

  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate valid_existence (it : (pointer __anonstruct_Item_4))
  (__anonstruct_Item_4_existent_it_21_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     ((Int32.(<=) (#"map_h.jc" 173 6 18# "expl:Integer cast" (Int32.of_int
      (0))) (select __anonstruct_Item_4_existent_it_21_at_L it))
     /\
     (Int32.(<=) (select __anonstruct_Item_4_existent_it_21_at_L it)
     (#"map_h.jc" 173 54 66# "expl:Integer cast" (Int32.of_int (1)))))
  
  
end

theory Logic_item_exists_t

  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate item_exists_t (it_0 : (pointer __anonstruct_Item_4))
  (__anonstruct_Item_4_existent_it_0_22_at_L : (memory __anonstruct_Item_4
  Int32.t))
  =
     (Int32.(=) (select __anonstruct_Item_4_existent_it_0_22_at_L it_0)
     (#"map_h.jc" 176 25 37# "expl:Integer cast" (Int32.of_int (1))))
  
  
end

theory Logic_get_key_t

  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_key_t (it_1 : (pointer __anonstruct_Item_4))
  (__anonstruct_Item_4_key_1_it_1_23_at_L : (memory __anonstruct_Item_4
  (pointer __anonstruct_Key_2))) : (pointer __anonstruct_Key_2)
  = (select __anonstruct_Item_4_key_1_it_1_23_at_L it_1)
  
  
end

theory Logic_get_value_t

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_value_t (it_2 : (pointer __anonstruct_Item_4))
  (__anonstruct_Item_4_value_1_it_2_25_at_L : (memory __anonstruct_Item_4
  (pointer __anonstruct_Value_3))) : (pointer __anonstruct_Value_3)
  = (select __anonstruct_Item_4_value_1_it_2_25_at_L it_2)
  
  
end

theory Logic_get_item_t

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_item_t (map_13 : (pointer __anonstruct_Map_5)) (idx_0 : int)
  (__anonstruct_Map_5_items_map_13_27_at_L : (memory __anonstruct_Map_5
  (pointer __anonstruct_Item_4))) : (pointer __anonstruct_Item_4)
  = (shift (select __anonstruct_Map_5_items_map_13_27_at_L map_13) idx_0)
  
  
end

theory Logic_all_valid_existence

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_valid_existence 
  
  use import Logic_get_item_t 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate all_valid_existence (map_14 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_14_29_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_14_29_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_get_item_t_57_at_L : (memory
  __anonstruct_Item_4 Int32.t))
  =
     (forall i_1 : int.
      ((((<=) (0) i_1) /\
       ((<=) i_1
       (Int32.to_int
       (select __anonstruct_Map_5_capacity_map_14_29_at_L map_14)))) ->
       (valid_existence
       (get_item_t map_14 i_1 __anonstruct_Map_5_items_map_14_29_at_L)
       __anonstruct_Item_4_existent_get_item_t_57_at_L)))
  
  
end

theory Logic_unique_keys

  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_keys_now 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate unique_keys (map_15 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_15_30_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_15_30_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_get_item_t_58_at_L : (memory
  __anonstruct_Item_4 Int32.t)) (__anonstruct_Item_4_key_1_get_item_t_58_at_L
  : (memory __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Key_2_b_get_item_t_58_at_L : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_58_at_L : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (forall i_2 : int.
      (forall j_0 : int.
       ((((<=) (0) i_2) /\
        (((<) i_2
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_15_30_at_L map_15)))
        /\
        (((>)
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_15_30_at_L map_15)) j_0)
        /\
        (((>) j_0 i_2) /\
        ((item_exists_t
         (get_item_t map_15 i_2 __anonstruct_Map_5_items_map_15_30_at_L)
         __anonstruct_Item_4_existent_get_item_t_58_at_L)
        /\
        (item_exists_t
        (get_item_t map_15 j_0 __anonstruct_Map_5_items_map_15_30_at_L)
        __anonstruct_Item_4_existent_get_item_t_58_at_L)))))) ->
        (not
        (compare_keys_now
        (get_key_t
        (get_item_t map_15 i_2 __anonstruct_Map_5_items_map_15_30_at_L)
        __anonstruct_Item_4_key_1_get_item_t_58_at_L)
        (get_key_t
        (get_item_t map_15 j_0 __anonstruct_Map_5_items_map_15_30_at_L)
        __anonstruct_Item_4_key_1_get_item_t_58_at_L)
        __anonstruct_Key_2_b_get_item_t_58_at_L
        __anonstruct_Key_2_b_get_item_t_58_at_L
        __anonstruct_Key_2_a_get_item_t_58_at_L
        __anonstruct_Key_2_a_get_item_t_58_at_L)))))
  
  
end

theory Logic_compare_items

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_items (i1 : (pointer __anonstruct_Item_4)) (i2 : (pointer
  __anonstruct_Item_4)) (__anonstruct_Item_4_value_1_i2_32_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_value_1_i1_31_at_L1 : (memory __anonstruct_Item_4
  (pointer __anonstruct_Value_3))) (__anonstruct_Item_4_key_1_i2_32_at_L2 :
  (memory __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_key_1_i1_31_at_L1 : (memory __anonstruct_Item_4
  (pointer __anonstruct_Key_2))) (__anonstruct_Value_3_d_i2_32_at_L2 :
  (memory __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_i1_31_at_L1
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_i2_32_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_i1_31_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Key_2_b_i2_32_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_i1_31_at_L1 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_i2_32_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_i1_31_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     ((compare_keys (select __anonstruct_Item_4_key_1_i1_31_at_L1 i1)
      (select __anonstruct_Item_4_key_1_i2_32_at_L2 i2)
      __anonstruct_Key_2_b_i2_32_at_L2 __anonstruct_Key_2_b_i1_31_at_L1
      __anonstruct_Key_2_a_i2_32_at_L2 __anonstruct_Key_2_a_i1_31_at_L1)
     /\
     (compare_values (select __anonstruct_Item_4_value_1_i1_31_at_L1 i1)
     (select __anonstruct_Item_4_value_1_i2_32_at_L2 i2)
     __anonstruct_Value_3_d_i2_32_at_L2 __anonstruct_Value_3_d_i1_31_at_L1
     __anonstruct_Value_3_c_i2_32_at_L2 __anonstruct_Value_3_c_i1_31_at_L1))
  
  
end

theory Logic_count_lowers

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate count_lowers (map_16 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_16_33_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_count_map_16_33_at_L1 : (memory
  __anonstruct_Map_5 Int32.t))
  =
     ((=)
     (Int32.to_int (select __anonstruct_Map_5_count_map_16_33_at_L1 map_16))
     (Int.(+)
     (Int32.to_int (select __anonstruct_Map_5_count_map_16_33_at_L2 map_16))
     (1)))
  
  
end

theory Logic_same_count

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate same_count (map_17 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_17_34_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_count_map_17_34_at_L1 : (memory
  __anonstruct_Map_5 Int32.t))
  =
     (Int32.(=) (select __anonstruct_Map_5_count_map_17_34_at_L1 map_17)
     (select __anonstruct_Map_5_count_map_17_34_at_L2 map_17))
  
  
end

theory Logic_same_capacity

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate same_capacity (map_18 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_18_35_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_18_35_at_L1 : (memory
  __anonstruct_Map_5 Int32.t))
  =
     (Int32.(=) (select __anonstruct_Map_5_capacity_map_18_35_at_L1 map_18)
     (select __anonstruct_Map_5_capacity_map_18_35_at_L2 map_18))
  
  
end

theory Logic_same_items

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate same_items (map_19 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_19_36_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_19_36_at_L2 : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Map_5_items_map_19_36_at_L1 : (memory __anonstruct_Map_5
  (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_get_item_t_64_at_L2 : (memory
  __anonstruct_Item_4 Int32.t))
  (__anonstruct_Item_4_existent_get_item_t_64_at_L1 : (memory
  __anonstruct_Item_4 Int32.t))
  (__anonstruct_Item_4_value_1_get_item_t_64_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_value_1_get_item_t_64_at_L1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_key_1_get_item_t_64_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_key_1_get_item_t_64_at_L1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Value_3_d_get_item_t_64_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_d_get_item_t_64_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_c_get_item_t_64_at_L2
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_get_item_t_64_at_L1 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Key_2_b_get_item_t_64_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_get_item_t_64_at_L1 :
  (memory __anonstruct_Key_2 Int32.t))
  (__anonstruct_Key_2_a_get_item_t_64_at_L2 : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_64_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (forall i_3 : int.
      ((((<=) (0) i_3) /\
       (((<) i_3
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_19_36_at_L2 map_19)))
       /\
       ((item_exists_t
        (get_item_t map_19 i_3 __anonstruct_Map_5_items_map_19_36_at_L1)
        __anonstruct_Item_4_existent_get_item_t_64_at_L1)
       /\
       (item_exists_t
       (get_item_t map_19 i_3 __anonstruct_Map_5_items_map_19_36_at_L2)
       __anonstruct_Item_4_existent_get_item_t_64_at_L2)))) ->
       (compare_items
       (shift (select __anonstruct_Map_5_items_map_19_36_at_L1 map_19) i_3)
       (shift (select __anonstruct_Map_5_items_map_19_36_at_L2 map_19) i_3)
       __anonstruct_Item_4_value_1_get_item_t_64_at_L2
       __anonstruct_Item_4_value_1_get_item_t_64_at_L1
       __anonstruct_Item_4_key_1_get_item_t_64_at_L2
       __anonstruct_Item_4_key_1_get_item_t_64_at_L1
       __anonstruct_Value_3_d_get_item_t_64_at_L2
       __anonstruct_Value_3_d_get_item_t_64_at_L1
       __anonstruct_Value_3_c_get_item_t_64_at_L2
       __anonstruct_Value_3_c_get_item_t_64_at_L1
       __anonstruct_Key_2_b_get_item_t_64_at_L2
       __anonstruct_Key_2_b_get_item_t_64_at_L1
       __anonstruct_Key_2_a_get_item_t_64_at_L2
       __anonstruct_Key_2_a_get_item_t_64_at_L1)))
  
  
end

theory Logic_no_mchg

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_keys 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate no_mchg (map_20 : (pointer __anonstruct_Map_5)) (key : (pointer
  __anonstruct_Key_2)) (__anonstruct_Map_5_capacity_map_20_37_at_L2 : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_capacity_map_20_37_at_L1 :
  (memory __anonstruct_Map_5 Int32.t))
  (__anonstruct_Map_5_items_map_20_37_at_L2 : (memory __anonstruct_Map_5
  (pointer __anonstruct_Item_4))) (__anonstruct_Map_5_items_map_20_37_at_L1 :
  (memory __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_get_item_t_67_at_L2 : (memory
  __anonstruct_Item_4 Int32.t))
  (__anonstruct_Item_4_existent_get_item_t_67_at_L1 : (memory
  __anonstruct_Item_4 Int32.t))
  (__anonstruct_Item_4_value_1_get_item_t_67_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_value_1_get_item_t_67_at_L1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_key_1_get_item_t_67_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_key_1_get_item_t_67_at_L1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Value_3_d_get_item_t_67_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_d_get_item_t_67_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_c_get_item_t_67_at_L2
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_get_item_t_67_at_L1 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Key_2_b_get_item_t_67_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_get_item_t_67_at_L1 :
  (memory __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_key_38_at_L1 :
  (memory __anonstruct_Key_2 Int32.t))
  (__anonstruct_Key_2_a_get_item_t_67_at_L2 : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_67_at_L1 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_key_38_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (forall i_4 : int.
      ((((<=) (0) i_4) /\
       (((<) i_4
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_20_37_at_L1 map_20)))
       /\
       ((item_exists_t
        (get_item_t map_20 i_4 __anonstruct_Map_5_items_map_20_37_at_L1)
        __anonstruct_Item_4_existent_get_item_t_67_at_L1)
       /\
       (not
       (compare_keys key
       (get_key_t
       (get_item_t map_20 i_4 __anonstruct_Map_5_items_map_20_37_at_L1)
       __anonstruct_Item_4_key_1_get_item_t_67_at_L1)
       __anonstruct_Key_2_b_get_item_t_67_at_L1
       __anonstruct_Key_2_b_key_38_at_L1
       __anonstruct_Key_2_a_get_item_t_67_at_L1
       __anonstruct_Key_2_a_key_38_at_L1))))) ->
       (exists j_1 : int.
        ((((<=) (0) j_1) /\
         (((<) j_1
          (Int32.to_int
          (select __anonstruct_Map_5_capacity_map_20_37_at_L2 map_20)))
         /\
         (item_exists_t
         (get_item_t map_20 j_1 __anonstruct_Map_5_items_map_20_37_at_L2)
         __anonstruct_Item_4_existent_get_item_t_67_at_L2))) ->
         (compare_items
         (get_item_t map_20 i_4 __anonstruct_Map_5_items_map_20_37_at_L1)
         (get_item_t map_20 j_1 __anonstruct_Map_5_items_map_20_37_at_L2)
         __anonstruct_Item_4_value_1_get_item_t_67_at_L2
         __anonstruct_Item_4_value_1_get_item_t_67_at_L1
         __anonstruct_Item_4_key_1_get_item_t_67_at_L2
         __anonstruct_Item_4_key_1_get_item_t_67_at_L1
         __anonstruct_Value_3_d_get_item_t_67_at_L2
         __anonstruct_Value_3_d_get_item_t_67_at_L1
         __anonstruct_Value_3_c_get_item_t_67_at_L2
         __anonstruct_Value_3_c_get_item_t_67_at_L1
         __anonstruct_Key_2_b_get_item_t_67_at_L2
         __anonstruct_Key_2_b_get_item_t_67_at_L1
         __anonstruct_Key_2_a_get_item_t_67_at_L2
         __anonstruct_Key_2_a_get_item_t_67_at_L1)))))
  
  
end

theory Logic_no_new

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate no_new (map_21 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_21_39_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_21_39_at_L1 : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_items_map_21_39_at_L2 :
  (memory __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Map_5_items_map_21_39_at_L1 : (memory __anonstruct_Map_5
  (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_get_item_t_73_at_L2 : (memory
  __anonstruct_Item_4 Int32.t))
  (__anonstruct_Item_4_existent_get_item_t_73_at_L1 : (memory
  __anonstruct_Item_4 Int32.t))
  (__anonstruct_Item_4_value_1_get_item_t_73_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_value_1_get_item_t_73_at_L1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_key_1_get_item_t_73_at_L2 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_key_1_get_item_t_73_at_L1 : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Key_2)))
  (__anonstruct_Value_3_d_get_item_t_73_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_d_get_item_t_73_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_c_get_item_t_73_at_L2
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_get_item_t_73_at_L1 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Key_2_b_get_item_t_73_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_get_item_t_73_at_L1 :
  (memory __anonstruct_Key_2 Int32.t))
  (__anonstruct_Key_2_a_get_item_t_73_at_L2 : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_73_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (forall i_5 : int.
      ((((<=) (0) i_5) /\
       (((<) i_5
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_21_39_at_L2 map_21)))
       /\
       (item_exists_t
       (get_item_t map_21 i_5 __anonstruct_Map_5_items_map_21_39_at_L2)
       __anonstruct_Item_4_existent_get_item_t_73_at_L2))) ->
       (exists j_2 : int.
        ((((<=) (0) j_2) /\
         (((<=) j_2
          (Int32.to_int
          (select __anonstruct_Map_5_capacity_map_21_39_at_L1 map_21)))
         /\
         (item_exists_t
         (get_item_t map_21 j_2 __anonstruct_Map_5_items_map_21_39_at_L1)
         __anonstruct_Item_4_existent_get_item_t_73_at_L1))) ->
         (compare_items
         (get_item_t map_21 i_5 __anonstruct_Map_5_items_map_21_39_at_L2)
         (get_item_t map_21 j_2 __anonstruct_Map_5_items_map_21_39_at_L1)
         __anonstruct_Item_4_value_1_get_item_t_73_at_L2
         __anonstruct_Item_4_value_1_get_item_t_73_at_L1
         __anonstruct_Item_4_key_1_get_item_t_73_at_L2
         __anonstruct_Item_4_key_1_get_item_t_73_at_L1
         __anonstruct_Value_3_d_get_item_t_73_at_L2
         __anonstruct_Value_3_d_get_item_t_73_at_L1
         __anonstruct_Value_3_c_get_item_t_73_at_L2
         __anonstruct_Value_3_c_get_item_t_73_at_L1
         __anonstruct_Key_2_b_get_item_t_73_at_L2
         __anonstruct_Key_2_b_get_item_t_73_at_L1
         __anonstruct_Key_2_a_get_item_t_73_at_L2
         __anonstruct_Key_2_a_get_item_t_73_at_L1)))))
  
  
end

theory Logic_is_valid_map

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_unique_keys 
  
  use import Logic_is_valid_map_sizes 
  
  use import Logic_is_valid_map_mem 
  
  use import Logic_is_valid_items 
  
  use import Logic_gap_ok 
  
  use import Logic_count_ok 
  
  use import Logic_begin_ok 
  
  use import Logic_all_valid_existence 
  
  use enum.Int32 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map (map_22 : (pointer __anonstruct_Map_5))
  (__anonstruct_Value_3_items_243_alloc_table_at_L : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Map_5_map_22_40_alloc_table_at_L :
  (alloc_table __anonstruct_Map_5))
  (__anonstruct_Key_2_items_243_alloc_table_at_L : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Item_4_items_243_alloc_table_at_L :
  (alloc_table __anonstruct_Item_4)) (__anonstruct_Map_5_count_map_22_40_at_L
  : (memory __anonstruct_Map_5 Int32.t))
  (__anonstruct_Map_5_capacity_map_22_40_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_22_40_at_L : (memory
  __anonstruct_Map_5 (pointer __anonstruct_Item_4)))
  (__anonstruct_Item_4_existent_items_243_at_L : (memory __anonstruct_Item_4
  Int32.t)) (__anonstruct_Item_4_value_1_items_243_at_L : (memory
  __anonstruct_Item_4 (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_key_1_items_243_at_L : (memory __anonstruct_Item_4
  (pointer __anonstruct_Key_2))) (__anonstruct_Key_2_b_items_243_at_L :
  (memory __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_items_243_at_L :
  (memory __anonstruct_Key_2 Int32.t))
  =
     ((is_valid_map_mem map_22
      __anonstruct_Value_3_items_243_alloc_table_at_L
      __anonstruct_Map_5_map_22_40_alloc_table_at_L
      __anonstruct_Key_2_items_243_alloc_table_at_L
      __anonstruct_Item_4_items_243_alloc_table_at_L
      __anonstruct_Map_5_capacity_map_22_40_at_L
      __anonstruct_Map_5_items_map_22_40_at_L
      __anonstruct_Item_4_value_1_items_243_at_L
      __anonstruct_Item_4_key_1_items_243_at_L)
     /\
     ((is_valid_map_sizes map_22 __anonstruct_Map_5_count_map_22_40_at_L
      __anonstruct_Map_5_capacity_map_22_40_at_L)
     /\
     ((is_valid_items map_22 __anonstruct_Map_5_capacity_map_22_40_at_L
      __anonstruct_Map_5_items_map_22_40_at_L
      __anonstruct_Item_4_existent_items_243_at_L)
     /\
     ((count_ok map_22 __anonstruct_Map_5_count_map_22_40_at_L
      __anonstruct_Map_5_capacity_map_22_40_at_L
      __anonstruct_Map_5_items_map_22_40_at_L
      __anonstruct_Item_4_existent_items_243_at_L)
     /\
     ((begin_ok map_22 __anonstruct_Map_5_count_map_22_40_at_L
      __anonstruct_Map_5_items_map_22_40_at_L
      __anonstruct_Item_4_existent_items_243_at_L)
     /\
     ((unique_keys map_22 __anonstruct_Map_5_capacity_map_22_40_at_L
      __anonstruct_Map_5_items_map_22_40_at_L
      __anonstruct_Item_4_existent_items_243_at_L
      __anonstruct_Item_4_key_1_items_243_at_L
      __anonstruct_Key_2_b_items_243_at_L
      __anonstruct_Key_2_a_items_243_at_L)
     /\
     ((all_valid_existence map_22 __anonstruct_Map_5_capacity_map_22_40_at_L
      __anonstruct_Map_5_items_map_22_40_at_L
      __anonstruct_Item_4_existent_items_243_at_L)
     /\
     (gap_ok map_22 __anonstruct_Map_5_capacity_map_22_40_at_L
     __anonstruct_Map_5_items_map_22_40_at_L
     __anonstruct_Item_4_existent_items_243_at_L))))))))
  
  
end

module Function_initializeMap

  use import Struct___anonstruct_Item_4 
  
  use import core.Same_except 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val initializeMap
  (map_1_0 : (pointer __anonstruct_Map_5)) 
   (size : Int32.t) 
    (__anonstruct_Map_5_map_1_41_alloc_table : ref (alloc_table
     __anonstruct_Map_5)) 
     (__anonstruct_Map_5_count_map_1_41 : ref (memory __anonstruct_Map_5
      Int32.t)) 
      (__anonstruct_Map_5_capacity_map_1_41 : ref (memory __anonstruct_Map_5
       Int32.t)) 
       (__anonstruct_Map_5_items_map_1_41 : ref (memory __anonstruct_Map_5
        (pointer __anonstruct_Item_4))) 
        (__anonstruct_Value_3_items_77_alloc_table : (alloc_table
         __anonstruct_Value_3)) 
         (__anonstruct_Key_2_items_77_alloc_table : (alloc_table
          __anonstruct_Key_2)) 
          (__anonstruct_Item_4_items_77_alloc_table : (alloc_table
           __anonstruct_Item_4)) 
           (__anonstruct_Item_4_existent_items_77 : (memory
            __anonstruct_Item_4 Int32.t)) 
            (__anonstruct_Item_4_value_1_items_77 : (memory
             __anonstruct_Item_4 (pointer __anonstruct_Value_3))) 
             (__anonstruct_Item_4_key_1_items_77 : (memory
              __anonstruct_Item_4 (pointer __anonstruct_Key_2))) 
              (__anonstruct_Key_2_b_items_77 : (memory __anonstruct_Key_2
               Int32.t)) 
               (__anonstruct_Key_2_a_items_77 : (memory __anonstruct_Key_2
                Int32.t)) : Int32.t
                requires { true } reads {
                __anonstruct_Map_5_capacity_map_1_41,
                __anonstruct_Map_5_count_map_1_41,
                __anonstruct_Map_5_items_map_1_41,
                __anonstruct_Map_5_map_1_41_alloc_table } writes {
                __anonstruct_Map_5_capacity_map_1_41,
                __anonstruct_Map_5_count_map_1_41,
                __anonstruct_Map_5_items_map_1_41,
                __anonstruct_Map_5_map_1_41_alloc_table }
                ensures {
                  ((#"map_h.jc" 270 12 32# "expl:Allocates clause"
                   (#"map_h.jc" 270 12 32# "expl:Allocates clause"
                   (alloc_same_except (old
                   !__anonstruct_Map_5_map_1_41_alloc_table)
                   !__anonstruct_Map_5_map_1_41_alloc_table pset_empty)))
                  /\
                  ((((#"map_h.jc" 267 10 54# "expl:Assigns clause"
                     (not_assigns (old
                     !__anonstruct_Map_5_map_1_41_alloc_table)
                     !__anonstruct_Map_5_map_1_41_alloc_table (old
                     !__anonstruct_Map_5_items_map_1_41)
                     !__anonstruct_Map_5_items_map_1_41
                     (pset_singleton map_1_0)))
                    /\
                    (#"map_h.jc" 267 10 54# "expl:Assigns clause"
                    (not_assigns (old
                    !__anonstruct_Map_5_map_1_41_alloc_table)
                    !__anonstruct_Map_5_map_1_41_alloc_table (old
                    !__anonstruct_Map_5_capacity_map_1_41)
                    !__anonstruct_Map_5_capacity_map_1_41
                    (pset_singleton map_1_0))))
                   /\
                   (#"map_h.jc" 267 10 54# "expl:Assigns clause"
                   (not_assigns (old
                   !__anonstruct_Map_5_map_1_41_alloc_table)
                   !__anonstruct_Map_5_map_1_41_alloc_table (old
                   !__anonstruct_Map_5_count_map_1_41)
                   !__anonstruct_Map_5_count_map_1_41
                   (pset_singleton map_1_0))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 271 40 52#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    ((=)
                    (offset_max __anonstruct_Item_4_items_77_alloc_table
                    (select !__anonstruct_Map_5_items_map_1_41 map_1_0))
                    (Int.(-) (Int32.to_int size) (1)))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 251 12 50#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 274 42 54#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    ((strict_left_valid_struct___anonstruct_Item_4
                     (select !__anonstruct_Map_5_items_map_1_41 map_1_0) (0)
                     __anonstruct_Item_4_items_77_alloc_table
                     __anonstruct_Key_2_items_77_alloc_table
                     __anonstruct_Value_3_items_77_alloc_table
                     __anonstruct_Item_4_key_1_items_77
                     __anonstruct_Item_4_value_1_items_77)
                    /\
                    (right_valid_struct___anonstruct_Item_4
                    (select !__anonstruct_Map_5_items_map_1_41 map_1_0)
                    (Int.(-_) 1) __anonstruct_Item_4_items_77_alloc_table
                    __anonstruct_Key_2_items_77_alloc_table
                    __anonstruct_Value_3_items_77_alloc_table
                    __anonstruct_Item_4_key_1_items_77
                    __anonstruct_Item_4_value_1_items_77))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 252 12 50#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 276 44 56#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (Int32.(=)
                    (select !__anonstruct_Map_5_capacity_map_1_41 map_1_0)
                    size)))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 253 12 44#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 278 47 59#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (Int32.(=)
                    (select !__anonstruct_Map_5_count_map_1_41 map_1_0)
                    (#"map_h.jc" 279 61 73# "expl:Integer cast" (Int32.of_int
                    (0))))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 254 12 46#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 280 49 61#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (is_valid_map map_1_0
                    __anonstruct_Value_3_items_77_alloc_table
                    !__anonstruct_Map_5_map_1_41_alloc_table
                    __anonstruct_Key_2_items_77_alloc_table
                    __anonstruct_Item_4_items_77_alloc_table
                    !__anonstruct_Map_5_count_map_1_41
                    !__anonstruct_Map_5_capacity_map_1_41
                    !__anonstruct_Map_5_items_map_1_41
                    __anonstruct_Item_4_existent_items_77
                    __anonstruct_Item_4_value_1_items_77
                    __anonstruct_Item_4_key_1_items_77
                    __anonstruct_Key_2_b_items_77
                    __anonstruct_Key_2_a_items_77)))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 255 12 102#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 282 51 63#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (forall i_6 : int.
                     ((((<=) (0) i_6) /\
                      ((<) i_6
                      (Int32.to_int
                      (select !__anonstruct_Map_5_capacity_map_1_41 map_1_0))))
                      ->
                      (Int32.(=)
                      (select __anonstruct_Item_4_existent_items_77
                      (shift
                      (select !__anonstruct_Map_5_items_map_1_41 map_1_0)
                      i_6)) (#"map_h.jc" 288 46 58# "expl:Integer cast"
                      (Int32.of_int (0))))))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 256 12 56#
                  "expl:Ensures clause"
                  ((Int32.(=) result (#"map_h.jc" 289 52 64#
                   "expl:Integer cast" (Int32.of_int (0)))) ->
                   (fresh_alloc_struct___anonstruct_Item_4
                   (select !__anonstruct_Map_5_items_map_1_41 map_1_0) (0)
                   __anonstruct_Item_4_items_77_alloc_table
                   __anonstruct_Key_2_items_77_alloc_table
                   __anonstruct_Value_3_items_77_alloc_table
                   __anonstruct_Item_4_key_1_items_77
                   __anonstruct_Item_4_value_1_items_77)))))))))))))))))) }
  
end

module Function_initializeMap_safe

  use import Struct___anonstruct_Item_4 
  
  use import core.Same_except 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val initializeMap
  (map_1_0 : (pointer __anonstruct_Map_5)) 
   (size : Int32.t) 
    (__anonstruct_Map_5_map_1_41_alloc_table : ref (alloc_table
     __anonstruct_Map_5)) 
     (__anonstruct_Map_5_count_map_1_41 : ref (memory __anonstruct_Map_5
      Int32.t)) 
      (__anonstruct_Map_5_capacity_map_1_41 : ref (memory __anonstruct_Map_5
       Int32.t)) 
       (__anonstruct_Map_5_items_map_1_41 : ref (memory __anonstruct_Map_5
        (pointer __anonstruct_Item_4))) 
        (__anonstruct_Value_3_items_77_alloc_table : (alloc_table
         __anonstruct_Value_3)) 
         (__anonstruct_Key_2_items_77_alloc_table : (alloc_table
          __anonstruct_Key_2)) 
          (__anonstruct_Item_4_items_77_alloc_table : (alloc_table
           __anonstruct_Item_4)) 
           (__anonstruct_Item_4_existent_items_77 : (memory
            __anonstruct_Item_4 Int32.t)) 
            (__anonstruct_Item_4_value_1_items_77 : (memory
             __anonstruct_Item_4 (pointer __anonstruct_Value_3))) 
             (__anonstruct_Item_4_key_1_items_77 : (memory
              __anonstruct_Item_4 (pointer __anonstruct_Key_2))) 
              (__anonstruct_Key_2_b_items_77 : (memory __anonstruct_Key_2
               Int32.t)) 
               (__anonstruct_Key_2_a_items_77 : (memory __anonstruct_Key_2
                Int32.t)) : Int32.t
                requires {
                  ("expl:External"
                  (#"map_h.jc" 262 12 242# "expl:Requires clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 243 13 24#
                   "expl:Requires clause"
                   (#"map_h.jc" 262 12 242# "expl:Requires clause"
                   ((#"map_h.jc" 262 12 242# "expl:Requires clause"
                    ((<=)
                    (offset_min !__anonstruct_Map_5_map_1_41_alloc_table
                    map_1_0) (0)))
                   /\
                   (#"map_h.jc" 262 12 242# "expl:Requires clause"
                   ((#"map_h.jc" 262 12 242# "expl:Requires clause"
                    ((>=)
                    (offset_max !__anonstruct_Map_5_map_1_41_alloc_table
                    map_1_0) (0)))
                   /\
                   (#"map_h.jc" 262 12 242# "expl:Requires clause"
                   ((=) true true)))))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 244 13 22#
                  "expl:Requires clause"
                  (Int32.(>=) size (#"map_h.jc" 265 31 43#
                  "expl:Integer cast" (Int32.of_int (0)))))))) }
                reads { __anonstruct_Map_5_capacity_map_1_41,
                __anonstruct_Map_5_count_map_1_41,
                __anonstruct_Map_5_items_map_1_41,
                __anonstruct_Map_5_map_1_41_alloc_table } writes {
                __anonstruct_Map_5_capacity_map_1_41,
                __anonstruct_Map_5_count_map_1_41,
                __anonstruct_Map_5_items_map_1_41,
                __anonstruct_Map_5_map_1_41_alloc_table }
                ensures {
                  ((#"map_h.jc" 270 12 32# "expl:Allocates clause"
                   (#"map_h.jc" 270 12 32# "expl:Allocates clause"
                   (alloc_same_except (old
                   !__anonstruct_Map_5_map_1_41_alloc_table)
                   !__anonstruct_Map_5_map_1_41_alloc_table pset_empty)))
                  /\
                  ((((#"map_h.jc" 267 10 54# "expl:Assigns clause"
                     (not_assigns (old
                     !__anonstruct_Map_5_map_1_41_alloc_table)
                     !__anonstruct_Map_5_map_1_41_alloc_table (old
                     !__anonstruct_Map_5_items_map_1_41)
                     !__anonstruct_Map_5_items_map_1_41
                     (pset_singleton map_1_0)))
                    /\
                    (#"map_h.jc" 267 10 54# "expl:Assigns clause"
                    (not_assigns (old
                    !__anonstruct_Map_5_map_1_41_alloc_table)
                    !__anonstruct_Map_5_map_1_41_alloc_table (old
                    !__anonstruct_Map_5_capacity_map_1_41)
                    !__anonstruct_Map_5_capacity_map_1_41
                    (pset_singleton map_1_0))))
                   /\
                   (#"map_h.jc" 267 10 54# "expl:Assigns clause"
                   (not_assigns (old
                   !__anonstruct_Map_5_map_1_41_alloc_table)
                   !__anonstruct_Map_5_map_1_41_alloc_table (old
                   !__anonstruct_Map_5_count_map_1_41)
                   !__anonstruct_Map_5_count_map_1_41
                   (pset_singleton map_1_0))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 271 40 52#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    ((=)
                    (offset_max __anonstruct_Item_4_items_77_alloc_table
                    (select !__anonstruct_Map_5_items_map_1_41 map_1_0))
                    (Int.(-) (Int32.to_int size) (1)))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 251 12 50#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 274 42 54#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    ((strict_left_valid_struct___anonstruct_Item_4
                     (select !__anonstruct_Map_5_items_map_1_41 map_1_0) (0)
                     __anonstruct_Item_4_items_77_alloc_table
                     __anonstruct_Key_2_items_77_alloc_table
                     __anonstruct_Value_3_items_77_alloc_table
                     __anonstruct_Item_4_key_1_items_77
                     __anonstruct_Item_4_value_1_items_77)
                    /\
                    (right_valid_struct___anonstruct_Item_4
                    (select !__anonstruct_Map_5_items_map_1_41 map_1_0)
                    (Int.(-_) 1) __anonstruct_Item_4_items_77_alloc_table
                    __anonstruct_Key_2_items_77_alloc_table
                    __anonstruct_Value_3_items_77_alloc_table
                    __anonstruct_Item_4_key_1_items_77
                    __anonstruct_Item_4_value_1_items_77))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 252 12 50#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 276 44 56#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (Int32.(=)
                    (select !__anonstruct_Map_5_capacity_map_1_41 map_1_0)
                    size)))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 253 12 44#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 278 47 59#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (Int32.(=)
                    (select !__anonstruct_Map_5_count_map_1_41 map_1_0)
                    (#"map_h.jc" 279 61 73# "expl:Integer cast" (Int32.of_int
                    (0))))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 254 12 46#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 280 49 61#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (is_valid_map map_1_0
                    __anonstruct_Value_3_items_77_alloc_table
                    !__anonstruct_Map_5_map_1_41_alloc_table
                    __anonstruct_Key_2_items_77_alloc_table
                    __anonstruct_Item_4_items_77_alloc_table
                    !__anonstruct_Map_5_count_map_1_41
                    !__anonstruct_Map_5_capacity_map_1_41
                    !__anonstruct_Map_5_items_map_1_41
                    __anonstruct_Item_4_existent_items_77
                    __anonstruct_Item_4_value_1_items_77
                    __anonstruct_Item_4_key_1_items_77
                    __anonstruct_Key_2_b_items_77
                    __anonstruct_Key_2_a_items_77)))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 250 12 64#
                  "expl:Ensures clause"
                  ((#"/home/nik/Projects/ver/hw4/map.h" 255 12 102#
                   "expl:Ensures clause"
                   ((Int32.(=) result (#"map_h.jc" 282 51 63#
                    "expl:Integer cast" (Int32.of_int (0)))) ->
                    (forall i_6 : int.
                     ((((<=) (0) i_6) /\
                      ((<) i_6
                      (Int32.to_int
                      (select !__anonstruct_Map_5_capacity_map_1_41 map_1_0))))
                      ->
                      (Int32.(=)
                      (select __anonstruct_Item_4_existent_items_77
                      (shift
                      (select !__anonstruct_Map_5_items_map_1_41 map_1_0)
                      i_6)) (#"map_h.jc" 288 46 58# "expl:Integer cast"
                      (Int32.of_int (0))))))))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.h" 256 12 56#
                  "expl:Ensures clause"
                  ((Int32.(=) result (#"map_h.jc" 289 52 64#
                   "expl:Integer cast" (Int32.of_int (0)))) ->
                   (fresh_alloc_struct___anonstruct_Item_4
                   (select !__anonstruct_Map_5_items_map_1_41 map_1_0) (0)
                   __anonstruct_Item_4_items_77_alloc_table
                   __anonstruct_Key_2_items_77_alloc_table
                   __anonstruct_Value_3_items_77_alloc_table
                   __anonstruct_Item_4_key_1_items_77
                   __anonstruct_Item_4_value_1_items_77)))))))))))))))))) }
  
end

module Function_addElement

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_no_mchg 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val addElement
  (map_0 : (pointer __anonstruct_Map_5)) 
   (key_0 : (pointer __anonstruct_Key_2)) 
    (value : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Map_5_items_map_42 : ref (memory __anonstruct_Map_5
      (pointer __anonstruct_Item_4))) 
      (__anonstruct_Value_3_items_78_alloc_table : (alloc_table
       __anonstruct_Value_3)) 
       (__anonstruct_Value_3_value_44_alloc_table : (alloc_table
        __anonstruct_Value_3)) 
        (__anonstruct_Map_5_map_42_alloc_table : (alloc_table
         __anonstruct_Map_5)) 
         (__anonstruct_Key_2_items_78_alloc_table : (alloc_table
          __anonstruct_Key_2)) 
          (__anonstruct_Key_2_key_43_alloc_table : (alloc_table
           __anonstruct_Key_2)) 
           (__anonstruct_Item_4_items_78_alloc_table : (alloc_table
            __anonstruct_Item_4)) 
            (__anonstruct_Map_5_count_map_42 : (memory __anonstruct_Map_5
             Int32.t)) 
             (__anonstruct_Map_5_capacity_map_42 : (memory __anonstruct_Map_5
              Int32.t)) 
              (__anonstruct_Item_4_existent_items_78 : (memory
               __anonstruct_Item_4 Int32.t)) 
               (__anonstruct_Item_4_value_1_items_78 : (memory
                __anonstruct_Item_4 (pointer __anonstruct_Value_3))) 
                (__anonstruct_Item_4_key_1_items_78 : (memory
                 __anonstruct_Item_4 (pointer __anonstruct_Key_2))) 
                 (__anonstruct_Value_3_d_items_78 : (memory
                  __anonstruct_Value_3 Int32.t)) 
                  (__anonstruct_Value_3_d_value_44 : (memory
                   __anonstruct_Value_3 Int32.t)) 
                   (__anonstruct_Value_3_c_items_78 : (memory
                    __anonstruct_Value_3 Int32.t)) 
                    (__anonstruct_Value_3_c_value_44 : (memory
                     __anonstruct_Value_3 Int32.t)) 
                     (__anonstruct_Key_2_b_items_78 : (memory
                      __anonstruct_Key_2 Int32.t)) 
                      (__anonstruct_Key_2_b_key_43 : (memory
                       __anonstruct_Key_2 Int32.t)) 
                       (__anonstruct_Key_2_a_items_78 : (memory
                        __anonstruct_Key_2 Int32.t)) 
                        (__anonstruct_Key_2_a_key_43 : (memory
                         __anonstruct_Key_2 Int32.t)) : Int32.t
                         requires { true } reads {
                         __anonstruct_Map_5_items_map_42 } writes {
                         __anonstruct_Map_5_items_map_42 }
                         ensures {
                           ((#"map_h.jc" 312 10 19# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Map_5_map_42_alloc_table
                            __anonstruct_Map_5_map_42_alloc_table (old
                            !__anonstruct_Map_5_items_map_42)
                            !__anonstruct_Map_5_items_map_42
                            (pset_singleton map_0)))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                            "expl:Ensures clause"
                            (is_valid_map map_0
                            __anonstruct_Value_3_items_78_alloc_table
                            __anonstruct_Map_5_map_42_alloc_table
                            __anonstruct_Key_2_items_78_alloc_table
                            __anonstruct_Item_4_items_78_alloc_table
                            __anonstruct_Map_5_count_map_42
                            __anonstruct_Map_5_capacity_map_42
                            !__anonstruct_Map_5_items_map_42
                            __anonstruct_Item_4_existent_items_78
                            __anonstruct_Item_4_value_1_items_78
                            __anonstruct_Item_4_key_1_items_78
                            __anonstruct_Key_2_b_items_78
                            __anonstruct_Key_2_a_items_78))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 275 12 41#
                            "expl:Ensures clause"
                            (same_capacity map_0
                            __anonstruct_Map_5_capacity_map_42
                            __anonstruct_Map_5_capacity_map_42))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 276 12 605#
                            "expl:Ensures clause"
                            ((Int32.(=) result (#"map_h.jc" 316 46 58#
                             "expl:Integer cast" (Int32.of_int (1)))) ->
                             ((exists i_7 : int.
                               ((((<=) (0) i_7) /\
                                ((<) i_7
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_42
                                map_0)))) ->
                                ((compare_keys
                                 (get_key_t
                                 (get_item_t map_0 i_7 (old
                                 !__anonstruct_Map_5_items_map_42))
                                 __anonstruct_Item_4_key_1_items_78) key_0
                                 __anonstruct_Key_2_b_key_43
                                 __anonstruct_Key_2_b_items_78
                                 __anonstruct_Key_2_a_key_43
                                 __anonstruct_Key_2_a_items_78)
                                /\
                                ((compare_values
                                 (get_value_t
                                 (get_item_t map_0 i_7
                                 !__anonstruct_Map_5_items_map_42)
                                 __anonstruct_Item_4_value_1_items_78) value
                                 __anonstruct_Value_3_d_value_44
                                 __anonstruct_Value_3_d_items_78
                                 __anonstruct_Value_3_c_value_44
                                 __anonstruct_Value_3_c_items_78)
                                /\
                                (same_count map_0
                                __anonstruct_Map_5_count_map_42
                                __anonstruct_Map_5_count_map_42)))))
                             \/
                             (exists i_8 : int.
                              ((((<=) (0) i_8) /\
                               ((<) i_8
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_42
                               map_0)))) ->
                               ((compare_keys
                                (get_key_t
                                (get_item_t map_0 i_8
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_key_1_items_78) key_0
                                __anonstruct_Key_2_b_key_43
                                __anonstruct_Key_2_b_items_78
                                __anonstruct_Key_2_a_key_43
                                __anonstruct_Key_2_a_items_78)
                               /\
                               ((compare_values
                                (get_value_t
                                (get_item_t map_0 i_8
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_value_1_items_78) value
                                __anonstruct_Value_3_d_value_44
                                __anonstruct_Value_3_d_items_78
                                __anonstruct_Value_3_c_value_44
                                __anonstruct_Value_3_c_items_78)
                               /\
                               ((=)
                               (Int32.to_int
                               (select __anonstruct_Map_5_count_map_42 map_0))
                               (Int.(+)
                               (Int32.to_int
                               (select __anonstruct_Map_5_count_map_42 map_0))
                               (1))))))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 286 12 58#
                            "expl:Ensures clause"
                            ((Int32.(=) result (#"map_h.jc" 350 48 60#
                             "expl:Integer cast" (Int32.of_int (1)))) ->
                             (no_mchg map_0 key_0
                             __anonstruct_Map_5_capacity_map_42
                             __anonstruct_Map_5_capacity_map_42
                             !__anonstruct_Map_5_items_map_42 (old
                             !__anonstruct_Map_5_items_map_42)
                             __anonstruct_Item_4_existent_items_78
                             __anonstruct_Item_4_existent_items_78
                             __anonstruct_Item_4_value_1_items_78
                             __anonstruct_Item_4_value_1_items_78
                             __anonstruct_Item_4_key_1_items_78
                             __anonstruct_Item_4_key_1_items_78
                             __anonstruct_Value_3_d_items_78
                             __anonstruct_Value_3_d_items_78
                             __anonstruct_Value_3_c_items_78
                             __anonstruct_Value_3_c_items_78
                             __anonstruct_Key_2_b_items_78
                             __anonstruct_Key_2_b_items_78
                             __anonstruct_Key_2_b_key_43
                             __anonstruct_Key_2_a_items_78
                             __anonstruct_Key_2_a_items_78
                             __anonstruct_Key_2_a_key_43)))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 287 12 76#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_h.jc" 353 49 61#
                            "expl:Integer cast" (Int32.of_int (0)))) ->
                            (Int32.(=)
                            (select __anonstruct_Map_5_count_map_42 map_0)
                            (select __anonstruct_Map_5_capacity_map_42 map_0))))))))))))))
                           }
  
end

module Function_addElement_safe

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_no_mchg 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val addElement
  (map_0 : (pointer __anonstruct_Map_5)) 
   (key_0 : (pointer __anonstruct_Key_2)) 
    (value : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Map_5_items_map_42 : ref (memory __anonstruct_Map_5
      (pointer __anonstruct_Item_4))) 
      (__anonstruct_Value_3_items_78_alloc_table : (alloc_table
       __anonstruct_Value_3)) 
       (__anonstruct_Value_3_value_44_alloc_table : (alloc_table
        __anonstruct_Value_3)) 
        (__anonstruct_Map_5_map_42_alloc_table : (alloc_table
         __anonstruct_Map_5)) 
         (__anonstruct_Key_2_items_78_alloc_table : (alloc_table
          __anonstruct_Key_2)) 
          (__anonstruct_Key_2_key_43_alloc_table : (alloc_table
           __anonstruct_Key_2)) 
           (__anonstruct_Item_4_items_78_alloc_table : (alloc_table
            __anonstruct_Item_4)) 
            (__anonstruct_Map_5_count_map_42 : (memory __anonstruct_Map_5
             Int32.t)) 
             (__anonstruct_Map_5_capacity_map_42 : (memory __anonstruct_Map_5
              Int32.t)) 
              (__anonstruct_Item_4_existent_items_78 : (memory
               __anonstruct_Item_4 Int32.t)) 
               (__anonstruct_Item_4_value_1_items_78 : (memory
                __anonstruct_Item_4 (pointer __anonstruct_Value_3))) 
                (__anonstruct_Item_4_key_1_items_78 : (memory
                 __anonstruct_Item_4 (pointer __anonstruct_Key_2))) 
                 (__anonstruct_Value_3_d_items_78 : (memory
                  __anonstruct_Value_3 Int32.t)) 
                  (__anonstruct_Value_3_d_value_44 : (memory
                   __anonstruct_Value_3 Int32.t)) 
                   (__anonstruct_Value_3_c_items_78 : (memory
                    __anonstruct_Value_3 Int32.t)) 
                    (__anonstruct_Value_3_c_value_44 : (memory
                     __anonstruct_Value_3 Int32.t)) 
                     (__anonstruct_Key_2_b_items_78 : (memory
                      __anonstruct_Key_2 Int32.t)) 
                      (__anonstruct_Key_2_b_key_43 : (memory
                       __anonstruct_Key_2 Int32.t)) 
                       (__anonstruct_Key_2_a_items_78 : (memory
                        __anonstruct_Key_2 Int32.t)) 
                        (__anonstruct_Key_2_a_key_43 : (memory
                         __anonstruct_Key_2 Int32.t)) : Int32.t
                         requires {
                           ("expl:External"
                           (#"map_h.jc" 295 12 979# "expl:Requires clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 266 13 24#
                            "expl:Requires clause"
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((#"map_h.jc" 295 12 979# "expl:Requires clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Map_5_map_42_alloc_table map_0)
                             (0)))
                            /\
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((#"map_h.jc" 295 12 979# "expl:Requires clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Map_5_map_42_alloc_table map_0)
                             (0)))
                            /\
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((=) true true)))))))
                           /\
                           (#"map_h.jc" 295 12 979# "expl:Requires clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 266 28 39#
                            "expl:Requires clause"
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((#"map_h.jc" 295 12 979# "expl:Requires clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Key_2_key_43_alloc_table key_0)
                             (0)))
                            /\
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((#"map_h.jc" 295 12 979# "expl:Requires clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Key_2_key_43_alloc_table key_0)
                             (0)))
                            /\
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((=) true true)))))))
                           /\
                           (#"map_h.jc" 295 12 979# "expl:Requires clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 266 43 56#
                            "expl:Requires clause"
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((#"map_h.jc" 295 12 979# "expl:Requires clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Value_3_value_44_alloc_table value)
                             (0)))
                            /\
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((#"map_h.jc" 295 12 979# "expl:Requires clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Value_3_value_44_alloc_table value)
                             (0)))
                            /\
                            (#"map_h.jc" 295 12 979# "expl:Requires clause"
                            ((=) true true)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 267 13 30#
                           "expl:Requires clause"
                           (is_valid_map map_0
                           __anonstruct_Value_3_items_78_alloc_table
                           __anonstruct_Map_5_map_42_alloc_table
                           __anonstruct_Key_2_items_78_alloc_table
                           __anonstruct_Item_4_items_78_alloc_table
                           __anonstruct_Map_5_count_map_42
                           __anonstruct_Map_5_capacity_map_42
                           !__anonstruct_Map_5_items_map_42
                           __anonstruct_Item_4_existent_items_78
                           __anonstruct_Item_4_value_1_items_78
                           __anonstruct_Item_4_key_1_items_78
                           __anonstruct_Key_2_b_items_78
                           __anonstruct_Key_2_a_items_78))))))))) }
                         reads { __anonstruct_Map_5_items_map_42 } writes {
                         __anonstruct_Map_5_items_map_42 }
                         ensures {
                           ((#"map_h.jc" 312 10 19# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Map_5_map_42_alloc_table
                            __anonstruct_Map_5_map_42_alloc_table (old
                            !__anonstruct_Map_5_items_map_42)
                            !__anonstruct_Map_5_items_map_42
                            (pset_singleton map_0)))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                            "expl:Ensures clause"
                            (is_valid_map map_0
                            __anonstruct_Value_3_items_78_alloc_table
                            __anonstruct_Map_5_map_42_alloc_table
                            __anonstruct_Key_2_items_78_alloc_table
                            __anonstruct_Item_4_items_78_alloc_table
                            __anonstruct_Map_5_count_map_42
                            __anonstruct_Map_5_capacity_map_42
                            !__anonstruct_Map_5_items_map_42
                            __anonstruct_Item_4_existent_items_78
                            __anonstruct_Item_4_value_1_items_78
                            __anonstruct_Item_4_key_1_items_78
                            __anonstruct_Key_2_b_items_78
                            __anonstruct_Key_2_a_items_78))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 275 12 41#
                            "expl:Ensures clause"
                            (same_capacity map_0
                            __anonstruct_Map_5_capacity_map_42
                            __anonstruct_Map_5_capacity_map_42))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 276 12 605#
                            "expl:Ensures clause"
                            ((Int32.(=) result (#"map_h.jc" 316 46 58#
                             "expl:Integer cast" (Int32.of_int (1)))) ->
                             ((exists i_7 : int.
                               ((((<=) (0) i_7) /\
                                ((<) i_7
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_42
                                map_0)))) ->
                                ((compare_keys
                                 (get_key_t
                                 (get_item_t map_0 i_7 (old
                                 !__anonstruct_Map_5_items_map_42))
                                 __anonstruct_Item_4_key_1_items_78) key_0
                                 __anonstruct_Key_2_b_key_43
                                 __anonstruct_Key_2_b_items_78
                                 __anonstruct_Key_2_a_key_43
                                 __anonstruct_Key_2_a_items_78)
                                /\
                                ((compare_values
                                 (get_value_t
                                 (get_item_t map_0 i_7
                                 !__anonstruct_Map_5_items_map_42)
                                 __anonstruct_Item_4_value_1_items_78) value
                                 __anonstruct_Value_3_d_value_44
                                 __anonstruct_Value_3_d_items_78
                                 __anonstruct_Value_3_c_value_44
                                 __anonstruct_Value_3_c_items_78)
                                /\
                                (same_count map_0
                                __anonstruct_Map_5_count_map_42
                                __anonstruct_Map_5_count_map_42)))))
                             \/
                             (exists i_8 : int.
                              ((((<=) (0) i_8) /\
                               ((<) i_8
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_42
                               map_0)))) ->
                               ((compare_keys
                                (get_key_t
                                (get_item_t map_0 i_8
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_key_1_items_78) key_0
                                __anonstruct_Key_2_b_key_43
                                __anonstruct_Key_2_b_items_78
                                __anonstruct_Key_2_a_key_43
                                __anonstruct_Key_2_a_items_78)
                               /\
                               ((compare_values
                                (get_value_t
                                (get_item_t map_0 i_8
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_value_1_items_78) value
                                __anonstruct_Value_3_d_value_44
                                __anonstruct_Value_3_d_items_78
                                __anonstruct_Value_3_c_value_44
                                __anonstruct_Value_3_c_items_78)
                               /\
                               ((=)
                               (Int32.to_int
                               (select __anonstruct_Map_5_count_map_42 map_0))
                               (Int.(+)
                               (Int32.to_int
                               (select __anonstruct_Map_5_count_map_42 map_0))
                               (1))))))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 274 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 286 12 58#
                            "expl:Ensures clause"
                            ((Int32.(=) result (#"map_h.jc" 350 48 60#
                             "expl:Integer cast" (Int32.of_int (1)))) ->
                             (no_mchg map_0 key_0
                             __anonstruct_Map_5_capacity_map_42
                             __anonstruct_Map_5_capacity_map_42
                             !__anonstruct_Map_5_items_map_42 (old
                             !__anonstruct_Map_5_items_map_42)
                             __anonstruct_Item_4_existent_items_78
                             __anonstruct_Item_4_existent_items_78
                             __anonstruct_Item_4_value_1_items_78
                             __anonstruct_Item_4_value_1_items_78
                             __anonstruct_Item_4_key_1_items_78
                             __anonstruct_Item_4_key_1_items_78
                             __anonstruct_Value_3_d_items_78
                             __anonstruct_Value_3_d_items_78
                             __anonstruct_Value_3_c_items_78
                             __anonstruct_Value_3_c_items_78
                             __anonstruct_Key_2_b_items_78
                             __anonstruct_Key_2_b_items_78
                             __anonstruct_Key_2_b_key_43
                             __anonstruct_Key_2_a_items_78
                             __anonstruct_Key_2_a_items_78
                             __anonstruct_Key_2_a_key_43)))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 287 12 76#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_h.jc" 353 49 61#
                            "expl:Integer cast" (Int32.of_int (0)))) ->
                            (Int32.(=)
                            (select __anonstruct_Map_5_count_map_42 map_0)
                            (select __anonstruct_Map_5_capacity_map_42 map_0))))))))))))))
                           }
  
end

module Function_getElement

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_items 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_0_0 : (pointer __anonstruct_Map_5)) 
   (key_0_0 : (pointer __anonstruct_Key_2)) 
    (value_0 : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Value_3_d_value_0_47 : ref (memory __anonstruct_Value_3
      Int32.t)) 
      (__anonstruct_Value_3_c_value_0_47 : ref (memory __anonstruct_Value_3
       Int32.t)) 
       (__anonstruct_Value_3_get_item_t_87_alloc_table : (alloc_table
        __anonstruct_Value_3)) 
        (__anonstruct_Value_3_value_0_47_alloc_table : (alloc_table
         __anonstruct_Value_3)) 
         (__anonstruct_Map_5_map_0_45_alloc_table : (alloc_table
          __anonstruct_Map_5)) 
          (__anonstruct_Key_2_get_item_t_87_alloc_table : (alloc_table
           __anonstruct_Key_2)) 
           (__anonstruct_Key_2_key_0_46_alloc_table : (alloc_table
            __anonstruct_Key_2)) 
            (__anonstruct_Item_4_get_item_t_87_alloc_table : (alloc_table
             __anonstruct_Item_4)) 
             (__anonstruct_Map_5_count_map_0_45 : (memory __anonstruct_Map_5
              Int32.t)) 
              (__anonstruct_Map_5_capacity_map_0_45 : (memory
               __anonstruct_Map_5 Int32.t)) 
               (__anonstruct_Map_5_items_map_0_45 : (memory
                __anonstruct_Map_5 (pointer __anonstruct_Item_4))) 
                (__anonstruct_Item_4_existent_get_item_t_87 : (memory
                 __anonstruct_Item_4 Int32.t)) 
                 (__anonstruct_Item_4_value_1_get_item_t_87 : (memory
                  __anonstruct_Item_4 (pointer __anonstruct_Value_3))) 
                  (__anonstruct_Item_4_key_1_get_item_t_87 : (memory
                   __anonstruct_Item_4 (pointer __anonstruct_Key_2))) 
                   (__anonstruct_Value_3_d_get_item_t_87 : (memory
                    __anonstruct_Value_3 Int32.t)) 
                    (__anonstruct_Value_3_c_get_item_t_87 : (memory
                     __anonstruct_Value_3 Int32.t)) 
                     (__anonstruct_Key_2_b_get_item_t_87 : (memory
                      __anonstruct_Key_2 Int32.t)) 
                      (__anonstruct_Key_2_b_key_0_46 : (memory
                       __anonstruct_Key_2 Int32.t)) 
                       (__anonstruct_Key_2_a_get_item_t_87 : (memory
                        __anonstruct_Key_2 Int32.t)) 
                        (__anonstruct_Key_2_a_key_0_46 : (memory
                         __anonstruct_Key_2 Int32.t)) : Int32.t
                         requires { true } reads {
                         __anonstruct_Value_3_c_value_0_47,
                         __anonstruct_Value_3_d_value_0_47 } writes {
                         __anonstruct_Value_3_c_value_0_47,
                         __anonstruct_Value_3_d_value_0_47 }
                         ensures {
                           (((#"map_h.jc" 369 10 32# "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Value_3_value_0_47_alloc_table
                             __anonstruct_Value_3_value_0_47_alloc_table (old
                             !__anonstruct_Value_3_c_value_0_47)
                             !__anonstruct_Value_3_c_value_0_47
                             (pset_singleton value_0)))
                            /\
                            (#"map_h.jc" 369 10 32# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Value_3_value_0_47_alloc_table
                            __anonstruct_Value_3_value_0_47_alloc_table (old
                            !__anonstruct_Value_3_d_value_0_47)
                            !__anonstruct_Value_3_d_value_0_47
                            (pset_singleton value_0))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            (is_valid_map map_0_0
                            __anonstruct_Value_3_get_item_t_87_alloc_table
                            __anonstruct_Map_5_map_0_45_alloc_table
                            __anonstruct_Key_2_get_item_t_87_alloc_table
                            __anonstruct_Item_4_get_item_t_87_alloc_table
                            __anonstruct_Map_5_count_map_0_45
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 306 12 41#
                            "expl:Ensures clause"
                            (same_capacity map_0_0
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_capacity_map_0_45))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 307 12 38#
                            "expl:Ensures clause"
                            (same_count map_0_0
                            __anonstruct_Map_5_count_map_0_45
                            __anonstruct_Map_5_count_map_0_45))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 308 12 38#
                            "expl:Ensures clause"
                            (same_items map_0_0
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Value_3_d_get_item_t_87
                            __anonstruct_Value_3_d_get_item_t_87
                            __anonstruct_Value_3_c_get_item_t_87
                            __anonstruct_Value_3_c_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 309 12 45#
                            "expl:Ensures clause"
                            (compare_keys key_0_0 key_0_0
                            __anonstruct_Key_2_b_key_0_46
                            __anonstruct_Key_2_b_key_0_46
                            __anonstruct_Key_2_a_key_0_46
                            __anonstruct_Key_2_a_key_0_46))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 310 12 23#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
                             (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
                             (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause" ((=) true true)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 311 12 25#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Value_3_value_0_47_alloc_table
                             value_0) (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Value_3_value_0_47_alloc_table
                             value_0) (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause" ((=) true true)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 313 12 271#
                            "expl:Ensures clause"
                            ((Int32.(=) result (#"map_h.jc" 388 56 68#
                             "expl:Integer cast" (Int32.of_int (1)))) ->
                             (exists i_9 : int.
                              (((<=) (0) i_9) /\
                              (((<) i_9
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_0_45
                               map_0_0)))
                              /\
                              ((compare_keys key_0_0
                               (get_key_t
                               (get_item_t map_0_0 i_9
                               __anonstruct_Map_5_items_map_0_45)
                               __anonstruct_Item_4_key_1_get_item_t_87)
                               __anonstruct_Key_2_b_get_item_t_87
                               __anonstruct_Key_2_b_key_0_46
                               __anonstruct_Key_2_a_get_item_t_87
                               __anonstruct_Key_2_a_key_0_46)
                              /\
                              (compare_values value_0
                              (get_value_t
                              (get_item_t map_0_0 i_9
                              __anonstruct_Map_5_items_map_0_45)
                              __anonstruct_Item_4_value_1_get_item_t_87)
                              __anonstruct_Value_3_d_get_item_t_87
                              !__anonstruct_Value_3_d_value_0_47
                              __anonstruct_Value_3_c_get_item_t_87
                              !__anonstruct_Value_3_c_value_0_47)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 319 12 229#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_h.jc" 403 57 69#
                            "expl:Integer cast" (Int32.of_int (0)))) ->
                            ((compare_values value_0 value_0
                             !__anonstruct_Value_3_d_value_0_47 (old
                             !__anonstruct_Value_3_d_value_0_47)
                             !__anonstruct_Value_3_c_value_0_47 (old
                             !__anonstruct_Value_3_c_value_0_47))
                            /\
                            (forall i_10 : int.
                             ((((<=) (0) i_10) /\
                              ((<) i_10
                              (Int32.to_int
                              (select __anonstruct_Map_5_capacity_map_0_45
                              map_0_0)))) ->
                              (not
                              (compare_keys key_0_0
                              (get_key_t
                              (get_item_t map_0_0 i_10
                              __anonstruct_Map_5_items_map_0_45)
                              __anonstruct_Item_4_key_1_get_item_t_87)
                              __anonstruct_Key_2_b_get_item_t_87
                              __anonstruct_Key_2_b_key_0_46
                              __anonstruct_Key_2_a_get_item_t_87
                              __anonstruct_Key_2_a_key_0_46)))))))))))))))))))))))))
                           }
  
end

module Function_getElement_safe

  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import Root___anonstruct_Item_4 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_items 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_0_0 : (pointer __anonstruct_Map_5)) 
   (key_0_0 : (pointer __anonstruct_Key_2)) 
    (value_0 : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Value_3_d_value_0_47 : ref (memory __anonstruct_Value_3
      Int32.t)) 
      (__anonstruct_Value_3_c_value_0_47 : ref (memory __anonstruct_Value_3
       Int32.t)) 
       (__anonstruct_Value_3_get_item_t_87_alloc_table : (alloc_table
        __anonstruct_Value_3)) 
        (__anonstruct_Value_3_value_0_47_alloc_table : (alloc_table
         __anonstruct_Value_3)) 
         (__anonstruct_Map_5_map_0_45_alloc_table : (alloc_table
          __anonstruct_Map_5)) 
          (__anonstruct_Key_2_get_item_t_87_alloc_table : (alloc_table
           __anonstruct_Key_2)) 
           (__anonstruct_Key_2_key_0_46_alloc_table : (alloc_table
            __anonstruct_Key_2)) 
            (__anonstruct_Item_4_get_item_t_87_alloc_table : (alloc_table
             __anonstruct_Item_4)) 
             (__anonstruct_Map_5_count_map_0_45 : (memory __anonstruct_Map_5
              Int32.t)) 
              (__anonstruct_Map_5_capacity_map_0_45 : (memory
               __anonstruct_Map_5 Int32.t)) 
               (__anonstruct_Map_5_items_map_0_45 : (memory
                __anonstruct_Map_5 (pointer __anonstruct_Item_4))) 
                (__anonstruct_Item_4_existent_get_item_t_87 : (memory
                 __anonstruct_Item_4 Int32.t)) 
                 (__anonstruct_Item_4_value_1_get_item_t_87 : (memory
                  __anonstruct_Item_4 (pointer __anonstruct_Value_3))) 
                  (__anonstruct_Item_4_key_1_get_item_t_87 : (memory
                   __anonstruct_Item_4 (pointer __anonstruct_Key_2))) 
                   (__anonstruct_Value_3_d_get_item_t_87 : (memory
                    __anonstruct_Value_3 Int32.t)) 
                    (__anonstruct_Value_3_c_get_item_t_87 : (memory
                     __anonstruct_Value_3 Int32.t)) 
                     (__anonstruct_Key_2_b_get_item_t_87 : (memory
                      __anonstruct_Key_2 Int32.t)) 
                      (__anonstruct_Key_2_b_key_0_46 : (memory
                       __anonstruct_Key_2 Int32.t)) 
                       (__anonstruct_Key_2_a_get_item_t_87 : (memory
                        __anonstruct_Key_2 Int32.t)) 
                        (__anonstruct_Key_2_a_key_0_46 : (memory
                         __anonstruct_Key_2 Int32.t)) : Int32.t
                         requires {
                           ("expl:External"
                           (#"map_h.jc" 360 12 494# "expl:Requires clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 296 13 30#
                            "expl:Requires clause"
                            (is_valid_map map_0_0
                            __anonstruct_Value_3_get_item_t_87_alloc_table
                            __anonstruct_Map_5_map_0_45_alloc_table
                            __anonstruct_Key_2_get_item_t_87_alloc_table
                            __anonstruct_Item_4_get_item_t_87_alloc_table
                            __anonstruct_Map_5_count_map_0_45
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87))
                           /\
                           (#"map_h.jc" 360 12 494# "expl:Requires clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 297 13 24#
                            "expl:Requires clause"
                            (#"map_h.jc" 360 12 494# "expl:Requires clause"
                            ((#"map_h.jc" 360 12 494# "expl:Requires clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
                             (0)))
                            /\
                            (#"map_h.jc" 360 12 494# "expl:Requires clause"
                            ((#"map_h.jc" 360 12 494# "expl:Requires clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
                             (0)))
                            /\
                            (#"map_h.jc" 360 12 494# "expl:Requires clause"
                            ((=) true true)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 298 13 26#
                           "expl:Requires clause"
                           (#"map_h.jc" 360 12 494# "expl:Requires clause"
                           ((#"map_h.jc" 360 12 494# "expl:Requires clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Value_3_value_0_47_alloc_table
                            value_0) (0)))
                           /\
                           (#"map_h.jc" 360 12 494# "expl:Requires clause"
                           ((#"map_h.jc" 360 12 494# "expl:Requires clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Value_3_value_0_47_alloc_table
                            value_0) (0)))
                           /\
                           (#"map_h.jc" 360 12 494# "expl:Requires clause"
                           ((=) true true)))))))))))) }
                         reads { __anonstruct_Value_3_c_value_0_47,
                         __anonstruct_Value_3_d_value_0_47 } writes {
                         __anonstruct_Value_3_c_value_0_47,
                         __anonstruct_Value_3_d_value_0_47 }
                         ensures {
                           (((#"map_h.jc" 369 10 32# "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Value_3_value_0_47_alloc_table
                             __anonstruct_Value_3_value_0_47_alloc_table (old
                             !__anonstruct_Value_3_c_value_0_47)
                             !__anonstruct_Value_3_c_value_0_47
                             (pset_singleton value_0)))
                            /\
                            (#"map_h.jc" 369 10 32# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Value_3_value_0_47_alloc_table
                            __anonstruct_Value_3_value_0_47_alloc_table (old
                            !__anonstruct_Value_3_d_value_0_47)
                            !__anonstruct_Value_3_d_value_0_47
                            (pset_singleton value_0))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            (is_valid_map map_0_0
                            __anonstruct_Value_3_get_item_t_87_alloc_table
                            __anonstruct_Map_5_map_0_45_alloc_table
                            __anonstruct_Key_2_get_item_t_87_alloc_table
                            __anonstruct_Item_4_get_item_t_87_alloc_table
                            __anonstruct_Map_5_count_map_0_45
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 306 12 41#
                            "expl:Ensures clause"
                            (same_capacity map_0_0
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_capacity_map_0_45))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 307 12 38#
                            "expl:Ensures clause"
                            (same_count map_0_0
                            __anonstruct_Map_5_count_map_0_45
                            __anonstruct_Map_5_count_map_0_45))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 308 12 38#
                            "expl:Ensures clause"
                            (same_items map_0_0
                            __anonstruct_Map_5_capacity_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Map_5_items_map_0_45
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_existent_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_value_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Item_4_key_1_get_item_t_87
                            __anonstruct_Value_3_d_get_item_t_87
                            __anonstruct_Value_3_d_get_item_t_87
                            __anonstruct_Value_3_c_get_item_t_87
                            __anonstruct_Value_3_c_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_b_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87
                            __anonstruct_Key_2_a_get_item_t_87))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 309 12 45#
                            "expl:Ensures clause"
                            (compare_keys key_0_0 key_0_0
                            __anonstruct_Key_2_b_key_0_46
                            __anonstruct_Key_2_b_key_0_46
                            __anonstruct_Key_2_a_key_0_46
                            __anonstruct_Key_2_a_key_0_46))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 310 12 23#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
                             (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
                             (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause" ((=) true true)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 311 12 25#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Value_3_value_0_47_alloc_table
                             value_0) (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                             "expl:Ensures clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Value_3_value_0_47_alloc_table
                             value_0) (0)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                            "expl:Ensures clause" ((=) true true)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 305 12 29#
                           "expl:Ensures clause"
                           ((#"/home/nik/Projects/ver/hw4/map.h" 313 12 271#
                            "expl:Ensures clause"
                            ((Int32.(=) result (#"map_h.jc" 388 56 68#
                             "expl:Integer cast" (Int32.of_int (1)))) ->
                             (exists i_9 : int.
                              (((<=) (0) i_9) /\
                              (((<) i_9
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_0_45
                               map_0_0)))
                              /\
                              ((compare_keys key_0_0
                               (get_key_t
                               (get_item_t map_0_0 i_9
                               __anonstruct_Map_5_items_map_0_45)
                               __anonstruct_Item_4_key_1_get_item_t_87)
                               __anonstruct_Key_2_b_get_item_t_87
                               __anonstruct_Key_2_b_key_0_46
                               __anonstruct_Key_2_a_get_item_t_87
                               __anonstruct_Key_2_a_key_0_46)
                              /\
                              (compare_values value_0
                              (get_value_t
                              (get_item_t map_0_0 i_9
                              __anonstruct_Map_5_items_map_0_45)
                              __anonstruct_Item_4_value_1_get_item_t_87)
                              __anonstruct_Value_3_d_get_item_t_87
                              !__anonstruct_Value_3_d_value_0_47
                              __anonstruct_Value_3_c_get_item_t_87
                              !__anonstruct_Value_3_c_value_0_47)))))))
                           /\
                           (#"/home/nik/Projects/ver/hw4/map.h" 319 12 229#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_h.jc" 403 57 69#
                            "expl:Integer cast" (Int32.of_int (0)))) ->
                            ((compare_values value_0 value_0
                             !__anonstruct_Value_3_d_value_0_47 (old
                             !__anonstruct_Value_3_d_value_0_47)
                             !__anonstruct_Value_3_c_value_0_47 (old
                             !__anonstruct_Value_3_c_value_0_47))
                            /\
                            (forall i_10 : int.
                             ((((<=) (0) i_10) /\
                              ((<) i_10
                              (Int32.to_int
                              (select __anonstruct_Map_5_capacity_map_0_45
                              map_0_0)))) ->
                              (not
                              (compare_keys key_0_0
                              (get_key_t
                              (get_item_t map_0_0 i_10
                              __anonstruct_Map_5_items_map_0_45)
                              __anonstruct_Item_4_key_1_get_item_t_87)
                              __anonstruct_Key_2_b_get_item_t_87
                              __anonstruct_Key_2_b_key_0_46
                              __anonstruct_Key_2_a_get_item_t_87
                              __anonstruct_Key_2_a_key_0_46)))))))))))))))))))))))))
                           }
  
end
