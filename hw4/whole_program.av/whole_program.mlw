
theory Axiomatic_Padding 
                           use why3.Bool.Bool 
                           
end

theory Int32_of_Int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int32.t = (Int32.of_int (Int16.to_int n))
  
end

theory Bit_int32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int32_of_Int16
  
  use export enum.Bit_int32_of_bit_int16
  
end

theory Int64_of_Int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int64.t = (Int64.of_int (Int16.to_int n))
  
end

theory Bit_int64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int64_of_Int16
  
  use export enum.Bit_int64_of_bit_int16
  
end

theory Int64_of_Int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int64.t = (Int64.of_int (Int32.to_int n))
  
end

theory Bit_int64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int64_of_Int32
  
  use export enum.Bit_int64_of_bit_int32
  
end

theory Int8_of_Int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int8.t = (Int8.of_int (Int16.to_int n))
  
end

theory Bit_int8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int8_of_Int16
  
  use export enum.Bit_int8_of_bit_int16
  
end

theory Int8_of_Int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int8.t = (Int8.of_int (Int32.to_int n))
  
end

theory Bit_int8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int8_of_Int32
  
  use export enum.Bit_int8_of_bit_int32
  
end

theory Int8_of_Int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int8.t = (Int8.of_int (Int64.to_int n))
  
end

theory Bit_int8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int8_of_Int64
  
  use export enum.Bit_int8_of_bit_int64
  
end

theory Uint16_of_Int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint16.t = (Uint16.of_int (Int16.to_int n))
  
end

theory Bit_uint16_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint16_of_Int16
  
  use export enum.Bit_uint16_of_bit_int16
  
end

theory Uint16_of_Int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint16.t = (Uint16.of_int (Int32.to_int n))
  
end

theory Bit_uint16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint16_of_Int32
  
  use export enum.Bit_uint16_of_bit_int32
  
end

theory Uint16_of_Int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint16.t = (Uint16.of_int (Int64.to_int n))
  
end

theory Bit_uint16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint16_of_Int64
  
  use export enum.Bit_uint16_of_bit_int64
  
end

theory Uint16_of_Int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint16.t = (Uint16.of_int (Int8.to_int n))
  
end

theory Bit_uint16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint16_of_Int8
  
  use export enum.Bit_uint16_of_bit_int8
  
end

theory Uint32_of_Int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint32.t = (Uint32.of_int (Int16.to_int n))
  
end

theory Bit_uint32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint32_of_Int16
  
  use export enum.Bit_uint32_of_bit_int16
  
end

theory Uint32_of_Int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint32.t = (Uint32.of_int (Int32.to_int n))
  
end

theory Bit_uint32_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint32_of_Int32
  
  use export enum.Bit_uint32_of_bit_int32
  
end

theory Uint32_of_Int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint32.t = (Uint32.of_int (Int64.to_int n))
  
end

theory Bit_uint32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint32_of_Int64
  
  use export enum.Bit_uint32_of_bit_int64
  
end

theory Uint32_of_Int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint32.t = (Uint32.of_int (Int8.to_int n))
  
end

theory Bit_uint32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint32_of_Int8
  
  use export enum.Bit_uint32_of_bit_int8
  
end

theory Uint32_of_Uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint32.t = (Uint32.of_int (Uint16.to_int n))
  
end

theory Bit_uint32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint16
  
  use export enum.Bit_uint32_of_bit_uint16
  
end

theory Uint64_of_Int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint64.t = (Uint64.of_int (Int16.to_int n))
  
end

theory Bit_uint64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint64_of_Int16
  
  use export enum.Bit_uint64_of_bit_int16
  
end

theory Uint64_of_Int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint64.t = (Uint64.of_int (Int32.to_int n))
  
end

theory Bit_uint64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint64_of_Int32
  
  use export enum.Bit_uint64_of_bit_int32
  
end

theory Uint64_of_Int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint64.t = (Uint64.of_int (Int64.to_int n))
  
end

theory Bit_uint64_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint64_of_Int64
  
  use export enum.Bit_uint64_of_bit_int64
  
end

theory Uint64_of_Int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint64.t = (Uint64.of_int (Int8.to_int n))
  
end

theory Bit_uint64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint64_of_Int8
  
  use export enum.Bit_uint64_of_bit_int8
  
end

theory Uint64_of_Uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint64.t = (Uint64.of_int (Uint16.to_int n))
  
end

theory Bit_uint64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint16
  
  use export enum.Bit_uint64_of_bit_uint16
  
end

theory Uint64_of_Uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint64.t = (Uint64.of_int (Uint32.to_int n))
  
end

theory Bit_uint64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint32
  
  use export enum.Bit_uint64_of_bit_uint32
  
end

theory Uint8_of_Int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint8.t = (Uint8.of_int (Int16.to_int n))
  
end

theory Bit_uint8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint8_of_Int16
  
  use export enum.Bit_uint8_of_bit_int16
  
end

theory Uint8_of_Int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint8.t = (Uint8.of_int (Int32.to_int n))
  
end

theory Bit_uint8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint8_of_Int32
  
  use export enum.Bit_uint8_of_bit_int32
  
end

theory Uint8_of_Int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint8.t = (Uint8.of_int (Int64.to_int n))
  
end

theory Bit_uint8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint8_of_Int64
  
  use export enum.Bit_uint8_of_bit_int64
  
end

theory Uint8_of_Int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint8.t = (Uint8.of_int (Int8.to_int n))
  
end

theory Bit_uint8_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint8_of_Int8
  
  use export enum.Bit_uint8_of_bit_int8
  
end

theory Uint8_of_Uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint8.t = (Uint8.of_int (Uint16.to_int n))
  
end

theory Bit_uint8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint16
  
  use export enum.Bit_uint8_of_bit_uint16
  
end

theory Uint8_of_Uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint8.t = (Uint8.of_int (Uint32.to_int n))
  
end

theory Bit_uint8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint32
  
  use export enum.Bit_uint8_of_bit_uint32
  
end

theory Uint8_of_Uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint8.t = (Uint8.of_int (Uint64.to_int n))
  
end

theory Bit_uint8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint64
  
  use export enum.Bit_uint8_of_bit_uint64
  
end

theory Int16_of_Int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int16.t = (Int16.of_int (Int32.to_int n))
  
end

theory Bit_int16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int16_of_Int32
  
  use export enum.Bit_int16_of_bit_int32
  
end

theory Int16_of_Int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int16.t = (Int16.of_int (Int64.to_int n))
  
end

theory Bit_int16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int16_of_Int64
  
  use export enum.Bit_int16_of_bit_int64
  
end

theory Int32_of_Int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int32.t = (Int32.of_int (Int64.to_int n))
  
end

theory Bit_int32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int32_of_Int64
  
  use export enum.Bit_int32_of_bit_int64
  
end

theory Int16_of_Int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int16.t = (Int16.of_int (Int8.to_int n))
  
end

theory Bit_int16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int16_of_Int8
  
  use export enum.Bit_int16_of_bit_int8
  
end

theory Int32_of_Int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int32.t = (Int32.of_int (Int8.to_int n))
  
end

theory Bit_int32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int32_of_Int8
  
  use export enum.Bit_int32_of_bit_int8
  
end

theory Int64_of_Int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int64.t = (Int64.of_int (Int8.to_int n))
  
end

theory Bit_int64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int64_of_Int8
  
  use export enum.Bit_int64_of_bit_int8
  
end

theory Int16_of_Uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int16.t = (Int16.of_int (Uint16.to_int n))
  
end

theory Bit_int16_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int16_of_Uint16
  
  use export enum.Bit_int16_of_bit_uint16
  
end

theory Int32_of_Uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int32.t = (Int32.of_int (Uint16.to_int n))
  
end

theory Bit_int32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int32_of_Uint16
  
  use export enum.Bit_int32_of_bit_uint16
  
end

theory Int64_of_Uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int64.t = (Int64.of_int (Uint16.to_int n))
  
end

theory Bit_int64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int64_of_Uint16
  
  use export enum.Bit_int64_of_bit_uint16
  
end

theory Int8_of_Uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int8.t = (Int8.of_int (Uint16.to_int n))
  
end

theory Bit_int8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int8_of_Uint16
  
  use export enum.Bit_int8_of_bit_uint16
  
end

theory Int16_of_Uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int16.t = (Int16.of_int (Uint32.to_int n))
  
end

theory Bit_int16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int16_of_Uint32
  
  use export enum.Bit_int16_of_bit_uint32
  
end

theory Int32_of_Uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int32.t = (Int32.of_int (Uint32.to_int n))
  
end

theory Bit_int32_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int32_of_Uint32
  
  use export enum.Bit_int32_of_bit_uint32
  
end

theory Int64_of_Uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int64.t = (Int64.of_int (Uint32.to_int n))
  
end

theory Bit_int64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int64_of_Uint32
  
  use export enum.Bit_int64_of_bit_uint32
  
end

theory Int8_of_Uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int8.t = (Int8.of_int (Uint32.to_int n))
  
end

theory Bit_int8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int8_of_Uint32
  
  use export enum.Bit_int8_of_bit_uint32
  
end

theory Uint16_of_Uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint16.t = (Uint16.of_int (Uint32.to_int n))
  
end

theory Bit_uint16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint32
  
  use export enum.Bit_uint16_of_bit_uint32
  
end

theory Int16_of_Uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int16.t = (Int16.of_int (Uint64.to_int n))
  
end

theory Bit_int16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int16_of_Uint64
  
  use export enum.Bit_int16_of_bit_uint64
  
end

theory Int32_of_Uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int32.t = (Int32.of_int (Uint64.to_int n))
  
end

theory Bit_int32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int32_of_Uint64
  
  use export enum.Bit_int32_of_bit_uint64
  
end

theory Int64_of_Uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int64.t = (Int64.of_int (Uint64.to_int n))
  
end

theory Bit_int64_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int64_of_Uint64
  
  use export enum.Bit_int64_of_bit_uint64
  
end

theory Int8_of_Uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int8.t = (Int8.of_int (Uint64.to_int n))
  
end

theory Bit_int8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int8_of_Uint64
  
  use export enum.Bit_int8_of_bit_uint64
  
end

theory Uint16_of_Uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint16.t = (Uint16.of_int (Uint64.to_int n))
  
end

theory Bit_uint16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint64
  
  use export enum.Bit_uint16_of_bit_uint64
  
end

theory Uint32_of_Uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint32.t = (Uint32.of_int (Uint64.to_int n))
  
end

theory Bit_uint32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint64
  
  use export enum.Bit_uint32_of_bit_uint64
  
end

theory Int16_of_Uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int16.t = (Int16.of_int (Uint8.to_int n))
  
end

theory Bit_int16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int16_of_Uint8
  
  use export enum.Bit_int16_of_bit_uint8
  
end

theory Int32_of_Uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int32.t = (Int32.of_int (Uint8.to_int n))
  
end

theory Bit_int32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int32_of_Uint8
  
  use export enum.Bit_int32_of_bit_uint8
  
end

theory Int64_of_Uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int64.t = (Int64.of_int (Uint8.to_int n))
  
end

theory Bit_int64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int64_of_Uint8
  
  use export enum.Bit_int64_of_bit_uint8
  
end

theory Int8_of_Uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int8.t = (Int8.of_int (Uint8.to_int n))
  
end

theory Bit_int8_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int8_of_Uint8
  
  use export enum.Bit_int8_of_bit_uint8
  
end

theory Uint16_of_Uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint16.t = (Uint16.of_int (Uint8.to_int n))
  
end

theory Bit_uint16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint8
  
  use export enum.Bit_uint16_of_bit_uint8
  
end

theory Uint32_of_Uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint32.t = (Uint32.of_int (Uint8.to_int n))
  
end

theory Bit_uint32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint8
  
  use export enum.Bit_uint32_of_bit_uint8
  
end

theory Uint64_of_Uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint64.t = (Uint64.of_int (Uint8.to_int n))
  
end

theory Bit_uint64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint8
  
  use export enum.Bit_uint64_of_bit_uint8
  
end

module Unsafe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Globals_simple

  use why3.Bool.Bool 
  
end

theory Root_voidP

  use why3.Bool.Bool 
  
  use import core.Voidp 
  
end

module Root_voidP_safe

  use why3.Bool.Bool 
  
end

module Root_voidP_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_3_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_3_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_5_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_5_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_2_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_2_unsafe

  use why3.Bool.Bool 
  
end

theory Root___anonstruct_Map_5

  use why3.Bool.Bool 
  
  type __anonstruct_Map_5 
  
end

theory Root___anonstruct_Key_2

  use why3.Bool.Bool 
  
  type __anonstruct_Key_2 
  
end

theory Root___anonstruct_Value_3

  use why3.Bool.Bool 
  
  type __anonstruct_Value_3 
  
end

module Exceptions

  use why3.Bool.Bool 
  
  exception Goto__LOR_exc unit
  
  exception Goto__LOR_0_exc unit
  
  exception Goto__LOR_0_0_exc unit
  
  exception Goto__LOR_0_1_exc unit
  
  exception Goto__LOR_0_2_exc unit
  
  exception Goto__LOR_0_3_exc unit
  
  exception Goto_return_label_0_exc unit
  
  exception Goto_return_label_1_exc unit
  
  exception Goto_while_0_break_exc unit
  
  exception Goto_while_0_break_0_exc unit
  
  exception Goto_while_0_break_0_0_exc unit
  
  exception Goto_while_0_break_0_1_exc unit
  
  exception Goto_while_0_break_0_2_exc unit
  
  exception Goto_while_1_break_exc unit
  
  exception Loop_continue_exc unit
  
  exception Loop_exit_exc unit
  
  exception Return_label_exc unit
  
end

theory Struct_voidP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Voidp_tag_id 
  
  predicate frame_tag_struct_voidP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_voidP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (tag_fresh voidP_tag_table p)
  
  predicate fresh_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (alloc_fresh voidP_alloc_table p)
  
  predicate container_of_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_voidP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) voidP_tag)
  
  predicate typeof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) voidP_tag))))
  
  predicate instanceof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p voidP_tag)
  
  predicate instanceof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) voidP_tag))))
  
  predicate right_valid_struct_voidP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((>=) (offset_max voidP_alloc_table p) b)
  
  predicate left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((<=) (offset_min voidP_alloc_table p) a)
  
  predicate strict_left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((=) (offset_min voidP_alloc_table p) a)
  
  predicate valid_struct_voidP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  =
     (((<=) (offset_min voidP_alloc_table p) a) /\
     ((>=) (offset_max voidP_alloc_table p) b))
  
  predicate strict_valid_struct_voidP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  =
     (((=) (offset_min voidP_alloc_table p) a) /\
     ((=) (offset_max voidP_alloc_table p) b))
  
end

theory Struct___anonstruct_Value_3

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Value_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Value_3_tag  : (tag_id
  __anonstruct_Value_3)
  
  axiom U___anonstruct_Value_3_parenttag_bottom  :
  (parenttag __anonstruct_Value_3_tag bottom_tag)
  
  axiom U___anonstruct_Value_3_is_final  :
  (forall __anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3).
   (forall p : (pointer __anonstruct_Value_3).
    ((instanceof __anonstruct_Value_3_tag_table p __anonstruct_Value_3_tag)
     ->
     ((=) (typeof __anonstruct_Value_3_tag_table p) __anonstruct_Value_3_tag))))
  
  predicate frame_tag_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (old___anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3))
  =
     ((tag_extends old___anonstruct_Value_3_tag_table
      __anonstruct_Value_3_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Value_3_tag_table
     __anonstruct_Value_3_tag_table p))
  
  predicate frame_free_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (old___anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3))
  =
     ((free_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     (free_block old___anonstruct_Value_3_alloc_table
     __anonstruct_Value_3_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (n : int) (old___anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  =
     ((alloc_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     (alloc_block old___anonstruct_Value_3_alloc_table
     __anonstruct_Value_3_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (n : int) (__anonstruct_Value_3_tag_table :
  (tag_table __anonstruct_Value_3))
  = (tag_fresh __anonstruct_Value_3_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (n : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = (alloc_fresh __anonstruct_Value_3_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) = true
  
  predicate container_of_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (l : int) (r : int) (__anonstruct_Value_3_tag_table
  : (tag_table __anonstruct_Value_3)) = true
  
  predicate typeof_singleton_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3))
  = ((=) (typeof __anonstruct_Value_3_tag_table p) __anonstruct_Value_3_tag)
  
  predicate typeof_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (l : int) (r : int) (__anonstruct_Value_3_tag_table
  : (tag_table __anonstruct_Value_3))
  =
     (((=) (typeof __anonstruct_Value_3_tag_table p) __anonstruct_Value_3_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Value_3_tag_table (shift p i))
       __anonstruct_Value_3_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3))
  = (instanceof __anonstruct_Value_3_tag_table p __anonstruct_Value_3_tag)
  
  predicate instanceof_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (l : int) (r : int) (__anonstruct_Value_3_tag_table
  : (tag_table __anonstruct_Value_3))
  =
     ((instanceof __anonstruct_Value_3_tag_table p __anonstruct_Value_3_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Value_3_tag_table (shift p i)
       __anonstruct_Value_3_tag))))
  
  predicate right_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (b : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = ((>=) (offset_max __anonstruct_Value_3_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = ((<=) (offset_min __anonstruct_Value_3_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (__anonstruct_Value_3_alloc_table :
  (alloc_table __anonstruct_Value_3))
  = ((=) (offset_min __anonstruct_Value_3_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (b : int)
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  =
     (((<=) (offset_min __anonstruct_Value_3_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Value_3_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Value_3 (p : (pointer
  __anonstruct_Value_3)) (a : int) (b : int)
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  =
     (((=) (offset_min __anonstruct_Value_3_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Value_3_alloc_table p) b))
  
  axiom U___anonstruct_Value_3_int  :
  ((=) (int_of_tag __anonstruct_Value_3_tag) (7))
  
end

theory Struct___anonstruct_Key_2

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Key_2_tag  : (tag_id
  __anonstruct_Key_2)
  
  axiom U___anonstruct_Key_2_parenttag_bottom  :
  (parenttag __anonstruct_Key_2_tag bottom_tag)
  
  axiom U___anonstruct_Key_2_is_final  :
  (forall __anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2).
   (forall p : (pointer __anonstruct_Key_2).
    ((instanceof __anonstruct_Key_2_tag_table p __anonstruct_Key_2_tag) ->
     ((=) (typeof __anonstruct_Key_2_tag_table p) __anonstruct_Key_2_tag))))
  
  predicate frame_tag_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (old___anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2))
  =
     ((tag_extends old___anonstruct_Key_2_tag_table
      __anonstruct_Key_2_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Key_2_tag_table
     __anonstruct_Key_2_tag_table p))
  
  predicate frame_free_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (old___anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2))
  =
     ((free_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     (free_block old___anonstruct_Key_2_alloc_table
     __anonstruct_Key_2_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (n : int) (old___anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  =
     ((alloc_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     (alloc_block old___anonstruct_Key_2_alloc_table
     __anonstruct_Key_2_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (n : int) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) = (tag_fresh __anonstruct_Key_2_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (n : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = (alloc_fresh __anonstruct_Key_2_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) = true
  
  predicate container_of_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (l : int) (r : int) (__anonstruct_Key_2_tag_table :
  (tag_table __anonstruct_Key_2)) = true
  
  predicate typeof_singleton_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2))
  = ((=) (typeof __anonstruct_Key_2_tag_table p) __anonstruct_Key_2_tag)
  
  predicate typeof_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (l : int) (r : int) (__anonstruct_Key_2_tag_table :
  (tag_table __anonstruct_Key_2))
  =
     (((=) (typeof __anonstruct_Key_2_tag_table p) __anonstruct_Key_2_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Key_2_tag_table (shift p i))
       __anonstruct_Key_2_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2))
  = (instanceof __anonstruct_Key_2_tag_table p __anonstruct_Key_2_tag)
  
  predicate instanceof_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (l : int) (r : int) (__anonstruct_Key_2_tag_table :
  (tag_table __anonstruct_Key_2))
  =
     ((instanceof __anonstruct_Key_2_tag_table p __anonstruct_Key_2_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Key_2_tag_table (shift p i)
       __anonstruct_Key_2_tag))))
  
  predicate right_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (b : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = ((>=) (offset_max __anonstruct_Key_2_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = ((<=) (offset_min __anonstruct_Key_2_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  = ((=) (offset_min __anonstruct_Key_2_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (b : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  =
     (((<=) (offset_min __anonstruct_Key_2_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Key_2_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Key_2 (p : (pointer
  __anonstruct_Key_2)) (a : int) (b : int) (__anonstruct_Key_2_alloc_table :
  (alloc_table __anonstruct_Key_2))
  =
     (((=) (offset_min __anonstruct_Key_2_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Key_2_alloc_table p) b))
  
  axiom U___anonstruct_Key_2_int  :
  ((=) (int_of_tag __anonstruct_Key_2_tag) (5))
  
end

theory Struct___anonstruct_Item_4

  use import core.Voidp_tag_id 
  
  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Struct_voidP 
  
  use import Struct___anonstruct_Value_3 
  
  use import Struct___anonstruct_Key_2 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Item_4_tag  : (tag_id
  voidP)
  
  axiom U___anonstruct_Item_4_parenttag_voidP  :
  (parenttag __anonstruct_Item_4_tag voidP_tag)
  
  axiom U___anonstruct_Item_4_is_final  :
  (forall voidP_tag_table : (tag_table voidP).
   (forall p : (pointer voidP).
    ((instanceof voidP_tag_table p __anonstruct_Item_4_tag) ->
     ((=) (typeof voidP_tag_table p) __anonstruct_Item_4_tag))))
  
  predicate frame_tag_struct___anonstruct_Item_4 (p : (pointer voidP))
  (old___anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (__anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (old___anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (__anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (old_voidP_tag_table : (tag_table voidP)) (voidP_tag_table : (tag_table
  voidP)) (__anonstruct_Item_4_key_2 : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((tag_extends old___anonstruct_Key_2_tag_table
      __anonstruct_Key_2_tag_table)
     /\
     ((alloc_tag_blockset old___anonstruct_Key_2_tag_table
      __anonstruct_Key_2_tag_table
      (pset_singleton (select __anonstruct_Item_4_key_2 p)))
     /\
     ((tag_extends old___anonstruct_Value_3_tag_table
      __anonstruct_Value_3_tag_table)
     /\
     ((alloc_tag_blockset old___anonstruct_Value_3_tag_table
      __anonstruct_Value_3_tag_table
      (pset_singleton (select __anonstruct_Item_4_value_2 p)))
     /\
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))))))
  
  predicate frame_free_struct___anonstruct_Item_4 (p : (pointer voidP))
  (old___anonstruct_Key_2_alloc_table : (alloc_table __anonstruct_Key_2))
  (__anonstruct_Key_2_alloc_table : (alloc_table __anonstruct_Key_2))
  (old___anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP)) (__anonstruct_Item_4_key_2 : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((free_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table
      (pset_singleton (select __anonstruct_Item_4_key_2 p)))
     /\
     ((free_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table
      (pset_singleton (select __anonstruct_Item_4_value_2 p)))
     /\
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))))))
  
  predicate frame_alloc_struct___anonstruct_Item_4 (p : (pointer voidP)) (n :
  int) (old___anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (old___anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (old_voidP_alloc_table : (alloc_table voidP))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_4_key_2 :
  (memory voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 :
  (memory voidP (pointer __anonstruct_Value_3)))
  =
     ((alloc_extends old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Key_2_alloc_table
      __anonstruct_Key_2_alloc_table
      (pset_singleton (select __anonstruct_Item_4_key_2 p)))
     /\
     ((alloc_extends old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Value_3_alloc_table
      __anonstruct_Value_3_alloc_table
      (pset_singleton (select __anonstruct_Item_4_value_2 p)))
     /\
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))))))
  
  predicate fresh_tag_struct___anonstruct_Item_4 (p : (pointer voidP)) (n :
  int) (__anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (__anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_4_key_2 : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory
  voidP (pointer __anonstruct_Value_3)))
  =
     ((fresh_tag_struct_voidP p n voidP_tag_table) /\
     ((fresh_tag_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0)
      __anonstruct_Value_3_tag_table)
     /\
     ((fresh_tag_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_2 p) (0) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((instanceof voidP_tag_table (shift p i) __anonstruct_Item_4_tag) ->
       ((fresh_tag_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i)) (0)
        __anonstruct_Value_3_tag_table)
       /\
       (fresh_tag_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i)) (0)
       __anonstruct_Key_2_tag_table)))))))
  
  predicate fresh_alloc_struct___anonstruct_Item_4 (p : (pointer voidP)) (n :
  int) (__anonstruct_Key_2_alloc_table : (alloc_table __anonstruct_Key_2))
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_4_key_2 :
  (memory voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 :
  (memory voidP (pointer __anonstruct_Value_3)))
  =
     ((fresh_alloc_struct_voidP p n voidP_alloc_table) /\
     ((fresh_alloc_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     ((fresh_alloc_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_2 p) (0)
      __anonstruct_Key_2_alloc_table)
     /\
     (forall i : int.
      ((((<=) (0) i) /\ ((<=) i n)) ->
       ((fresh_alloc_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i)) (0)
        __anonstruct_Value_3_alloc_table)
       /\
       (fresh_alloc_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i)) (0)
       __anonstruct_Key_2_alloc_table)))))))
  
  predicate container_of_singleton_struct___anonstruct_Item_4 (p : (pointer
  voidP)) (__anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (__anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_4_key_2 : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory
  voidP (pointer __anonstruct_Value_3)))
  =
     ((container_of_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) __anonstruct_Value_3_tag_table)
     /\
     (container_of_singleton_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_2 p) __anonstruct_Key_2_tag_table))
  
  predicate container_of_struct___anonstruct_Item_4 (p : (pointer voidP)) (l
  : int) (r : int) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_4_key_2 : (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((container_of_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) __anonstruct_Value_3_tag_table)
     /\
     ((container_of_singleton_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_2 p) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((container_of_singleton_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i))
        __anonstruct_Value_3_tag_table)
       /\
       (container_of_singleton_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i))
       __anonstruct_Key_2_tag_table))))))
  
  predicate typeof_singleton_struct___anonstruct_Item_4 (p : (pointer voidP))
  (__anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (__anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_4_key_2 : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory
  voidP (pointer __anonstruct_Value_3)))
  =
     (((=) (typeof voidP_tag_table p) __anonstruct_Item_4_tag) /\
     ((typeof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) __anonstruct_Value_3_tag_table)
     /\
     (typeof_singleton_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_2 p) __anonstruct_Key_2_tag_table)))
  
  predicate typeof_struct___anonstruct_Item_4 (p : (pointer voidP)) (l : int)
  (r : int) (__anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (__anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_4_key_2 : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory
  voidP (pointer __anonstruct_Value_3)))
  =
     (((=) (typeof voidP_tag_table p) __anonstruct_Item_4_tag) /\
     ((typeof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) __anonstruct_Value_3_tag_table)
     /\
     ((typeof_singleton_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_2 p) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (((=) (typeof voidP_tag_table (shift p i)) __anonstruct_Item_4_tag) /\
       ((typeof_singleton_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i))
        __anonstruct_Value_3_tag_table)
       /\
       (typeof_singleton_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i))
       __anonstruct_Key_2_tag_table))))))))
  
  predicate instanceof_singleton_struct___anonstruct_Item_4 (p : (pointer
  voidP)) (__anonstruct_Key_2_tag_table : (tag_table __anonstruct_Key_2))
  (__anonstruct_Value_3_tag_table : (tag_table __anonstruct_Value_3))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_4_key_2 : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 : (memory
  voidP (pointer __anonstruct_Value_3)))
  =
     ((instanceof voidP_tag_table p __anonstruct_Item_4_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) __anonstruct_Value_3_tag_table)
     /\
     (instanceof_singleton_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_2 p) __anonstruct_Key_2_tag_table)))
  
  predicate instanceof_struct___anonstruct_Item_4 (p : (pointer voidP)) (l :
  int) (r : int) (__anonstruct_Key_2_tag_table : (tag_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_tag_table : (tag_table
  __anonstruct_Value_3)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_4_key_2 : (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((instanceof voidP_tag_table p __anonstruct_Item_4_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) __anonstruct_Value_3_tag_table)
     /\
     ((instanceof_singleton_struct___anonstruct_Key_2
      (select __anonstruct_Item_4_key_2 p) __anonstruct_Key_2_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((instanceof voidP_tag_table (shift p i) __anonstruct_Item_4_tag) /\
       ((instanceof_singleton_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i))
        __anonstruct_Value_3_tag_table)
       /\
       (instanceof_singleton_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i))
       __anonstruct_Key_2_tag_table))))))))
  
  predicate right_valid_struct___anonstruct_Item_4 (p : (pointer voidP)) (b :
  int) (__anonstruct_Key_2_alloc_table : (alloc_table __anonstruct_Key_2))
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_4_key_2 :
  (memory voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 :
  (memory voidP (pointer __anonstruct_Value_3)))
  =
     ((right_valid_struct_voidP p b voidP_alloc_table) /\
     ((right_valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     (right_valid_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_2 p) (0) __anonstruct_Key_2_alloc_table)))
  
  predicate left_valid_struct___anonstruct_Item_4 (p : (pointer voidP)) (a :
  int) (__anonstruct_Key_2_alloc_table : (alloc_table __anonstruct_Key_2))
  (__anonstruct_Value_3_alloc_table : (alloc_table __anonstruct_Value_3))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_4_key_2 :
  (memory voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2 :
  (memory voidP (pointer __anonstruct_Value_3)))
  =
     ((left_valid_struct_voidP p a voidP_alloc_table) /\
     ((left_valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     (left_valid_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_2 p) (0) __anonstruct_Key_2_alloc_table)))
  
  predicate strict_left_valid_struct___anonstruct_Item_4 (p : (pointer
  voidP)) (a : int) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_4_key_2 : (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((strict_left_valid_struct_voidP p a voidP_alloc_table) /\
     ((left_valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     (left_valid_struct___anonstruct_Key_2
     (select __anonstruct_Item_4_key_2 p) (0) __anonstruct_Key_2_alloc_table)))
  
  predicate valid_struct___anonstruct_Item_4 (p : (pointer voidP)) (a : int)
  (b : int) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_4_key_2 : (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((valid_struct_voidP p a b voidP_alloc_table) /\
     ((valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     ((valid_struct___anonstruct_Key_2 (select __anonstruct_Item_4_key_2 p)
      (0) (0) __anonstruct_Key_2_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       ((valid_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i)) (0) (0)
        __anonstruct_Value_3_alloc_table)
       /\
       (valid_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i)) (0) (0)
       __anonstruct_Key_2_alloc_table)))))))
  
  predicate strict_valid_struct___anonstruct_Item_4 (p : (pointer voidP)) (a
  : int) (b : int) (__anonstruct_Key_2_alloc_table : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Value_3_alloc_table : (alloc_table
  __anonstruct_Value_3)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_4_key_2 : (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_value_2 : (memory voidP (pointer
  __anonstruct_Value_3)))
  =
     ((strict_valid_struct_voidP p a b voidP_alloc_table) /\
     ((valid_struct___anonstruct_Value_3
      (select __anonstruct_Item_4_value_2 p) (0) (0)
      __anonstruct_Value_3_alloc_table)
     /\
     ((valid_struct___anonstruct_Key_2 (select __anonstruct_Item_4_key_2 p)
      (0) (0) __anonstruct_Key_2_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       ((valid_struct___anonstruct_Value_3
        (select __anonstruct_Item_4_value_2 (shift p i)) (0) (0)
        __anonstruct_Value_3_alloc_table)
       /\
       (valid_struct___anonstruct_Key_2
       (select __anonstruct_Item_4_key_2 (shift p i)) (0) (0)
       __anonstruct_Key_2_alloc_table)))))))
  
  axiom U___anonstruct_Item_4_int  :
  ((=) (int_of_tag __anonstruct_Item_4_tag) (4))
  
end

module Struct___anonstruct_Item_4_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Item_4
  (p : (pointer voidP)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Value_3_alloc_table : ref (alloc_table
     __anonstruct_Value_3)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Item_4_key_2 : (memory voidP (pointer
       __anonstruct_Key_2))) 
       (__anonstruct_Item_4_value_2 : (memory voidP (pointer
        __anonstruct_Value_3))) : unit
        requires {
          (("expl:Deallocation" ((=) p null)) \/
          (freeable !voidP_alloc_table p)) }
        writes { __anonstruct_Key_2_alloc_table,
        __anonstruct_Value_3_alloc_table, voidP_alloc_table }
        ensures {
          ((((=) p null) /\
           (((=) !__anonstruct_Key_2_alloc_table (old
            !__anonstruct_Key_2_alloc_table))
           /\
           (((=) !__anonstruct_Value_3_alloc_table (old
            !__anonstruct_Value_3_alloc_table))
           /\ ((=) !voidP_alloc_table (old !voidP_alloc_table)))))
          \/
          ((frame_free_struct___anonstruct_Item_4 p (old
           !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table
           (old !__anonstruct_Value_3_alloc_table)
           !__anonstruct_Value_3_alloc_table (old !voidP_alloc_table)
           !voidP_alloc_table __anonstruct_Item_4_key_2
           __anonstruct_Item_4_value_2)
          /\
          (fresh_alloc_struct___anonstruct_Item_4 p
          (offset_max (old !voidP_alloc_table) p)
          !__anonstruct_Key_2_alloc_table !__anonstruct_Value_3_alloc_table
          !voidP_alloc_table __anonstruct_Item_4_key_2
          __anonstruct_Item_4_value_2))) }
  
  val allocate_struct___anonstruct_Item_4_requires
  (n : int) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Value_3_alloc_table : ref (alloc_table
     __anonstruct_Value_3)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) 
       (__anonstruct_Value_3_tag_table : ref (tag_table
        __anonstruct_Value_3)) 
        (voidP_tag_table : ref (tag_table voidP)) 
         (__anonstruct_Item_4_key_2 : (memory voidP (pointer
          __anonstruct_Key_2))) 
          (__anonstruct_Item_4_value_2 : (memory voidP (pointer
           __anonstruct_Value_3))) : (pointer voidP)
           requires { ((>=) n (0)) } writes { __anonstruct_Key_2_alloc_table,
           __anonstruct_Key_2_tag_table, __anonstruct_Value_3_alloc_table,
           __anonstruct_Value_3_tag_table, voidP_alloc_table, voidP_tag_table
           }
           ensures {
             ((strict_valid_struct___anonstruct_Item_4 result (0)
              (Int.(-) n (1)) !__anonstruct_Key_2_alloc_table
              !__anonstruct_Value_3_alloc_table !voidP_alloc_table
              __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
             /\
             ((frame_alloc_struct___anonstruct_Item_4 result n (old
              !__anonstruct_Key_2_alloc_table)
              !__anonstruct_Key_2_alloc_table (old
              !__anonstruct_Value_3_alloc_table)
              !__anonstruct_Value_3_alloc_table (old !voidP_alloc_table)
              !voidP_alloc_table __anonstruct_Item_4_key_2
              __anonstruct_Item_4_value_2)
             /\
             ((frame_tag_struct___anonstruct_Item_4 result (old
              !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table
              (old !__anonstruct_Value_3_tag_table)
              !__anonstruct_Value_3_tag_table (old !voidP_tag_table)
              !voidP_tag_table __anonstruct_Item_4_key_2
              __anonstruct_Item_4_value_2)
             /\
             ((fresh_alloc_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Key_2_alloc_table) (old
              !__anonstruct_Value_3_alloc_table) (old !voidP_alloc_table)
              __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
             /\
             ((fresh_tag_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Key_2_tag_table) (old
              !__anonstruct_Value_3_tag_table) (old !voidP_tag_table)
              __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
             /\
             ((typeof_struct___anonstruct_Item_4 result (0) n
              !__anonstruct_Key_2_tag_table !__anonstruct_Value_3_tag_table
              !voidP_tag_table __anonstruct_Item_4_key_2
              __anonstruct_Item_4_value_2)
             /\
             (container_of_struct___anonstruct_Item_4 result (0) n
             !__anonstruct_Key_2_tag_table !__anonstruct_Value_3_tag_table
             !voidP_tag_table __anonstruct_Item_4_key_2
             __anonstruct_Item_4_value_2))))))) }
  
end

module Safe_uint64_of_Safe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { (Uint64.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

theory Axiomatic_MapCount

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  function count (pointer __anonstruct_Map_5) int int (memory
  __anonstruct_Map_5 (pointer voidP)) (memory voidP Int32.t) :
  int
  
  
  axiom Count_zero #"/home/nik/Projects/ver/hw4/map.h" 95 59 156#
  "expl:Axiom count_zero"  :
  (forall __anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5
   (pointer voidP)).
   (forall __anonstruct_Item_4_existent_items_49_at_L : (memory voidP
    Int32.t).
    (#"/home/nik/Projects/ver/hw4/map.h" 97 22 94#
    (forall map_0_0 : (pointer __anonstruct_Map_5).
     (forall m_0 : int.
      (forall n_2 : int.
       (((>=) m_0 n_2) ->
        ((=)
        (count map_0_0 m_0 n_2 __anonstruct_Map_5_items_map_2_at_L
        __anonstruct_Item_4_existent_items_49_at_L) (0)))))))))
  
  predicate count_one_p (map_1 : (pointer __anonstruct_Map_5)) (m_1 : int)
  (n_3 : int) (__anonstruct_Map_5_items_map_2_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_49_at_L : (memory voidP Int32.t))
  =
     (((=) n_3 (Int.(+) m_1 (1))) ->
      ((=)
      (count map_1 m_1 n_3 __anonstruct_Map_5_items_map_2_at_L
      __anonstruct_Item_4_existent_items_49_at_L)
      (if
       ((<>)
       (Int32.to_int
       (select __anonstruct_Item_4_existent_items_49_at_L
       (shift (select __anonstruct_Map_5_items_map_2_at_L map_1) m_1))) (0))
       then (1) else (0))))
  
  
  axiom Count_one #"/home/nik/Projects/ver/hw4/map.h" 102 61 143#
  "expl:Axiom count_one"  :
  (forall __anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5
   (pointer voidP)).
   (forall __anonstruct_Item_4_existent_items_49_at_L : (memory voidP
    Int32.t).
    (#"/home/nik/Projects/ver/hw4/map.h" 104 24 79#
    (forall map_2_0 : (pointer __anonstruct_Map_5).
     (forall m_2 : int.
      (count_one_p map_2_0 m_2 (Int.(+) m_2 (1))
      __anonstruct_Map_5_items_map_2_at_L
      __anonstruct_Item_4_existent_items_49_at_L))))))
  
  predicate count_split_p (map_3 : (pointer __anonstruct_Map_5)) (m_3 : int)
  (n_4 : int) (k_1 : int) (__anonstruct_Map_5_items_map_2_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_49_at_L : (memory voidP Int32.t))
  =
     ((=)
     (count map_3 m_3 k_1 __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)
     (Int.(+)
     (count map_3 m_3 n_4 __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)
     (count map_3 n_4 k_1 __anonstruct_Map_5_items_map_2_at_L
     __anonstruct_Item_4_existent_items_49_at_L)))
  
  
  axiom Count_split #"/home/nik/Projects/ver/hw4/map.h" 107 64 179#
  "expl:Axiom count_split"  :
  (forall __anonstruct_Map_5_items_map_2_at_L : (memory __anonstruct_Map_5
   (pointer voidP)).
   (forall __anonstruct_Item_4_existent_items_49_at_L : (memory voidP
    Int32.t).
    (#"/home/nik/Projects/ver/hw4/map.h" 109 26 112#
    (forall map_4 : (pointer __anonstruct_Map_5).
     (forall m_4 : int.
      (forall n_5 : int.
       (forall k_2 : int.
        ((((<=) m_4 n_5) /\ ((<=) n_5 k_2)) ->
         (count_split_p map_4 m_4 n_5 k_2 __anonstruct_Map_5_items_map_2_at_L
         __anonstruct_Item_4_existent_items_49_at_L)))))))))
  
  function count_exist (map_5 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_5_5_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_5_5_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_124_at_L : (memory voidP Int32.t)) :
  int
  =
     (count map_5 (0)
     (Int32.to_int (select __anonstruct_Map_5_capacity_map_5_5_at_L map_5))
     __anonstruct_Map_5_items_map_5_5_at_L
     __anonstruct_Item_4_existent_items_124_at_L)
  
  
end

module Function_initializeMap_safety
#"/home/nik/Projects/ver/hw4/map.c" 3 4 37# "expl:initializeMap, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Upd_offset_safe 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4_unsafe 
  
  use import core.Shift_safe 
  
  use Safe_uint64_of_Safe_int32 
  
  use Safe_uint64 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import core.Eq_pointer_safe 
  
  use import Axiomatic_MapCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  let initializeMap #"/home/nik/Projects/ver/hw4/map.c" 3 4 37#
  "expl:Function initializeMap, safety" =
  fun
   (map_2 : (pointer __anonstruct_Map_5)) (size : Int32.t)
   (__anonstruct_Key_2_items_82_alloc_table : ref (alloc_table
   __anonstruct_Key_2)) (__anonstruct_Value_3_items_82_alloc_table : ref
   (alloc_table __anonstruct_Value_3)) (voidP_items_82_alloc_table : ref
   (alloc_table voidP)) (voidP_items_82_tag_table : ref (tag_table voidP))
   (__anonstruct_Value_3_items_82_tag_table : ref (tag_table
   __anonstruct_Value_3)) (__anonstruct_Key_2_items_82_tag_table : ref
   (tag_table __anonstruct_Key_2)) (__anonstruct_Item_4_existent_items_82 :
   ref (memory voidP Int32.t)) (__anonstruct_Map_5_items_map_2_41 : ref
   (memory __anonstruct_Map_5 (pointer voidP)))
   (__anonstruct_Map_5_capacity_map_2_41 : ref (memory __anonstruct_Map_5
   Int32.t)) (__anonstruct_Map_5_count_map_2_41 : ref (memory
   __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_map_2_41_alloc_table :
   (alloc_table __anonstruct_Map_5)) (__anonstruct_Key_2_a_items_82 : (memory
   __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_items_82 : (memory
   __anonstruct_Key_2 Int32.t)) (__anonstruct_Item_4_key_2_items_82 : (memory
   voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2_items_82
   : (memory voidP (pointer __anonstruct_Value_3))) 
   requires {
   (#"whole_program.jc" 314 12 242#
   ((#"/home/nik/Projects/ver/hw4/map.h" 289 13 24#
    (#"whole_program.jc" 314 12 242#
    ((#"whole_program.jc" 314 12 242#
     ((<=) (offset_min __anonstruct_Map_5_map_2_41_alloc_table map_2) (0)))
    /\
    (#"whole_program.jc" 314 12 242#
    ((#"whole_program.jc" 314 12 242#
     ((>=) (offset_max __anonstruct_Map_5_map_2_41_alloc_table map_2) (0)))
    /\ (#"whole_program.jc" 314 12 242# ((=) true true)))))))
   /\
   (#"/home/nik/Projects/ver/hw4/map.h" 290 13 22#
   (Int32.(>=) size (#"whole_program.jc" 317 31 43# "expl:Integer cast"
   (Int32.of_int (0))))))) } ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let i_13 = ref (Safe_int32.any_  () ) in
    (let i_0_0 = ref (Safe_int32.any_  () ) in
    (let __retres = ref (Safe_int32.any_  () ) in
    try
     begin
     try
      begin
      try
       begin
       try
        begin
        (if
        (#"/home/nik/Projects/ver/hw4/map.c" 4 8 16#
        (Safe_int32.(<)  size
         (#"whole_program.jc" 346 26 38# "expl:Integer cast"
         (Safe_int32.of_int (0))) )) then (raise (Goto__LOR_exc ()))
        else
         (if
         (#"/home/nik/Projects/ver/hw4/map.c" 4 20 81#
         (#"/home/nik/Projects/ver/hw4/map.c" 4 20 81#
         (eq_pointer  __anonstruct_Map_5_map_2_41_alloc_table
          __anonstruct_Map_5_map_2_41_alloc_table map_2 (null  ) )))
         then (raise (Goto__LOR_exc ())) else ()));
         (raise (Goto__LOR_0_exc ())); (raise (Goto__LOR_exc ())) end with
        Goto__LOR_exc _jessie_2 ->
        'U__LOR:
        'U__LOR:
        'U__LOR:
        'U__LOR:
        begin
        (__retres :=
         (let _jessie_56 =
         (#"whole_program.jc" 352 37 49# "expl:Integer cast"
         (Safe_int32.of_int (1))) in
         begin
         (assert {
         (#"/home/nik/Projects/ver/hw4/map.c" 5 8 17#
         "expl:Pointer index bounds" true) }); _jessie_56 end));
         (raise (Return_label_exc ())) end end; (raise (Goto__LOR_0_exc ()))
       end with Goto__LOR_0_exc _jessie_3 ->
       'U__LOR_0:
       'U__LOR_0:
       begin
       ();
        begin
        (let _jessie_58 =
        (let _jessie_57 =
        (#"/home/nik/Projects/ver/hw4/map.c" 8 17 44# "expl:Allocation size"
        (allocate_struct___anonstruct_Item_4_requires 
         (Safe_uint64.to_int 
          (#"/home/nik/Projects/ver/hw4/map.c" 8 24 28# "expl:Integer cast"
          (Safe_uint64_of_Safe_int32.cast  size )) )
         __anonstruct_Key_2_items_82_alloc_table
         __anonstruct_Value_3_items_82_alloc_table voidP_items_82_alloc_table
         __anonstruct_Key_2_items_82_tag_table
         __anonstruct_Value_3_items_82_tag_table voidP_items_82_tag_table
         __anonstruct_Item_4_key_2_items_82
         __anonstruct_Item_4_value_2_items_82 )) in
        begin
        (assert {
        (#"/home/nik/Projects/ver/hw4/map.c" 8 17 44#
        "expl:Pointer index bounds" true) }); _jessie_57 end) in
        (let _jessie_59 = map_2 in
        (let _jessie_60 = (0) in
        (let _jessie_61 = _jessie_59 in
        (#"/home/nik/Projects/ver/hw4/map.c" 8 17 44#
        "expl:Pointer dereference"
        (upd  __anonstruct_Map_5_map_2_41_alloc_table
         __anonstruct_Map_5_items_map_2_41 _jessie_59 _jessie_58 ))))));
         begin
         (let _jessie_63 =
         (let _jessie_62 = size in
         begin
         (assert {
         (#"/home/nik/Projects/ver/hw4/map.c" 9 4 24#
         "expl:Pointer index bounds" true) }); _jessie_62 end) in
         (let _jessie_64 = map_2 in
         (let _jessie_65 = (0) in
         (let _jessie_66 = _jessie_64 in
         (#"/home/nik/Projects/ver/hw4/map.c" 9 4 24#
         "expl:Pointer dereference"
         (upd  __anonstruct_Map_5_map_2_41_alloc_table
          __anonstruct_Map_5_capacity_map_2_41 _jessie_64 _jessie_63 ))))));
          begin
          (let _jessie_68 =
          (let _jessie_67 =
          (#"whole_program.jc" 360 40 52# "expl:Integer cast"
          (Safe_int32.of_int (0))) in
          begin
          (assert {
          (#"/home/nik/Projects/ver/hw4/map.c" 10 4 18#
          "expl:Pointer index bounds" true) }); _jessie_67 end) in
          (let _jessie_69 = map_2 in
          (let _jessie_70 = (0) in
          (let _jessie_71 = _jessie_69 in
          (#"/home/nik/Projects/ver/hw4/map.c" 10 4 18#
          "expl:Pointer dereference"
          (upd  __anonstruct_Map_5_map_2_41_alloc_table
           __anonstruct_Map_5_count_map_2_41 _jessie_69 _jessie_68 ))))));
           (if
           (#"/home/nik/Projects/ver/hw4/map.c" 12 8 72#
           (#"/home/nik/Projects/ver/hw4/map.c" 12 8 72#
           (eq_pointer  !voidP_items_82_alloc_table
            !voidP_items_82_alloc_table
            (#"/home/nik/Projects/ver/hw4/map.c" 12 8 18#
            "expl:Pointer dereference"
            (acc  __anonstruct_Map_5_map_2_41_alloc_table
             !__anonstruct_Map_5_items_map_2_41 map_2 )) (null  ) )))
           then
            begin
            (__retres :=
             (let _jessie_72 =
             (#"whole_program.jc" 362 30 42# "expl:Integer cast"
             (Safe_int32.of_int (1))) in
             begin
             (assert {
             (#"/home/nik/Projects/ver/hw4/map.c" 13 8 17#
             "expl:Pointer index bounds" true) }); _jessie_72 end));
             (raise (Return_label_exc ())) end else ());
           try
            begin
            (i_13 :=
             (let _jessie_79 =
             (#"whole_program.jc" 367 23 35# "expl:Integer cast"
             (Safe_int32.of_int (0))) in
             begin
             (assert {
             (#"/home/nik/Projects/ver/hw4/map.c" 22 13 14#
             "expl:Pointer index bounds" true) }); _jessie_79 end));
             'LoopEntry:
             begin
             'LoopEntry:
             'Loop_3:
             loop
             invariant { (#"whole_program.jc" 369 9 2774# true) }
               variant { (#"/home/nik/Projects/ver/hw4/map.c" 20 21 38#
                 (Int.(-)
                 (Int32.to_int
                 (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
                 (Int32.to_int !i_13))) }
              begin
              any unit
              requires { true } reads {
              __anonstruct_Item_4_existent_items_82,
              __anonstruct_Key_2_items_82_alloc_table,
              __anonstruct_Map_5_capacity_map_2_41,
              __anonstruct_Map_5_items_map_2_41,
              __anonstruct_Value_3_items_82_alloc_table, map_2,
              voidP_items_82_alloc_table }
              ensures {
                ((#"/home/nik/Projects/ver/hw4/map.c" 19 23 84#
                 (forall j_6 : int.
                  ((((<=) (0) j_6) /\ ((<) j_6 (Int32.to_int !i_13))) ->
                   (Int32.(=)
                   (select !__anonstruct_Item_4_existent_items_82
                   (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                   j_6)) (#"whole_program.jc" 403 36 48# "expl:Integer cast"
                   (Int32.of_int (0)))))))
                /\
                ((#"/home/nik/Projects/ver/hw4/map.c" 18 23 66#
                 (if
                  ((<=) (0)
                  (Int.(-)
                  (Int32.to_int
                  (select !__anonstruct_Map_5_capacity_map_2_41 map_2)) (1)))
                  then
                  (((<=)
                   (offset_min !voidP_items_82_alloc_table
                   (select !__anonstruct_Map_5_items_map_2_41 map_2)) (0))
                  /\
                  (((>=)
                   (offset_max !voidP_items_82_alloc_table
                   (select !__anonstruct_Map_5_items_map_2_41 map_2))
                   (Int.(-)
                   (Int32.to_int
                   (select !__anonstruct_Map_5_capacity_map_2_41 map_2)) (1)))
                  /\
                  (forall __framac_tmp8 : int.
                   ((((<=) (0) __framac_tmp8) /\
                    ((<=) __framac_tmp8
                    (Int.(-)
                    (Int32.to_int
                    (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
                    (1)))) ->
                    (((<=)
                     (offset_min !__anonstruct_Key_2_items_82_alloc_table
                     (select __anonstruct_Item_4_key_2_items_82
                     (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                     __framac_tmp8))) (0))
                    /\
                    (((>=)
                     (offset_max !__anonstruct_Key_2_items_82_alloc_table
                     (select __anonstruct_Item_4_key_2_items_82
                     (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                     __framac_tmp8))) (0))
                    /\
                    (((=) true true) /\
                    (((<=)
                     (offset_min !__anonstruct_Value_3_items_82_alloc_table
                     (select __anonstruct_Item_4_value_2_items_82
                     (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                     __framac_tmp8))) (0))
                    /\
                    (((>=)
                     (offset_max !__anonstruct_Value_3_items_82_alloc_table
                     (select __anonstruct_Item_4_value_2_items_82
                     (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                     __framac_tmp8))) (0))
                    /\ ((=) true true)))))))))) else ((=) true true)))
                /\
                (#"/home/nik/Projects/ver/hw4/map.c" 17 23 46#
                (#"/home/nik/Projects/ver/hw4/map.c" 17 23 46#
                ((#"/home/nik/Projects/ver/hw4/map.c" 17 23 29#
                 (Int32.(<=) (#"whole_program.jc" 371 41 53#
                 "expl:Integer cast" (Int32.of_int (0))) !i_13))
                /\
                (#"/home/nik/Projects/ver/hw4/map.c" 17 28 46#
                (Int32.(<=) !i_13
                (select !__anonstruct_Map_5_capacity_map_2_41 map_2)))))))) } ;
               try
                begin
                'LoopCurrent:
                begin
                'LoopCurrent:
                (if
                (#"/home/nik/Projects/ver/hw4/map.c" 22 20 37#
                (Safe_int32.(<)  !i_13
                 (#"/home/nik/Projects/ver/hw4/map.c" 22 24 37#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_2_41_alloc_table
                  !__anonstruct_Map_5_capacity_map_2_41 map_2 )) )) then ()
                else (raise (Goto_while_0_break_exc ())));
                 begin
                 (let _jessie_74 =
                 (let _jessie_73 =
                 (#"whole_program.jc" 409 84 96# "expl:Integer cast"
                 (Safe_int32.of_int (0))) in
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 23 8 34#
                 "expl:Pointer index bounds" true) }); _jessie_73 end) in
                 (let _jessie_75 =
                 (#"/home/nik/Projects/ver/hw4/map.c" 23 8 18#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_2_41_alloc_table
                  !__anonstruct_Map_5_items_map_2_41 map_2 )) in
                 (let _jessie_76 = (Safe_int32.to_int  !i_13 ) in
                 (let _jessie_77 = (shift_typesafe  _jessie_75 _jessie_76 )
                 in
                 (#"/home/nik/Projects/ver/hw4/map.c" 23 8 34#
                 "expl:Pointer dereference"
                 (upd_offset_typesafe  !voidP_items_82_alloc_table
                  __anonstruct_Item_4_existent_items_82 _jessie_75 _jessie_76
                  _jessie_74 ))))));
                  (i_13 :=
                   (let _jessie_78 =
                   (Safe_int32.(+)  !i_13
                    (#"whole_program.jc" 410 53 65# "expl:Integer cast"
                    (Safe_int32.of_int (1))) ) in
                   begin
                   (assert {
                   (#"/home/nik/Projects/ver/hw4/map.c" 22 39 42#
                   "expl:Pointer index bounds" true) }); _jessie_78 end)) end
                end; (raise (Loop_continue_exc ())) end with
                Loop_continue_exc _jessie_7 -> () end end end;
              (raise (Goto_while_0_break_exc ())) end end with
            Goto_while_0_break_exc _jessie_1 ->
            'While_0_break: 'While_0_break: () end;
           begin
           (i_0_0 :=
            (let _jessie_80 =
            (#"whole_program.jc" 415 22 34# "expl:Integer cast"
            (Safe_int32.of_int (0))) in
            begin
            (assert {
            (#"/home/nik/Projects/ver/hw4/map.c" 27 12 13#
            "expl:Pointer index bounds" true) }); _jessie_80 end));
            'LoopEntry:
            'LoopEntry:
            'Loop_4:
            loop
            invariant { (#"whole_program.jc" 417 6 4794# true) }
              variant { (#"/home/nik/Projects/ver/hw4/map.c" 31 25 42#
                (Int.(-)
                (Int32.to_int
                (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
                (Int32.to_int !i_0_0))) }
             begin
             any unit
             requires { true } reads { __anonstruct_Item_4_existent_items_82,
             __anonstruct_Map_5_capacity_map_2_41,
             __anonstruct_Map_5_items_map_2_41, map_2 }
             ensures {
               ((#"/home/nik/Projects/ver/hw4/map.c" 30 27 48#
                ((=)
                (count map_2 (0) (Int32.to_int !i_0_0)
                !__anonstruct_Map_5_items_map_2_41
                !__anonstruct_Item_4_existent_items_82) (0)))
               /\
               (#"/home/nik/Projects/ver/hw4/map.c" 29 27 50#
               (#"/home/nik/Projects/ver/hw4/map.c" 29 27 50#
               ((#"/home/nik/Projects/ver/hw4/map.c" 29 27 33#
                (Int32.(<=) (#"whole_program.jc" 419 38 50#
                "expl:Integer cast" (Int32.of_int (0))) !i_0_0))
               /\
               (#"/home/nik/Projects/ver/hw4/map.c" 29 32 50#
               (Int32.(<=) !i_0_0
               (select !__anonstruct_Map_5_capacity_map_2_41 map_2))))))) } ;
              try
               begin
               'LoopCurrent:
               begin
               'LoopCurrent:
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 33 15 32#
               (Safe_int32.(<)  !i_0_0
                (#"/home/nik/Projects/ver/hw4/map.c" 33 19 32#
                "expl:Pointer dereference"
                (acc  __anonstruct_Map_5_map_2_41_alloc_table
                 !__anonstruct_Map_5_capacity_map_2_41 map_2 )) )) then ()
               else (raise (Goto_while_0_break_0_exc ())));
                begin
                (i_0_0 :=
                 (let _jessie_81 =
                 (Safe_int32.(+)  !i_0_0
                  (#"whole_program.jc" 429 57 69# "expl:Integer cast"
                  (Safe_int32.of_int (1))) ) in
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 34 12 15#
                 "expl:Pointer index bounds" true) }); _jessie_81 end));
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Item_4_existent_items_82,
                 __anonstruct_Map_5_items_map_2_41, map_2 }
                 ensures {
                   (#"/home/nik/Projects/ver/hw4/map.c" 35 23 48#
                   ((=)
                   (count map_2 (0) (Int.(-) (Int32.to_int !i_0_0) (1))
                   !__anonstruct_Map_5_items_map_2_41
                   !__anonstruct_Item_4_existent_items_82) (0))) } ; () end;
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Item_4_existent_items_82,
                 __anonstruct_Map_5_items_map_2_41, map_2 }
                 ensures {
                   (#"/home/nik/Projects/ver/hw4/map.c" 36 23 84#
                   ((Int32.(=)
                    (select !__anonstruct_Item_4_existent_items_82
                    (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                    (Int.(-) (Int32.to_int !i_0_0) (1))))
                    (#"whole_program.jc" 444 63 75# "expl:Integer cast"
                    (Int32.of_int (0)))) ->
                    ((=)
                    (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                    (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82) (0)))) } ; () end;
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Item_4_existent_items_82,
                 __anonstruct_Map_5_items_map_2_41, map_2 }
                 ensures {
                   (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                   (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                   ((#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                    ((=)
                    (count map_2 (0) (Int32.to_int !i_0_0)
                    !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82)
                    (Int.(+)
                    (count map_2 (0) (Int.(-) (Int32.to_int !i_0_0) (1))
                    !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82)
                    (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                    (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82))))
                   /\
                   (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                   ((#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                    ((=)
                    (Int.(+)
                    (count map_2 (0) (Int.(-) (Int32.to_int !i_0_0) (1))
                    !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82)
                    (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                    (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82))
                    (Int.(+) (0)
                    (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                    (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82))))
                   /\
                   (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                   ((#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                    ((=)
                    (Int.(+) (0)
                    (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                    (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                    !__anonstruct_Item_4_existent_items_82))
                    (Int.(+) (0) (0))))
                   /\
                   (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                   ((=) (Int.(+) (0) (0)) (0)))))))))) } ; () end end end;
                (raise (Loop_continue_exc ())) end with Loop_continue_exc
               _jessie_9 -> () end end end end end end end end end;
       (raise (Goto_while_0_break_0_exc ())) end with
      Goto_while_0_break_0_exc _jessie_4 ->
      'While_0_break_0:
      'While_0_break_0:
      begin
      ();
       begin
       any unit
       requires { true } reads { __anonstruct_Item_4_existent_items_82,
       __anonstruct_Map_5_capacity_map_2_41,
       __anonstruct_Map_5_count_map_2_41, __anonstruct_Map_5_items_map_2_41,
       map_2 }
       ensures {
         (#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
         (#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
         ((#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
          (Int32.(=) (select !__anonstruct_Map_5_count_map_2_41 map_2)
          (#"whole_program.jc" 499 54 66# "expl:Integer cast" (Int32.of_int
          (0)))))
         /\
         (#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
         ((=) (0)
         (count map_2 (0)
         (Int32.to_int (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
         !__anonstruct_Map_5_items_map_2_41
         !__anonstruct_Item_4_existent_items_82)))))) } ; () end;
       (__retres :=
        (let _jessie_82 =
        (#"whole_program.jc" 505 27 39# "expl:Integer cast"
        (Safe_int32.of_int (0))) in
        begin
        (assert {
        (#"/home/nik/Projects/ver/hw4/map.c" 45 4 13#
        "expl:Pointer index bounds" true) }); _jessie_82 end)) end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_5 ->
     'Return_label:
     'Return_label:
     begin
     (return :=
      (let _jessie_83 = !__retres in
      begin
      (assert {
      (#"whole_program.jc" 507 7 22# "expl:Pointer index bounds" true) });
       _jessie_83 end)); (raise Return) end end))); absurd  end with Return
    -> !return end)
  
end

module Struct___anonstruct_Item_4_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Item_4
  (p : (pointer voidP)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Value_3_alloc_table : ref (alloc_table
     __anonstruct_Value_3)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Item_4_key_2 : (memory voidP (pointer
       __anonstruct_Key_2))) 
       (__anonstruct_Item_4_value_2 : (memory voidP (pointer
        __anonstruct_Value_3))) : unit
        requires { true } writes { __anonstruct_Key_2_alloc_table,
        __anonstruct_Value_3_alloc_table, voidP_alloc_table }
        ensures {
          ((((=) p null) /\
           (((=) !__anonstruct_Key_2_alloc_table (old
            !__anonstruct_Key_2_alloc_table))
           /\
           (((=) !__anonstruct_Value_3_alloc_table (old
            !__anonstruct_Value_3_alloc_table))
           /\ ((=) !voidP_alloc_table (old !voidP_alloc_table)))))
          \/
          ((frame_free_struct___anonstruct_Item_4 p (old
           !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table
           (old !__anonstruct_Value_3_alloc_table)
           !__anonstruct_Value_3_alloc_table (old !voidP_alloc_table)
           !voidP_alloc_table __anonstruct_Item_4_key_2
           __anonstruct_Item_4_value_2)
          /\
          (fresh_alloc_struct___anonstruct_Item_4 p
          (offset_max (old !voidP_alloc_table) p)
          !__anonstruct_Key_2_alloc_table !__anonstruct_Value_3_alloc_table
          !voidP_alloc_table __anonstruct_Item_4_key_2
          __anonstruct_Item_4_value_2))) }
  
  val allocate_struct___anonstruct_Item_4
  (n : int) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Value_3_alloc_table : ref (alloc_table
     __anonstruct_Value_3)) 
     (voidP_alloc_table : ref (alloc_table voidP)) 
      (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) 
       (__anonstruct_Value_3_tag_table : ref (tag_table
        __anonstruct_Value_3)) 
        (voidP_tag_table : ref (tag_table voidP)) 
         (__anonstruct_Item_4_key_2 : (memory voidP (pointer
          __anonstruct_Key_2))) 
          (__anonstruct_Item_4_value_2 : (memory voidP (pointer
           __anonstruct_Value_3))) : (pointer voidP)
           requires { true } writes { __anonstruct_Key_2_alloc_table,
           __anonstruct_Key_2_tag_table, __anonstruct_Value_3_alloc_table,
           __anonstruct_Value_3_tag_table, voidP_alloc_table, voidP_tag_table
           }
           ensures {
             ((strict_valid_struct___anonstruct_Item_4 result (0)
              (Int.(-) n (1)) !__anonstruct_Key_2_alloc_table
              !__anonstruct_Value_3_alloc_table !voidP_alloc_table
              __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
             /\
             ((frame_alloc_struct___anonstruct_Item_4 result n (old
              !__anonstruct_Key_2_alloc_table)
              !__anonstruct_Key_2_alloc_table (old
              !__anonstruct_Value_3_alloc_table)
              !__anonstruct_Value_3_alloc_table (old !voidP_alloc_table)
              !voidP_alloc_table __anonstruct_Item_4_key_2
              __anonstruct_Item_4_value_2)
             /\
             ((frame_tag_struct___anonstruct_Item_4 result (old
              !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table
              (old !__anonstruct_Value_3_tag_table)
              !__anonstruct_Value_3_tag_table (old !voidP_tag_table)
              !voidP_tag_table __anonstruct_Item_4_key_2
              __anonstruct_Item_4_value_2)
             /\
             ((fresh_alloc_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Key_2_alloc_table) (old
              !__anonstruct_Value_3_alloc_table) (old !voidP_alloc_table)
              __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
             /\
             ((fresh_tag_struct___anonstruct_Item_4 result (Int.(-) n (1))
              (old !__anonstruct_Key_2_tag_table) (old
              !__anonstruct_Value_3_tag_table) (old !voidP_tag_table)
              __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
             /\
             ((typeof_struct___anonstruct_Item_4 result (0) n
              !__anonstruct_Key_2_tag_table !__anonstruct_Value_3_tag_table
              !voidP_tag_table __anonstruct_Item_4_key_2
              __anonstruct_Item_4_value_2)
             /\
             (container_of_struct___anonstruct_Item_4 result (0) n
             !__anonstruct_Key_2_tag_table !__anonstruct_Value_3_tag_table
             !voidP_tag_table __anonstruct_Item_4_key_2
             __anonstruct_Item_4_value_2))))))) }
  
  val allocate_singleton_struct___anonstruct_Item_4
  (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) 
    (voidP_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) 
      (__anonstruct_Value_3_tag_table : ref (tag_table
       __anonstruct_Value_3)) 
       (voidP_tag_table : ref (tag_table voidP)) 
        (__anonstruct_Item_4_key_2 : (memory voidP (pointer
         __anonstruct_Key_2))) 
         (__anonstruct_Item_4_value_2 : (memory voidP (pointer
          __anonstruct_Value_3))) : (pointer voidP)
          requires { true } writes { __anonstruct_Key_2_alloc_table,
          __anonstruct_Key_2_tag_table, __anonstruct_Value_3_alloc_table,
          __anonstruct_Value_3_tag_table, voidP_alloc_table, voidP_tag_table
          }
          ensures {
            ((strict_valid_struct___anonstruct_Item_4 result (0) (0)
             !__anonstruct_Key_2_alloc_table
             !__anonstruct_Value_3_alloc_table !voidP_alloc_table
             __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
            /\
            ((frame_alloc_struct___anonstruct_Item_4 result (1) (old
             !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table
             (old !__anonstruct_Value_3_alloc_table)
             !__anonstruct_Value_3_alloc_table (old !voidP_alloc_table)
             !voidP_alloc_table __anonstruct_Item_4_key_2
             __anonstruct_Item_4_value_2)
            /\
            ((frame_tag_struct___anonstruct_Item_4 result (old
             !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table
             (old !__anonstruct_Value_3_tag_table)
             !__anonstruct_Value_3_tag_table (old !voidP_tag_table)
             !voidP_tag_table __anonstruct_Item_4_key_2
             __anonstruct_Item_4_value_2)
            /\
            ((fresh_alloc_struct___anonstruct_Item_4 result (0) (old
             !__anonstruct_Key_2_alloc_table) (old
             !__anonstruct_Value_3_alloc_table) (old !voidP_alloc_table)
             __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
            /\
            ((fresh_tag_struct___anonstruct_Item_4 result (0) (old
             !__anonstruct_Key_2_tag_table) (old
             !__anonstruct_Value_3_tag_table) (old !voidP_tag_table)
             __anonstruct_Item_4_key_2 __anonstruct_Item_4_value_2)
            /\
            ((typeof_singleton_struct___anonstruct_Item_4 result
             !__anonstruct_Key_2_tag_table !__anonstruct_Value_3_tag_table
             !voidP_tag_table __anonstruct_Item_4_key_2
             __anonstruct_Item_4_value_2)
            /\
            (container_of_singleton_struct___anonstruct_Item_4 result
            !__anonstruct_Key_2_tag_table !__anonstruct_Value_3_tag_table
            !voidP_tag_table __anonstruct_Item_4_key_2
            __anonstruct_Item_4_value_2))))))) }
  
end

module Unsafe_uint64_of_Unsafe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

theory Logic_is_valid_map

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_MapCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map (map_25 : (pointer __anonstruct_Map_5))
  (voidP_items_81_alloc_table_at_L : (alloc_table voidP))
  (__anonstruct_Value_3_items_81_alloc_table_at_L : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Key_2_items_81_alloc_table_at_L :
  (alloc_table __anonstruct_Key_2)) (__anonstruct_Map_5_count_map_25_40_at_L
  : (memory __anonstruct_Map_5 Int32.t))
  (__anonstruct_Map_5_capacity_map_25_40_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_25_40_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_81_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_4_value_2_items_81_at_L : (memory voidP (pointer
  __anonstruct_Value_3))) (__anonstruct_Item_4_key_2_items_81_at_L : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Key_2_b_items_81_at_L :
  (memory __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_items_81_at_L :
  (memory __anonstruct_Key_2 Int32.t))
  =
     (((=)
      (offset_max voidP_items_81_alloc_table_at_L
      (select __anonstruct_Map_5_items_map_25_40_at_L map_25))
      (Int.(-)
      (Int32.to_int
      (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)) (1)))
     /\
     ((if
       ((<=) (0)
       (Int.(-)
       (Int32.to_int
       (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)) (1))) then
       (((<=)
        (offset_min voidP_items_81_alloc_table_at_L
        (select __anonstruct_Map_5_items_map_25_40_at_L map_25)) (0))
       /\
       (((>=)
        (offset_max voidP_items_81_alloc_table_at_L
        (select __anonstruct_Map_5_items_map_25_40_at_L map_25))
        (Int.(-)
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)) (1)))
       /\
       (forall __framac_tmp5 : int.
        ((((<=) (0) __framac_tmp5) /\
         ((<=) __framac_tmp5
         (Int.(-)
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)) (1))))
         ->
         (((<=)
          (offset_min __anonstruct_Key_2_items_81_alloc_table_at_L
          (select __anonstruct_Item_4_key_2_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
          __framac_tmp5))) (0))
         /\
         (((>=)
          (offset_max __anonstruct_Key_2_items_81_alloc_table_at_L
          (select __anonstruct_Item_4_key_2_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
          __framac_tmp5))) (0))
         /\
         (((=) true true) /\
         (((<=)
          (offset_min __anonstruct_Value_3_items_81_alloc_table_at_L
          (select __anonstruct_Item_4_value_2_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
          __framac_tmp5))) (0))
         /\
         (((>=)
          (offset_max __anonstruct_Value_3_items_81_alloc_table_at_L
          (select __anonstruct_Item_4_value_2_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
          __framac_tmp5))) (0))
         /\ ((=) true true)))))))))) else ((=) true true))
     /\
     ((Int32.(<=) (#"whole_program.jc" 284 13 25# "expl:Integer cast"
      (Int32.of_int (0)))
      (select __anonstruct_Map_5_count_map_25_40_at_L map_25))
     /\
     ((Int32.(<=) (select __anonstruct_Map_5_count_map_25_40_at_L map_25)
      (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25))
     /\
     (((Int32.(>) (select __anonstruct_Map_5_count_map_25_40_at_L map_25)
       (#"whole_program.jc" 286 27 39# "expl:Integer cast" (Int32.of_int
       (0)))) ->
       (Int32.(=)
       (select __anonstruct_Item_4_existent_items_81_at_L
       (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) (0)))
       (#"whole_program.jc" 287 44 56# "expl:Integer cast" (Int32.of_int
       (1)))))
     /\
     ((forall i_9 : int.
       ((((<=) (0) i_9) /\
        ((<) i_9
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)))) ->
        ((Int32.(=)
         (select __anonstruct_Item_4_existent_items_81_at_L
         (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) i_9))
         (#"whole_program.jc" 290 48 60# "expl:Integer cast" (Int32.of_int
         (0))))
        \/
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_81_at_L
        (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) i_9))
        (#"whole_program.jc" 291 49 61# "expl:Integer cast" (Int32.of_int
        (1)))))))
     /\
     (((=)
      (count map_25 (0)
      (Int32.to_int
      (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25))
      __anonstruct_Map_5_items_map_25_40_at_L
      __anonstruct_Item_4_existent_items_81_at_L)
      (Int32.to_int (select __anonstruct_Map_5_count_map_25_40_at_L map_25)))
     /\
     ((forall i_10 : int.
       (forall j_4 : int.
        ((((<=) (0) i_10) /\
         (((<) i_10
          (Int32.to_int
          (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)))
         /\
         (((<) i_10 j_4) /\
         (((<) j_4
          (Int32.to_int
          (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)))
         /\
         ((Int32.(=)
          (select __anonstruct_Item_4_existent_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
          i_10)) (#"whole_program.jc" 299 50 62# "expl:Integer cast"
          (Int32.of_int (1))))
         /\
         (Int32.(=)
         (select __anonstruct_Item_4_existent_items_81_at_L
         (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) j_4))
         (#"whole_program.jc" 300 48 60# "expl:Integer cast" (Int32.of_int
         (1))))))))) ->
         (not
         ((Int32.(=)
          (select __anonstruct_Key_2_a_items_81_at_L
          (select __anonstruct_Item_4_key_2_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
          i_10)))
          (select __anonstruct_Key_2_a_items_81_at_L
          (select __anonstruct_Item_4_key_2_items_81_at_L
          (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) j_4))))
         /\
         (Int32.(=)
         (select __anonstruct_Key_2_b_items_81_at_L
         (select __anonstruct_Item_4_key_2_items_81_at_L
         (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) i_10)))
         (select __anonstruct_Key_2_b_items_81_at_L
         (select __anonstruct_Item_4_key_2_items_81_at_L
         (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) j_4)))))))))
     /\
     (forall i_11 : int.
      (forall j_5 : int.
       ((((<) (0) i_11) /\
        (((<) i_11 j_5) /\
        (((<) j_5
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_25_40_at_L map_25)))
        /\
        ((Int32.(=)
         (select __anonstruct_Item_4_existent_items_81_at_L
         (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25)
         (Int.(-) i_11 (1)))) (#"whole_program.jc" 309 55 67#
         "expl:Integer cast" (Int32.of_int (0))))
        /\
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_81_at_L
        (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) i_11))
        (#"whole_program.jc" 310 48 60# "expl:Integer cast" (Int32.of_int
        (0)))))))) ->
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_81_at_L
        (shift (select __anonstruct_Map_5_items_map_25_40_at_L map_25) j_5))
        (#"whole_program.jc" 311 46 58# "expl:Integer cast" (Int32.of_int
        (0)))))))))))))))
  
  
end

module Function_initializeMap_behaviors
#"/home/nik/Projects/ver/hw4/map.c" 3 4 37# "expl:initializeMap, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_uint64_of_Unsafe_int32 
  
  use Unsafe_uint64 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4_safe 
  
  use import Struct___anonstruct_Item_4 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import Axiomatic_MapCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let initializeMap_ensures_default
  #"/home/nik/Projects/ver/hw4/map.c" 3 4 37#
  "expl:Function initializeMap, default behavior" =
  fun
   (map_2 : (pointer __anonstruct_Map_5)) (size : Int32.t)
   (__anonstruct_Key_2_items_82_alloc_table : ref (alloc_table
   __anonstruct_Key_2)) (__anonstruct_Value_3_items_82_alloc_table : ref
   (alloc_table __anonstruct_Value_3)) (voidP_items_82_alloc_table : ref
   (alloc_table voidP)) (voidP_items_82_tag_table : ref (tag_table voidP))
   (__anonstruct_Value_3_items_82_tag_table : ref (tag_table
   __anonstruct_Value_3)) (__anonstruct_Key_2_items_82_tag_table : ref
   (tag_table __anonstruct_Key_2)) (__anonstruct_Item_4_existent_items_82 :
   ref (memory voidP Int32.t)) (__anonstruct_Map_5_items_map_2_41 : ref
   (memory __anonstruct_Map_5 (pointer voidP)))
   (__anonstruct_Map_5_capacity_map_2_41 : ref (memory __anonstruct_Map_5
   Int32.t)) (__anonstruct_Map_5_count_map_2_41 : ref (memory
   __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_map_2_41_alloc_table :
   (alloc_table __anonstruct_Map_5)) (__anonstruct_Key_2_a_items_82 : (memory
   __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_items_82 : (memory
   __anonstruct_Key_2 Int32.t)) (__anonstruct_Item_4_key_2_items_82 : (memory
   voidP (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2_items_82
   : (memory voidP (pointer __anonstruct_Value_3))) 
   requires {
   (#"whole_program.jc" 314 12 242#
   ((#"/home/nik/Projects/ver/hw4/map.h" 289 13 24#
    (#"whole_program.jc" 314 12 242#
    ((#"whole_program.jc" 314 12 242#
     ((<=) (offset_min __anonstruct_Map_5_map_2_41_alloc_table map_2) (0)))
    /\
    (#"whole_program.jc" 314 12 242#
    ((#"whole_program.jc" 314 12 242#
     ((>=) (offset_max __anonstruct_Map_5_map_2_41_alloc_table map_2) (0)))
    /\ (#"whole_program.jc" 314 12 242# ((=) true true)))))))
   /\
   (#"/home/nik/Projects/ver/hw4/map.h" 290 13 22#
   (Int32.(>=) size (#"whole_program.jc" 317 31 43# "expl:Integer cast"
   (Int32.of_int (0))))))) }
   ensures {
     ("expl:Postcondition"
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 319 42 54# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       ((=)
       (offset_max !voidP_items_82_alloc_table
       (select !__anonstruct_Map_5_items_map_2_41 map_2))
       (Int.(-) (Int32.to_int size) (1)))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 293 12 50# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 322 44 56# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       ((strict_left_valid_struct___anonstruct_Item_4
        (select !__anonstruct_Map_5_items_map_2_41 map_2) (0)
        !__anonstruct_Key_2_items_82_alloc_table
        !__anonstruct_Value_3_items_82_alloc_table
        !voidP_items_82_alloc_table __anonstruct_Item_4_key_2_items_82
        __anonstruct_Item_4_value_2_items_82)
       /\
       (right_valid_struct___anonstruct_Item_4
       (select !__anonstruct_Map_5_items_map_2_41 map_2) (Int.(-_) 1)
       !__anonstruct_Key_2_items_82_alloc_table
       !__anonstruct_Value_3_items_82_alloc_table !voidP_items_82_alloc_table
       __anonstruct_Item_4_key_2_items_82
       __anonstruct_Item_4_value_2_items_82))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 294 12 50# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 324 46 58# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (Int32.(=) (select !__anonstruct_Map_5_capacity_map_2_41 map_2) size)))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 295 12 44# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 326 48 60# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (Int32.(=) (select !__anonstruct_Map_5_count_map_2_41 map_2)
       (#"whole_program.jc" 327 62 74# "expl:Integer cast" (Int32.of_int
       (0))))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 296 12 46# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 328 50 62# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (is_valid_map map_2 !voidP_items_82_alloc_table
       !__anonstruct_Value_3_items_82_alloc_table
       !__anonstruct_Key_2_items_82_alloc_table
       !__anonstruct_Map_5_count_map_2_41
       !__anonstruct_Map_5_capacity_map_2_41
       !__anonstruct_Map_5_items_map_2_41
       !__anonstruct_Item_4_existent_items_82
       __anonstruct_Item_4_value_2_items_82
       __anonstruct_Item_4_key_2_items_82 __anonstruct_Key_2_b_items_82
       __anonstruct_Key_2_a_items_82)))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 297 12 102# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 330 52 64# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (forall i_12 : int.
        ((((<=) (0) i_12) /\
         ((<) i_12
         (Int32.to_int (select !__anonstruct_Map_5_capacity_map_2_41 map_2))))
         ->
         (Int32.(=)
         (select !__anonstruct_Item_4_existent_items_82
         (shift (select !__anonstruct_Map_5_items_map_2_41 map_2) i_12))
         (#"whole_program.jc" 336 47 59# "expl:Integer cast" (Int32.of_int
         (0))))))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 298 12 56# "expl:Ensures clause"
     ((Int32.(=) result (#"whole_program.jc" 337 53 65# "expl:Integer cast"
      (Int32.of_int (0)))) ->
      (fresh_alloc_struct___anonstruct_Item_4
      (select !__anonstruct_Map_5_items_map_2_41 map_2) (0) (old
      !__anonstruct_Key_2_items_82_alloc_table) (old
      !__anonstruct_Value_3_items_82_alloc_table) (old
      !voidP_items_82_alloc_table) __anonstruct_Item_4_key_2_items_82
      __anonstruct_Item_4_value_2_items_82))))))))))))))))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let i_13 = ref (Unsafe_int32.any_  () ) in
    (let i_0_0 = ref (Unsafe_int32.any_  () ) in
    (let __retres = ref (Unsafe_int32.any_  () ) in
    try
     begin
     try
      begin
      try
       begin
       try
        begin
        (if
        (#"/home/nik/Projects/ver/hw4/map.c" 4 8 16#
        (Unsafe_int32.(<)  size
         (#"whole_program.jc" 346 26 38# "expl:Integer cast"
         (Unsafe_int32.of_int (0))) )) then (raise (Goto__LOR_exc ()))
        else
         (if
         (#"/home/nik/Projects/ver/hw4/map.c" 4 20 81#
         ((=)  map_2 (null  ) )) then (raise (Goto__LOR_exc ())) else ()));
         (raise (Goto__LOR_0_exc ())); (raise (Goto__LOR_exc ())) end with
        Goto__LOR_exc _jessie_2 ->
        'U__LOR:
        'U__LOR:
        'U__LOR:
        'U__LOR:
        begin
        (__retres :=
         (#"whole_program.jc" 352 37 49# "expl:Integer cast"
         (Unsafe_int32.of_int (1)))); (raise (Return_label_exc ())) end end;
        (raise (Goto__LOR_0_exc ())) end with Goto__LOR_0_exc _jessie_3 ->
       'U__LOR_0:
       'U__LOR_0:
       begin
       ();
        begin
        (let _jessie_30 =
        (#"/home/nik/Projects/ver/hw4/map.c" 8 17 44# "expl:Allocation size"
        (allocate_struct___anonstruct_Item_4 
         (Unsafe_uint64.to_int 
          (#"/home/nik/Projects/ver/hw4/map.c" 8 24 28# "expl:Integer cast"
          (Unsafe_uint64_of_Unsafe_int32.cast  size )) )
         __anonstruct_Key_2_items_82_alloc_table
         __anonstruct_Value_3_items_82_alloc_table voidP_items_82_alloc_table
         __anonstruct_Key_2_items_82_tag_table
         __anonstruct_Value_3_items_82_tag_table voidP_items_82_tag_table
         __anonstruct_Item_4_key_2_items_82
         __anonstruct_Item_4_value_2_items_82 )) in
        (let _jessie_31 = map_2 in
        (let _jessie_32 = (0) in
        (let _jessie_33 = _jessie_31 in
        (upd  __anonstruct_Map_5_items_map_2_41 _jessie_33 _jessie_30 )))));
         begin
         (let _jessie_35 = size in
         (let _jessie_36 = map_2 in
         (let _jessie_37 = (0) in
         (let _jessie_38 = _jessie_36 in
         (upd  __anonstruct_Map_5_capacity_map_2_41 _jessie_38 _jessie_35 )))));
          begin
          (let _jessie_40 =
          (#"whole_program.jc" 360 40 52# "expl:Integer cast"
          (Unsafe_int32.of_int (0))) in
          (let _jessie_41 = map_2 in
          (let _jessie_42 = (0) in
          (let _jessie_43 = _jessie_41 in
          (upd  __anonstruct_Map_5_count_map_2_41 _jessie_43 _jessie_40 )))));
           (if
           (#"/home/nik/Projects/ver/hw4/map.c" 12 8 72#
           ((=)  (acc  !__anonstruct_Map_5_items_map_2_41 map_2 ) (null  ) ))
           then
            begin
            (__retres :=
             (#"whole_program.jc" 362 30 42# "expl:Integer cast"
             (Unsafe_int32.of_int (1)))); (raise (Return_label_exc ())) end
           else ());
           try
            begin
            (i_13 :=
             (#"whole_program.jc" 367 23 35# "expl:Integer cast"
             (Unsafe_int32.of_int (0))));
             'LoopEntry:
             begin
             'LoopEntry:
             'Loop_1:
             loop
             invariant
               { ((#"/home/nik/Projects/ver/hw4/map.c" 17 23 46#
                  (#"/home/nik/Projects/ver/hw4/map.c" 17 23 46#
                  ((#"/home/nik/Projects/ver/hw4/map.c" 17 23 29#
                   (Int32.(<=) (#"whole_program.jc" 371 41 53#
                   "expl:Integer cast" (Int32.of_int (0))) !i_13))
                  /\
                  (#"/home/nik/Projects/ver/hw4/map.c" 17 28 46#
                  (Int32.(<=) !i_13
                  (select !__anonstruct_Map_5_capacity_map_2_41 map_2))))))
                 &&
                 ((#"/home/nik/Projects/ver/hw4/map.c" 18 23 66#
                  (if
                   ((<=) (0)
                   (Int.(-)
                   (Int32.to_int
                   (select !__anonstruct_Map_5_capacity_map_2_41 map_2)) (1)))
                   then
                   (((<=)
                    (offset_min !voidP_items_82_alloc_table
                    (select !__anonstruct_Map_5_items_map_2_41 map_2)) (0))
                   /\
                   (((>=)
                    (offset_max !voidP_items_82_alloc_table
                    (select !__anonstruct_Map_5_items_map_2_41 map_2))
                    (Int.(-)
                    (Int32.to_int
                    (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
                    (1)))
                   /\
                   (forall __framac_tmp8 : int.
                    ((((<=) (0) __framac_tmp8) /\
                     ((<=) __framac_tmp8
                     (Int.(-)
                     (Int32.to_int
                     (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
                     (1)))) ->
                     (((<=)
                      (offset_min !__anonstruct_Key_2_items_82_alloc_table
                      (select __anonstruct_Item_4_key_2_items_82
                      (shift
                      (select !__anonstruct_Map_5_items_map_2_41 map_2)
                      __framac_tmp8))) (0))
                     /\
                     (((>=)
                      (offset_max !__anonstruct_Key_2_items_82_alloc_table
                      (select __anonstruct_Item_4_key_2_items_82
                      (shift
                      (select !__anonstruct_Map_5_items_map_2_41 map_2)
                      __framac_tmp8))) (0))
                     /\
                     (((=) true true) /\
                     (((<=)
                      (offset_min !__anonstruct_Value_3_items_82_alloc_table
                      (select __anonstruct_Item_4_value_2_items_82
                      (shift
                      (select !__anonstruct_Map_5_items_map_2_41 map_2)
                      __framac_tmp8))) (0))
                     /\
                     (((>=)
                      (offset_max !__anonstruct_Value_3_items_82_alloc_table
                      (select __anonstruct_Item_4_value_2_items_82
                      (shift
                      (select !__anonstruct_Map_5_items_map_2_41 map_2)
                      __framac_tmp8))) (0))
                     /\ ((=) true true)))))))))) else ((=) true true)))
                 &&
                 (#"/home/nik/Projects/ver/hw4/map.c" 19 23 84#
                 (forall j_6 : int.
                  ((((<=) (0) j_6) /\ ((<) j_6 (Int32.to_int !i_13))) ->
                   (Int32.(=)
                   (select !__anonstruct_Item_4_existent_items_82
                   (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                   j_6)) (#"whole_program.jc" 403 36 48# "expl:Integer cast"
                   (Int32.of_int (0))))))))) } 
              begin
              any unit requires { true } ensures { true } ;
               try
                begin
                'LoopCurrent:
                begin
                'LoopCurrent:
                (if
                (#"/home/nik/Projects/ver/hw4/map.c" 22 20 37#
                (Unsafe_int32.(<)  !i_13
                 (acc  !__anonstruct_Map_5_capacity_map_2_41 map_2 ) ))
                then () else (raise (Goto_while_0_break_exc ())));
                 begin
                 (let _jessie_46 =
                 (#"whole_program.jc" 409 84 96# "expl:Integer cast"
                 (Unsafe_int32.of_int (0))) in
                 (let _jessie_47 =
                 (acc  !__anonstruct_Map_5_items_map_2_41 map_2 ) in
                 (let _jessie_48 = (Unsafe_int32.to_int  !i_13 ) in
                 (let _jessie_49 = (shift_  _jessie_47 _jessie_48 ) in
                 (upd  __anonstruct_Item_4_existent_items_82 _jessie_49
                  _jessie_46 )))));
                  (i_13 :=
                   (Unsafe_int32.(+)  !i_13
                    (#"whole_program.jc" 410 53 65# "expl:Integer cast"
                    (Unsafe_int32.of_int (1))) )) end end;
                 (raise (Loop_continue_exc ())) end with Loop_continue_exc
                _jessie_7 -> () end end end;
              (raise (Goto_while_0_break_exc ())) end end with
            Goto_while_0_break_exc _jessie_1 ->
            'While_0_break: 'While_0_break: () end;
           begin
           (i_0_0 :=
            (#"whole_program.jc" 415 22 34# "expl:Integer cast"
            (Unsafe_int32.of_int (0))));
            'LoopEntry:
            'LoopEntry:
            'Loop_2:
            loop
            invariant
              { ((#"/home/nik/Projects/ver/hw4/map.c" 29 27 50#
                 (#"/home/nik/Projects/ver/hw4/map.c" 29 27 50#
                 ((#"/home/nik/Projects/ver/hw4/map.c" 29 27 33#
                  (Int32.(<=) (#"whole_program.jc" 419 38 50#
                  "expl:Integer cast" (Int32.of_int (0))) !i_0_0))
                 /\
                 (#"/home/nik/Projects/ver/hw4/map.c" 29 32 50#
                 (Int32.(<=) !i_0_0
                 (select !__anonstruct_Map_5_capacity_map_2_41 map_2))))))
                &&
                (#"/home/nik/Projects/ver/hw4/map.c" 30 27 48#
                ((=)
                (count map_2 (0) (Int32.to_int !i_0_0)
                !__anonstruct_Map_5_items_map_2_41
                !__anonstruct_Item_4_existent_items_82) (0)))) } 
             begin
             any unit requires { true } ensures { true } ;
              try
               begin
               'LoopCurrent:
               begin
               'LoopCurrent:
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 33 15 32#
               (Unsafe_int32.(<)  !i_0_0
                (acc  !__anonstruct_Map_5_capacity_map_2_41 map_2 ) ))
               then () else (raise (Goto_while_0_break_0_exc ())));
                begin
                (i_0_0 :=
                 (Unsafe_int32.(+)  !i_0_0
                  (#"whole_program.jc" 429 57 69# "expl:Integer cast"
                  (Unsafe_int32.of_int (1))) ));
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 35 23 48#
                 "expl:Assertion in line 35"
                 ((=)
                 (count map_2 (0) (Int.(-) (Int32.to_int !i_0_0) (1))
                 !__anonstruct_Map_5_items_map_2_41
                 !__anonstruct_Item_4_existent_items_82) (0))) }); () end;
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 36 23 84#
                 "expl:Assertion in line 36"
                 ((Int32.(=)
                  (select !__anonstruct_Item_4_existent_items_82
                  (shift (select !__anonstruct_Map_5_items_map_2_41 map_2)
                  (Int.(-) (Int32.to_int !i_0_0) (1))))
                  (#"whole_program.jc" 444 63 75# "expl:Integer cast"
                  (Int32.of_int (0)))) ->
                  ((=)
                  (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                  (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82) (0)))) }); () end;
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                 "expl:Assertion in line 37"
                 (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                 "expl:Assertion in line 37"
                 ((#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                  "expl:Assertion in line 37"
                  ((=)
                  (count map_2 (0) (Int32.to_int !i_0_0)
                  !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82)
                  (Int.(+)
                  (count map_2 (0) (Int.(-) (Int32.to_int !i_0_0) (1))
                  !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82)
                  (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                  (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82))))
                 /\
                 (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                 "expl:Assertion in line 37"
                 ((#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                  "expl:Assertion in line 37"
                  ((=)
                  (Int.(+)
                  (count map_2 (0) (Int.(-) (Int32.to_int !i_0_0) (1))
                  !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82)
                  (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                  (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82))
                  (Int.(+) (0)
                  (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                  (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82))))
                 /\
                 (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                 "expl:Assertion in line 37"
                 ((#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                  "expl:Assertion in line 37"
                  ((=)
                  (Int.(+) (0)
                  (count map_2 (Int.(-) (Int32.to_int !i_0_0) (1))
                  (Int32.to_int !i_0_0) !__anonstruct_Map_5_items_map_2_41
                  !__anonstruct_Item_4_existent_items_82)) (Int.(+) (0) (0))))
                 /\
                 (#"/home/nik/Projects/ver/hw4/map.c" 37 22 143#
                 "expl:Assertion in line 37" ((=) (Int.(+) (0) (0)) (0))))))))))
                 }); () end end end; (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end end end end end
       end end; (raise (Goto_while_0_break_0_exc ())) end with
      Goto_while_0_break_0_exc _jessie_4 ->
      'While_0_break_0:
      'While_0_break_0:
      begin
      ();
       begin
       (assert {
       (#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
       "expl:Assertion in line 41"
       (#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
       "expl:Assertion in line 41"
       ((#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
        "expl:Assertion in line 41"
        (Int32.(=) (select !__anonstruct_Map_5_count_map_2_41 map_2)
        (#"whole_program.jc" 499 54 66# "expl:Integer cast" (Int32.of_int
        (0)))))
       /\
       (#"/home/nik/Projects/ver/hw4/map.c" 41 19 66#
       "expl:Assertion in line 41"
       ((=) (0)
       (count map_2 (0)
       (Int32.to_int (select !__anonstruct_Map_5_capacity_map_2_41 map_2))
       !__anonstruct_Map_5_items_map_2_41
       !__anonstruct_Item_4_existent_items_82)))))) }); () end;
       (__retres :=
        (#"whole_program.jc" 505 27 39# "expl:Integer cast"
        (Unsafe_int32.of_int (0)))) end end; (raise (Return_label_exc ()))
     end with Return_label_exc _jessie_5 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
end

theory Logic_compare_keys

  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_keys (k1 : (pointer __anonstruct_Key_2)) (k2 : (pointer
  __anonstruct_Key_2)) (__anonstruct_Key_2_b_k2_14_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_k1_13_at_L1 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k2_14_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k1_13_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     ((Int32.(=) (select __anonstruct_Key_2_a_k1_13_at_L1 k1)
      (select __anonstruct_Key_2_a_k2_14_at_L2 k2))
     /\
     (Int32.(=) (select __anonstruct_Key_2_b_k1_13_at_L1 k1)
     (select __anonstruct_Key_2_b_k2_14_at_L2 k2)))
  
  
end

theory Logic_compare_values

  use import Root___anonstruct_Value_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_values (v1 : (pointer __anonstruct_Value_3)) (v2 :
  (pointer __anonstruct_Value_3)) (__anonstruct_Value_3_d_v2_16_at_L2 :
  (memory __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_v1_15_at_L1
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_v2_16_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_v1_15_at_L1 : (memory
  __anonstruct_Value_3 Int32.t))
  =
     ((Int32.(=) (select __anonstruct_Value_3_c_v1_15_at_L1 v1)
      (select __anonstruct_Value_3_c_v2_16_at_L2 v2))
     /\
     (Int32.(=) (select __anonstruct_Value_3_d_v1_15_at_L1 v1)
     (select __anonstruct_Value_3_d_v2_16_at_L2 v2)))
  
  
end

theory Logic_compare_items

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_items (i1 : (pointer voidP)) (i2 : (pointer voidP))
  (__anonstruct_Item_4_value_2_i2_32_at_L2 : (memory voidP (pointer
  __anonstruct_Value_3))) (__anonstruct_Item_4_value_2_i1_31_at_L1 : (memory
  voidP (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_key_2_i2_32_at_L2 : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Item_4_key_2_i1_31_at_L1 : (memory
  voidP (pointer __anonstruct_Key_2))) (__anonstruct_Value_3_d_i2_32_at_L2 :
  (memory __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_i1_31_at_L1
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_i2_32_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_i1_31_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Key_2_b_i2_32_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_i1_31_at_L1 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_i2_32_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_i1_31_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     ((compare_keys (select __anonstruct_Item_4_key_2_i1_31_at_L1 i1)
      (select __anonstruct_Item_4_key_2_i2_32_at_L2 i2)
      __anonstruct_Key_2_b_i2_32_at_L2 __anonstruct_Key_2_b_i1_31_at_L1
      __anonstruct_Key_2_a_i2_32_at_L2 __anonstruct_Key_2_a_i1_31_at_L1)
     /\
     (compare_values (select __anonstruct_Item_4_value_2_i1_31_at_L1 i1)
     (select __anonstruct_Item_4_value_2_i2_32_at_L2 i2)
     __anonstruct_Value_3_d_i2_32_at_L2 __anonstruct_Value_3_d_i1_31_at_L1
     __anonstruct_Value_3_c_i2_32_at_L2 __anonstruct_Value_3_c_i1_31_at_L1))
  
  
end

theory Logic_get_item_t

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_item_t (map_16 : (pointer __anonstruct_Map_5)) (idx_0 : int)
  (__anonstruct_Map_5_items_map_16_27_at_L : (memory __anonstruct_Map_5
  (pointer voidP))) : (pointer voidP)
  = (shift (select __anonstruct_Map_5_items_map_16_27_at_L map_16) idx_0)
  
  
end

theory Logic_item_exists_t

  use import core.Voidp 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate item_exists_t (it_0 : (pointer voidP))
  (__anonstruct_Item_4_existent_it_0_22_at_L : (memory voidP Int32.t))
  =
     (Int32.(=) (select __anonstruct_Item_4_existent_it_0_22_at_L it_0)
     (#"whole_program.jc" 187 25 37# "expl:Integer cast" (Int32.of_int (1))))
  
  
end

theory Logic_get_key_t

  use import core.Voidp 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_key_t (it_1 : (pointer voidP))
  (__anonstruct_Item_4_key_2_it_1_23_at_L : (memory voidP (pointer
  __anonstruct_Key_2))) : (pointer __anonstruct_Key_2)
  = (select __anonstruct_Item_4_key_2_it_1_23_at_L it_1)
  
  
end

theory Logic_no_mchg

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_keys 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate no_mchg (map_23 : (pointer __anonstruct_Map_5)) (key : (pointer
  __anonstruct_Key_2)) (__anonstruct_Map_5_capacity_map_23_37_at_L2 : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_capacity_map_23_37_at_L1 :
  (memory __anonstruct_Map_5 Int32.t))
  (__anonstruct_Map_5_items_map_23_37_at_L2 : (memory __anonstruct_Map_5
  (pointer voidP))) (__anonstruct_Map_5_items_map_23_37_at_L1 : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_get_item_t_71_at_L2 : (memory voidP Int32.t))
  (__anonstruct_Item_4_existent_get_item_t_71_at_L1 : (memory voidP Int32.t))
  (__anonstruct_Item_4_value_2_get_item_t_71_at_L2 : (memory voidP (pointer
  __anonstruct_Value_3))) (__anonstruct_Item_4_value_2_get_item_t_71_at_L1 :
  (memory voidP (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_key_2_get_item_t_71_at_L2 : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Item_4_key_2_get_item_t_71_at_L1 :
  (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Value_3_d_get_item_t_71_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_d_get_item_t_71_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_c_get_item_t_71_at_L2
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_get_item_t_71_at_L1 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Key_2_b_get_item_t_71_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_get_item_t_71_at_L1 :
  (memory __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_key_38_at_L1 :
  (memory __anonstruct_Key_2 Int32.t))
  (__anonstruct_Key_2_a_get_item_t_71_at_L2 : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_71_at_L1 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_key_38_at_L1 : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (forall i_7 : int.
      ((((<=) (0) i_7) /\
       (((<) i_7
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_23_37_at_L1 map_23)))
       /\
       ((item_exists_t
        (get_item_t map_23 i_7 __anonstruct_Map_5_items_map_23_37_at_L1)
        __anonstruct_Item_4_existent_get_item_t_71_at_L1)
       /\
       (not
       (compare_keys key
       (get_key_t
       (get_item_t map_23 i_7 __anonstruct_Map_5_items_map_23_37_at_L1)
       __anonstruct_Item_4_key_2_get_item_t_71_at_L1)
       __anonstruct_Key_2_b_get_item_t_71_at_L1
       __anonstruct_Key_2_b_key_38_at_L1
       __anonstruct_Key_2_a_get_item_t_71_at_L1
       __anonstruct_Key_2_a_key_38_at_L1))))) ->
       (exists j_2 : int.
        (((<=) (0) j_2) /\
        (((<) j_2
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_23_37_at_L2 map_23)))
        /\
        ((item_exists_t
         (get_item_t map_23 j_2 __anonstruct_Map_5_items_map_23_37_at_L2)
         __anonstruct_Item_4_existent_get_item_t_71_at_L2)
        /\
        (compare_items
        (get_item_t map_23 i_7 __anonstruct_Map_5_items_map_23_37_at_L1)
        (get_item_t map_23 j_2 __anonstruct_Map_5_items_map_23_37_at_L2)
        __anonstruct_Item_4_value_2_get_item_t_71_at_L2
        __anonstruct_Item_4_value_2_get_item_t_71_at_L1
        __anonstruct_Item_4_key_2_get_item_t_71_at_L2
        __anonstruct_Item_4_key_2_get_item_t_71_at_L1
        __anonstruct_Value_3_d_get_item_t_71_at_L2
        __anonstruct_Value_3_d_get_item_t_71_at_L1
        __anonstruct_Value_3_c_get_item_t_71_at_L2
        __anonstruct_Value_3_c_get_item_t_71_at_L1
        __anonstruct_Key_2_b_get_item_t_71_at_L2
        __anonstruct_Key_2_b_get_item_t_71_at_L1
        __anonstruct_Key_2_a_get_item_t_71_at_L2
        __anonstruct_Key_2_a_get_item_t_71_at_L1)))))))
  
  
end

module Function_addElement_safety
#"/home/nik/Projects/ver/hw4/map.c" 61 4 48# "expl:addElement, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Upd_offset_safe 
  
  use import core.Tag_table_type 
  
  use import core.Shift_safe 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_no_mchg 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import core.Eq_pointer_safe 
  
  use import Axiomatic_MapCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  let addElement #"/home/nik/Projects/ver/hw4/map.c" 61 4 48#
  "expl:Function addElement, safety" =
  fun
   (map_0 : (pointer __anonstruct_Map_5)) (key_0 : (pointer
   __anonstruct_Key_2)) (value : (pointer __anonstruct_Value_3))
   (__anonstruct_Key_2_a_items_86 : ref (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Key_2_b_items_86 : ref (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Value_3_c_items_86 : ref (memory __anonstruct_Value_3
   Int32.t)) (__anonstruct_Value_3_d_items_86 : ref (memory
   __anonstruct_Value_3 Int32.t)) (__anonstruct_Item_4_existent_items_86 :
   ref (memory voidP Int32.t)) (__anonstruct_Map_5_items_map_42 : ref (memory
   __anonstruct_Map_5 (pointer voidP))) (__anonstruct_Map_5_count_map_42 :
   ref (memory __anonstruct_Map_5 Int32.t))
   (__anonstruct_Key_2_key_43_alloc_table : (alloc_table __anonstruct_Key_2))
   (__anonstruct_Key_2_items_86_alloc_table : (alloc_table
   __anonstruct_Key_2)) (__anonstruct_Map_5_map_42_alloc_table : (alloc_table
   __anonstruct_Map_5)) (__anonstruct_Value_3_value_44_alloc_table :
   (alloc_table __anonstruct_Value_3))
   (__anonstruct_Value_3_items_86_alloc_table : (alloc_table
   __anonstruct_Value_3)) (voidP_items_86_alloc_table : (alloc_table voidP))
   (voidP_items_86_tag_table : (tag_table voidP))
   (__anonstruct_Key_2_a_key_43 : (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Key_2_b_key_43 : (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Value_3_c_value_44 : (memory __anonstruct_Value_3 Int32.t))
   (__anonstruct_Value_3_d_value_44 : (memory __anonstruct_Value_3 Int32.t))
   (__anonstruct_Item_4_key_2_items_86 : (memory voidP (pointer
   __anonstruct_Key_2))) (__anonstruct_Item_4_value_2_items_86 : (memory
   voidP (pointer __anonstruct_Value_3))) (__anonstruct_Map_5_capacity_map_42
   : (memory __anonstruct_Map_5 Int32.t)) 
   requires {
   (#"whole_program.jc" 513 12 1010#
   ((#"/home/nik/Projects/ver/hw4/map.h" 308 13 24#
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((<=) (offset_min __anonstruct_Map_5_map_42_alloc_table map_0) (0)))
    /\
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((>=) (offset_max __anonstruct_Map_5_map_42_alloc_table map_0) (0)))
    /\ (#"whole_program.jc" 513 12 1010# ((=) true true)))))))
   /\
   (#"whole_program.jc" 513 12 1010#
   ((#"/home/nik/Projects/ver/hw4/map.h" 308 28 39#
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((<=) (offset_min __anonstruct_Key_2_key_43_alloc_table key_0) (0)))
    /\
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((>=) (offset_max __anonstruct_Key_2_key_43_alloc_table key_0) (0)))
    /\ (#"whole_program.jc" 513 12 1010# ((=) true true)))))))
   /\
   (#"whole_program.jc" 513 12 1010#
   ((#"/home/nik/Projects/ver/hw4/map.h" 308 43 56#
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((<=) (offset_min __anonstruct_Value_3_value_44_alloc_table value) (0)))
    /\
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((>=) (offset_max __anonstruct_Value_3_value_44_alloc_table value) (0)))
    /\ (#"whole_program.jc" 513 12 1010# ((=) true true)))))))
   /\
   (#"/home/nik/Projects/ver/hw4/map.h" 309 13 30#
   (is_valid_map map_0 voidP_items_86_alloc_table
   __anonstruct_Value_3_items_86_alloc_table
   __anonstruct_Key_2_items_86_alloc_table !__anonstruct_Map_5_count_map_42
   __anonstruct_Map_5_capacity_map_42 !__anonstruct_Map_5_items_map_42
   !__anonstruct_Item_4_existent_items_86
   __anonstruct_Item_4_value_2_items_86 __anonstruct_Item_4_key_2_items_86
   !__anonstruct_Key_2_b_items_86 !__anonstruct_Key_2_a_items_86)))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let i_0_0_0 = ref (Safe_int32.any_  () ) in
    (let k = ref (Safe_int32.any_  () ) in
    (let i_0_1 = ref (Safe_int32.any_  () ) in
    (let __retres_0 = ref (Safe_int32.any_  () ) in
    try
     begin
     try
      begin
      try
       begin
       (if
       (#"/home/nik/Projects/ver/hw4/map.c" 62 8 58#
       (#"/home/nik/Projects/ver/hw4/map.c" 62 8 58#
       (eq_pointer  __anonstruct_Map_5_map_42_alloc_table
        __anonstruct_Map_5_map_42_alloc_table map_0 (null  ) )))
       then (raise (Goto__LOR_0_0_exc ()))
       else
        (if
        (#"/home/nik/Projects/ver/hw4/map.c" 62 22 101#
        (#"/home/nik/Projects/ver/hw4/map.c" 62 22 101#
        (eq_pointer  voidP_items_86_alloc_table voidP_items_86_alloc_table
         (#"/home/nik/Projects/ver/hw4/map.c" 62 22 32#
         "expl:Pointer dereference"
         (acc  __anonstruct_Map_5_map_42_alloc_table
          !__anonstruct_Map_5_items_map_42 map_0 )) (null  ) )))
        then (raise (Goto__LOR_0_0_exc ())) else ()));
        (raise (Goto__LOR_0_1_exc ())); (raise (Goto__LOR_0_0_exc ())) end
       with Goto__LOR_0_0_exc _jessie_13 ->
       'U__LOR_0_0:
       'U__LOR_0_0:
       'U__LOR_0_0:
       'U__LOR_0_0:
       begin
       (__retres_0 :=
        (let _jessie_136 =
        (#"whole_program.jc" 630 44 57# "expl:Integer cast"
        (Safe_int32.of_int  (Int.(-_)  (1) ) )) in
        begin
        (assert {
        (#"/home/nik/Projects/ver/hw4/map.c" 63 8 18#
        "expl:Pointer index bounds" true) }); _jessie_136 end));
        (raise (Goto_return_label_0_exc ())) end end;
       (raise (Goto__LOR_0_1_exc ())) end with Goto__LOR_0_1_exc _jessie_14
      ->
      'U__LOR_0_1:
      'U__LOR_0_1:
      begin
      ();
       try
        begin
        (i_0_0_0 :=
         (let _jessie_151 =
         (#"whole_program.jc" 636 27 39# "expl:Integer cast"
         (Safe_int32.of_int (0))) in
         begin
         (assert {
         (#"/home/nik/Projects/ver/hw4/map.c" 77 13 14#
         "expl:Pointer index bounds" true) }); _jessie_151 end));
         'LoopEntry:
         begin
         'LoopEntry:
         'Loop_8:
         loop
         invariant { (#"whole_program.jc" 638 9 12206# true) }
           variant { (#"/home/nik/Projects/ver/hw4/map.c" 74 21 38#
             (Int.(-)
             (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
             (Int32.to_int !i_0_0_0))) }
          begin
          any unit
          requires { true } reads { __anonstruct_Item_4_existent_items_86,
          __anonstruct_Key_2_a_items_86, __anonstruct_Key_2_b_items_86,
          __anonstruct_Map_5_items_map_42, __anonstruct_Value_3_c_items_86,
          __anonstruct_Value_3_d_items_86, key_0, map_0 }
          ensures {
            ((#"/home/nik/Projects/ver/hw4/map.c" 73 23 94#
             ((=)
             (count map_0 (0)
             (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
             !__anonstruct_Map_5_items_map_42
             !__anonstruct_Item_4_existent_items_86)
             (count map_0 (0)
             (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
             (at !__anonstruct_Map_5_items_map_42 'Init) (at
             !__anonstruct_Item_4_existent_items_86 'Init))))
            /\
            ((#"/home/nik/Projects/ver/hw4/map.c" 72 23 214#
             (forall j_9 : int.
              ((((<=) (0) j_9) /\ ((<) j_9 (Int32.to_int !i_0_0_0))) ->
               ((compare_items
                (get_item_t map_0 (Int32.to_int !i_0_0_0) (at
                !__anonstruct_Map_5_items_map_42 'Init))
                (get_item_t map_0 (Int32.to_int !i_0_0_0)
                !__anonstruct_Map_5_items_map_42)
                __anonstruct_Item_4_value_2_items_86
                __anonstruct_Item_4_value_2_items_86
                __anonstruct_Item_4_key_2_items_86
                __anonstruct_Item_4_key_2_items_86
                !__anonstruct_Value_3_d_items_86 (at
                !__anonstruct_Value_3_d_items_86 'Init)
                !__anonstruct_Value_3_c_items_86 (at
                !__anonstruct_Value_3_c_items_86 'Init)
                !__anonstruct_Key_2_b_items_86 (at
                !__anonstruct_Key_2_b_items_86 'Init)
                !__anonstruct_Key_2_a_items_86 (at
                !__anonstruct_Key_2_a_items_86 'Init))
               /\
               ((Int32.(=)
                (select (at !__anonstruct_Item_4_existent_items_86 'Init)
                (shift
                (select (at !__anonstruct_Map_5_items_map_42 'Init) map_0)
                j_9))
                (select !__anonstruct_Item_4_existent_items_86
                (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_9)))
               /\
               (Int32.(=)
               (select !__anonstruct_Item_4_existent_items_86
               (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_9))
               (#"whole_program.jc" 686 38 50# "expl:Integer cast"
               (Int32.of_int (1)))))))))
            /\
            ((#"/home/nik/Projects/ver/hw4/map.c" 70 23 168#
             (forall j_8 : int.
              ((((<=) (0) j_8) /\ ((<) j_8 (Int32.to_int !i_0_0_0))) ->
               (not
               ((Int32.(=)
                (select !__anonstruct_Key_2_a_items_86
                (select __anonstruct_Item_4_key_2_items_86
                (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_8)))
                (select __anonstruct_Key_2_a_key_43 key_0))
               /\
               ((Int32.(=)
                (select !__anonstruct_Key_2_b_items_86
                (select __anonstruct_Item_4_key_2_items_86
                (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_8)))
                (select __anonstruct_Key_2_b_key_43 key_0))
               /\
               (Int32.(=)
               (select !__anonstruct_Item_4_existent_items_86
               (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_8))
               (#"whole_program.jc" 674 41 53# "expl:Integer cast"
               (Int32.of_int (1))))))))))
            /\
            ((#"/home/nik/Projects/ver/hw4/map.c" 69 23 66#
             (if
              ((<=) (0)
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))) then
              (((<=)
               (offset_min voidP_items_86_alloc_table
               (select !__anonstruct_Map_5_items_map_42 map_0)) (0))
              /\
              (((>=)
               (offset_max voidP_items_86_alloc_table
               (select !__anonstruct_Map_5_items_map_42 map_0))
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))
              /\
              (forall __framac_tmp12 : int.
               ((((<=) (0) __framac_tmp12) /\
                ((<=) __framac_tmp12
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))) ->
                (((<=)
                 (offset_min __anonstruct_Key_2_items_86_alloc_table
                 (select __anonstruct_Item_4_key_2_items_86
                 (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                 __framac_tmp12))) (0))
                /\
                (((>=)
                 (offset_max __anonstruct_Key_2_items_86_alloc_table
                 (select __anonstruct_Item_4_key_2_items_86
                 (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                 __framac_tmp12))) (0))
                /\
                (((=) true true) /\
                (((<=)
                 (offset_min __anonstruct_Value_3_items_86_alloc_table
                 (select __anonstruct_Item_4_value_2_items_86
                 (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                 __framac_tmp12))) (0))
                /\
                (((>=)
                 (offset_max __anonstruct_Value_3_items_86_alloc_table
                 (select __anonstruct_Item_4_value_2_items_86
                 (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                 __framac_tmp12))) (0))
                /\ ((=) true true)))))))))) else ((=) true true)))
            /\
            (#"/home/nik/Projects/ver/hw4/map.c" 68 23 46#
            (#"/home/nik/Projects/ver/hw4/map.c" 68 23 46#
            ((#"/home/nik/Projects/ver/hw4/map.c" 68 23 29#
             (Int32.(<=) (#"whole_program.jc" 640 41 53# "expl:Integer cast"
             (Int32.of_int (0))) !i_0_0_0))
            /\
            (#"/home/nik/Projects/ver/hw4/map.c" 68 28 46#
            (Int32.(<=) !i_0_0_0
            (select __anonstruct_Map_5_capacity_map_42 map_0)))))))))) } ;
           try
            begin
            'LoopCurrent:
            begin
            'LoopCurrent:
            (if
            (#"/home/nik/Projects/ver/hw4/map.c" 77 20 37#
            (Safe_int32.(<)  !i_0_0_0
             (#"/home/nik/Projects/ver/hw4/map.c" 77 24 37#
             "expl:Pointer dereference"
             (acc  __anonstruct_Map_5_map_42_alloc_table
              __anonstruct_Map_5_capacity_map_42 map_0 )) )) then ()
            else (raise (Goto_while_0_break_0_0_exc ())));
             (if
             (#"/home/nik/Projects/ver/hw4/map.c" 78 12 41#
             (Safe_int32.(=) 
              (#"/home/nik/Projects/ver/hw4/map.c" 78 12 31#
              "expl:Pointer dereference"
              (acc_safe  !__anonstruct_Key_2_a_items_86
               (#"/home/nik/Projects/ver/hw4/map.c" 78 12 31#
               "expl:Pointer dereference"
               (acc_offset_typesafe  voidP_items_86_alloc_table
                __anonstruct_Item_4_key_2_items_86
                (#"/home/nik/Projects/ver/hw4/map.c" 78 12 22#
                "expl:Pointer dereference"
                (acc  __anonstruct_Map_5_map_42_alloc_table
                 !__anonstruct_Map_5_items_map_42 map_0 ))
                (Safe_int32.to_int  !i_0_0_0 ) )) ))
              (#"/home/nik/Projects/ver/hw4/map.c" 78 35 41#
              "expl:Pointer dereference"
              (acc  __anonstruct_Key_2_key_43_alloc_table
               __anonstruct_Key_2_a_key_43 key_0 )) ))
             then
              (if
              (#"/home/nik/Projects/ver/hw4/map.c" 78 45 74#
              (Safe_int32.(=) 
               (#"/home/nik/Projects/ver/hw4/map.c" 78 45 64#
               "expl:Pointer dereference"
               (acc_safe  !__anonstruct_Key_2_b_items_86
                (#"/home/nik/Projects/ver/hw4/map.c" 78 45 64#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_86_alloc_table
                 __anonstruct_Item_4_key_2_items_86
                 (#"/home/nik/Projects/ver/hw4/map.c" 78 45 55#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_42_alloc_table
                  !__anonstruct_Map_5_items_map_42 map_0 ))
                 (Safe_int32.to_int  !i_0_0_0 ) )) ))
               (#"/home/nik/Projects/ver/hw4/map.c" 78 68 74#
               "expl:Pointer dereference"
               (acc  __anonstruct_Key_2_key_43_alloc_table
                __anonstruct_Key_2_b_key_43 key_0 )) ))
              then
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 78 78 105#
               (Safe_int32.(=) 
                (#"/home/nik/Projects/ver/hw4/map.c" 78 78 100#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_86_alloc_table
                 !__anonstruct_Item_4_existent_items_86
                 (#"/home/nik/Projects/ver/hw4/map.c" 78 78 88#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_42_alloc_table
                  !__anonstruct_Map_5_items_map_42 map_0 ))
                 (Safe_int32.to_int  !i_0_0_0 ) ))
                (#"whole_program.jc" 710 64 76# "expl:Integer cast"
                (Safe_int32.of_int (1))) ))
               then
                try
                 begin
                 (let _jessie_145 =
                 (let _jessie_144 =
                 (#"/home/nik/Projects/ver/hw4/map.c" 79 36 44#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Value_3_value_44_alloc_table
                  __anonstruct_Value_3_c_value_44 value )) in
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 79 12 44#
                 "expl:Pointer index bounds" true) }); _jessie_144 end) in
                 (let _jessie_146 =
                 (#"/home/nik/Projects/ver/hw4/map.c" 79 12 44#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_items_86_alloc_table
                  __anonstruct_Item_4_value_2_items_86
                  (#"/home/nik/Projects/ver/hw4/map.c" 79 12 22#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_5_map_42_alloc_table
                   !__anonstruct_Map_5_items_map_42 map_0 ))
                  (Safe_int32.to_int  !i_0_0_0 ) )) in
                 (let _jessie_147 = (0) in
                 (let _jessie_148 = _jessie_146 in
                 (#"/home/nik/Projects/ver/hw4/map.c" 79 12 44#
                 "expl:Pointer dereference"
                 (upd  __anonstruct_Value_3_items_86_alloc_table
                  __anonstruct_Value_3_c_items_86 _jessie_146 _jessie_145 ))))));
                  begin
                  (let _jessie_140 =
                  (let _jessie_139 =
                  (#"/home/nik/Projects/ver/hw4/map.c" 80 36 44#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Value_3_value_44_alloc_table
                   __anonstruct_Value_3_d_value_44 value )) in
                  begin
                  (assert {
                  (#"/home/nik/Projects/ver/hw4/map.c" 80 12 44#
                  "expl:Pointer index bounds" true) }); _jessie_139 end) in
                  (let _jessie_141 =
                  (#"/home/nik/Projects/ver/hw4/map.c" 80 12 44#
                  "expl:Pointer dereference"
                  (acc_offset_typesafe  voidP_items_86_alloc_table
                   __anonstruct_Item_4_value_2_items_86
                   (#"/home/nik/Projects/ver/hw4/map.c" 80 12 22#
                   "expl:Pointer dereference"
                   (acc  __anonstruct_Map_5_map_42_alloc_table
                    !__anonstruct_Map_5_items_map_42 map_0 ))
                   (Safe_int32.to_int  !i_0_0_0 ) )) in
                  (let _jessie_142 = (0) in
                  (let _jessie_143 = _jessie_141 in
                  (#"/home/nik/Projects/ver/hw4/map.c" 80 12 44#
                  "expl:Pointer dereference"
                  (upd  __anonstruct_Value_3_items_86_alloc_table
                   __anonstruct_Value_3_d_items_86 _jessie_141 _jessie_140 ))))));
                   begin
                   (k :=
                    (let _jessie_138 =
                    (Safe_int32.(+)  !i_0_0_0
                     (#"whole_program.jc" 729 63 75# "expl:Integer cast"
                     (Safe_int32.of_int (1))) ) in
                    begin
                    (assert {
                    (#"/home/nik/Projects/ver/hw4/map.c" 82 20 21#
                    "expl:Pointer index bounds" true) }); _jessie_138 end));
                    'LoopEntry:
                    begin
                    'LoopEntry:
                    'Loop_9:
                    loop
                    invariant { (#"whole_program.jc" 731 61 4373# true) }
                      variant {
                        (#"/home/nik/Projects/ver/hw4/map.c" 86 33 50#
                        (Int.(-)
                        (Int32.to_int
                        (select __anonstruct_Map_5_capacity_map_42 map_0))
                        (Int32.to_int !k))) }
                     begin
                     any unit
                     requires { true } reads {
                     __anonstruct_Item_4_existent_items_86,
                     __anonstruct_Key_2_a_items_86,
                     __anonstruct_Key_2_b_items_86,
                     __anonstruct_Map_5_items_map_42,
                     __anonstruct_Value_3_c_items_86,
                     __anonstruct_Value_3_d_items_86, map_0 }
                     ensures {
                       ((#"/home/nik/Projects/ver/hw4/map.c" 85 35 228#
                        (forall j_7 : int.
                         ((((<=) (Int.(+) (Int32.to_int !i_0_0_0) (1)) j_7)
                          /\ ((<) j_7 (Int32.to_int !k))) ->
                          ((compare_items
                           (get_item_t map_0 j_7 (at
                           !__anonstruct_Map_5_items_map_42 'Init))
                           (get_item_t map_0 j_7
                           !__anonstruct_Map_5_items_map_42)
                           __anonstruct_Item_4_value_2_items_86
                           __anonstruct_Item_4_value_2_items_86
                           __anonstruct_Item_4_key_2_items_86
                           __anonstruct_Item_4_key_2_items_86
                           !__anonstruct_Value_3_d_items_86 (at
                           !__anonstruct_Value_3_d_items_86 'Init)
                           !__anonstruct_Value_3_c_items_86 (at
                           !__anonstruct_Value_3_c_items_86 'Init)
                           !__anonstruct_Key_2_b_items_86 (at
                           !__anonstruct_Key_2_b_items_86 'Init)
                           !__anonstruct_Key_2_a_items_86 (at
                           !__anonstruct_Key_2_a_items_86 'Init))
                          /\
                          ((Int32.(=)
                           (select (at !__anonstruct_Item_4_existent_items_86
                           'Init)
                           (shift
                           (select (at !__anonstruct_Map_5_items_map_42
                           'Init) map_0) j_7))
                           (select !__anonstruct_Item_4_existent_items_86
                           (shift
                           (select !__anonstruct_Map_5_items_map_42 map_0)
                           j_7)))
                          /\
                          (Int32.(=)
                          (select !__anonstruct_Item_4_existent_items_86
                          (shift
                          (select !__anonstruct_Map_5_items_map_42 map_0)
                          j_7)) (#"whole_program.jc" 766 68 80#
                          "expl:Integer cast" (Int32.of_int (1)))))))))
                       /\
                       (#"/home/nik/Projects/ver/hw4/map.c" 84 35 62#
                       (#"/home/nik/Projects/ver/hw4/map.c" 84 35 62#
                       ((#"/home/nik/Projects/ver/hw4/map.c" 84 35 45#
                        ((<=) (Int.(+) (Int32.to_int !i_0_0_0) (1))
                        (Int32.to_int !k)))
                       /\
                       (#"/home/nik/Projects/ver/hw4/map.c" 84 44 62#
                       (Int32.(<=) !k
                       (select __anonstruct_Map_5_capacity_map_42 map_0)))))))
                       } ;
                      try
                       begin
                       'LoopCurrent:
                       begin
                       'LoopCurrent:
                       (if
                       (#"/home/nik/Projects/ver/hw4/map.c" 88 23 40#
                       (Safe_int32.(<)  !k
                        (#"/home/nik/Projects/ver/hw4/map.c" 88 27 40#
                        "expl:Pointer dereference"
                        (acc  __anonstruct_Map_5_map_42_alloc_table
                         __anonstruct_Map_5_capacity_map_42 map_0 )) ))
                       then () else (raise (Goto_while_1_break_exc ())));
                        (k :=
                         (let _jessie_137 =
                         (Safe_int32.(+)  !k
                          (#"whole_program.jc" 783 68 80# "expl:Integer cast"
                          (Safe_int32.of_int (1))) ) in
                         begin
                         (assert {
                         (#"/home/nik/Projects/ver/hw4/map.c" 89 20 23#
                         "expl:Pointer index bounds" true) }); _jessie_137
                         end)) end; (raise (Loop_continue_exc ())) end with
                       Loop_continue_exc _jessie_17 -> () end end end;
                     (raise (Goto_while_1_break_exc ())) end end end end with
                 Goto_while_1_break_exc _jessie_10 ->
                 'While_1_break:
                 'While_1_break:
                 begin
                 ();
                  begin
                  any unit
                  requires { true } reads {
                  __anonstruct_Item_4_existent_items_86,
                  __anonstruct_Key_2_a_items_86,
                  __anonstruct_Key_2_b_items_86,
                  __anonstruct_Map_5_items_map_42,
                  __anonstruct_Value_3_c_items_86,
                  __anonstruct_Value_3_d_items_86, key_0, map_0 }
                  ensures {
                    (#"/home/nik/Projects/ver/hw4/map.c" 91 27 55#
                    (no_mchg map_0 key_0 __anonstruct_Map_5_capacity_map_42
                    __anonstruct_Map_5_capacity_map_42
                    !__anonstruct_Map_5_items_map_42 (at
                    !__anonstruct_Map_5_items_map_42 'Init)
                    !__anonstruct_Item_4_existent_items_86 (at
                    !__anonstruct_Item_4_existent_items_86 'Init)
                    __anonstruct_Item_4_value_2_items_86
                    __anonstruct_Item_4_value_2_items_86
                    __anonstruct_Item_4_key_2_items_86
                    __anonstruct_Item_4_key_2_items_86
                    !__anonstruct_Value_3_d_items_86 (at
                    !__anonstruct_Value_3_d_items_86 'Init)
                    !__anonstruct_Value_3_c_items_86 (at
                    !__anonstruct_Value_3_c_items_86 'Init)
                    !__anonstruct_Key_2_b_items_86 (at
                    !__anonstruct_Key_2_b_items_86 'Init)
                    __anonstruct_Key_2_b_key_43
                    !__anonstruct_Key_2_a_items_86 (at
                    !__anonstruct_Key_2_a_items_86 'Init)
                    __anonstruct_Key_2_a_key_43)) } ; () end;
                  begin
                  (__retres_0 :=
                   (let _jessie_149 =
                   (#"whole_program.jc" 797 88 100# "expl:Integer cast"
                   (Safe_int32.of_int (1))) in
                   begin
                   (assert {
                   (#"/home/nik/Projects/ver/hw4/map.c" 93 12 21#
                   "expl:Pointer index bounds" true) }); _jessie_149 end));
                   (raise (Goto_return_label_0_exc ())) end end end else ())
              else ()) else ());
             (i_0_0_0 :=
              (let _jessie_150 =
              (Safe_int32.(+)  !i_0_0_0
               (#"whole_program.jc" 803 64 76# "expl:Integer cast"
               (Safe_int32.of_int (1))) ) in
              begin
              (assert {
              (#"/home/nik/Projects/ver/hw4/map.c" 77 39 42#
              "expl:Pointer index bounds" true) }); _jessie_150 end)) end;
             (raise (Loop_continue_exc ())) end with Loop_continue_exc
            _jessie_19 -> () end end end;
          (raise (Goto_while_0_break_0_0_exc ())) end end with
        Goto_while_0_break_0_0_exc _jessie_11 ->
        'While_0_break_0_0: 'While_0_break_0_0: () end;
       (if
       (#"/home/nik/Projects/ver/hw4/map.c" 97 8 35#
       (Safe_int32.(=) 
        (#"/home/nik/Projects/ver/hw4/map.c" 97 8 18#
        "expl:Pointer dereference"
        (acc  __anonstruct_Map_5_map_42_alloc_table
         !__anonstruct_Map_5_count_map_42 map_0 ))
        (#"/home/nik/Projects/ver/hw4/map.c" 97 22 35#
        "expl:Pointer dereference"
        (acc  __anonstruct_Map_5_map_42_alloc_table
         __anonstruct_Map_5_capacity_map_42 map_0 )) ))
       then
        begin
        (__retres_0 :=
         (let _jessie_185 =
         (#"whole_program.jc" 809 33 45# "expl:Integer cast"
         (Safe_int32.of_int (0))) in
         begin
         (assert {
         (#"/home/nik/Projects/ver/hw4/map.c" 98 8 17#
         "expl:Pointer index bounds" true) }); _jessie_185 end));
         (raise (Goto_return_label_0_exc ())) end
       else
        try
         begin
         (i_0_1 :=
          (let _jessie_184 =
          (#"whole_program.jc" 813 28 40# "expl:Integer cast"
          (Safe_int32.of_int (0))) in
          begin
          (assert {
          (#"/home/nik/Projects/ver/hw4/map.c" 105 17 18#
          "expl:Pointer index bounds" true) }); _jessie_184 end));
          'LoopEntry:
          begin
          'LoopEntry:
          'Loop_10:
          loop
          invariant { (#"whole_program.jc" 815 9 4428# true) }
            variant { (#"/home/nik/Projects/ver/hw4/map.c" 103 25 42#
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_5_capacity_map_42 map_0))
              (Int32.to_int !i_0_1))) }
           begin
           any unit
           requires { true } reads { __anonstruct_Map_5_items_map_42, map_0 }
           ensures {
             ((#"/home/nik/Projects/ver/hw4/map.c" 102 27 70#
              (if
               ((<=) (0)
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))) then
               (((<=)
                (offset_min voidP_items_86_alloc_table
                (select !__anonstruct_Map_5_items_map_42 map_0)) (0))
               /\
               (((>=)
                (offset_max voidP_items_86_alloc_table
                (select !__anonstruct_Map_5_items_map_42 map_0))
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))
               /\
               (forall __framac_tmp15 : int.
                ((((<=) (0) __framac_tmp15) /\
                 ((<=) __framac_tmp15
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))) ->
                 (((<=)
                  (offset_min __anonstruct_Key_2_items_86_alloc_table
                  (select __anonstruct_Item_4_key_2_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                  __framac_tmp15))) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Key_2_items_86_alloc_table
                  (select __anonstruct_Item_4_key_2_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                  __framac_tmp15))) (0))
                 /\
                 (((=) true true) /\
                 (((<=)
                  (offset_min __anonstruct_Value_3_items_86_alloc_table
                  (select __anonstruct_Item_4_value_2_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                  __framac_tmp15))) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Value_3_items_86_alloc_table
                  (select __anonstruct_Item_4_value_2_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                  __framac_tmp15))) (0))
                 /\ ((=) true true)))))))))) else ((=) true true)))
             /\
             (#"/home/nik/Projects/ver/hw4/map.c" 101 27 50#
             (#"/home/nik/Projects/ver/hw4/map.c" 101 27 50#
             ((#"/home/nik/Projects/ver/hw4/map.c" 101 27 33#
              (Int32.(<=) (#"whole_program.jc" 817 43 55# "expl:Integer cast"
              (Int32.of_int (0))) !i_0_1))
             /\
             (#"/home/nik/Projects/ver/hw4/map.c" 101 32 50#
             (Int32.(<=) !i_0_1
             (select __anonstruct_Map_5_capacity_map_42 map_0))))))) } ;
            try
             begin
             'LoopCurrent:
             begin
             'LoopCurrent:
             (if
             (#"/home/nik/Projects/ver/hw4/map.c" 105 24 41#
             (Safe_int32.(<)  !i_0_1
              (#"/home/nik/Projects/ver/hw4/map.c" 105 28 41#
              "expl:Pointer dereference"
              (acc  __anonstruct_Map_5_map_42_alloc_table
               __anonstruct_Map_5_capacity_map_42 map_0 )) )) then ()
             else (raise (Goto_while_0_break_0_1_exc ())));
              begin
              begin
              any unit
              requires { true } reads { __anonstruct_Map_5_count_map_42,
              map_0 }
              ensures {
                (#"/home/nik/Projects/ver/hw4/map.c" 106 23 49#
                (Int32.(<) (select !__anonstruct_Map_5_count_map_42 map_0)
                (select __anonstruct_Map_5_capacity_map_42 map_0))) } ; ()
              end;
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 107 16 43#
               (Safe_int32.(=) 
                (#"/home/nik/Projects/ver/hw4/map.c" 107 16 38#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_86_alloc_table
                 !__anonstruct_Item_4_existent_items_86
                 (#"/home/nik/Projects/ver/hw4/map.c" 107 16 26#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_42_alloc_table
                  !__anonstruct_Map_5_items_map_42 map_0 ))
                 (Safe_int32.to_int  !i_0_1 ) ))
                (#"whole_program.jc" 859 34 46# "expl:Integer cast"
                (Safe_int32.of_int (0))) ))
               then
                begin
                (let _jessie_179 =
                (let _jessie_178 =
                (#"/home/nik/Projects/ver/hw4/map.c" 108 38 44#
                "expl:Pointer dereference"
                (acc  __anonstruct_Key_2_key_43_alloc_table
                 __anonstruct_Key_2_a_key_43 key_0 )) in
                begin
                (assert {
                (#"/home/nik/Projects/ver/hw4/map.c" 108 16 44#
                "expl:Pointer index bounds" true) }); _jessie_178 end) in
                (let _jessie_180 =
                (#"/home/nik/Projects/ver/hw4/map.c" 108 16 44#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_86_alloc_table
                 __anonstruct_Item_4_key_2_items_86
                 (#"/home/nik/Projects/ver/hw4/map.c" 108 16 26#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_42_alloc_table
                  !__anonstruct_Map_5_items_map_42 map_0 ))
                 (Safe_int32.to_int  !i_0_1 ) )) in
                (let _jessie_181 = (0) in
                (let _jessie_182 = _jessie_180 in
                (#"/home/nik/Projects/ver/hw4/map.c" 108 16 44#
                "expl:Pointer dereference"
                (upd  __anonstruct_Key_2_items_86_alloc_table
                 __anonstruct_Key_2_a_items_86 _jessie_180 _jessie_179 ))))));
                 begin
                 (let _jessie_174 =
                 (let _jessie_173 =
                 (#"/home/nik/Projects/ver/hw4/map.c" 109 38 44#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Key_2_key_43_alloc_table
                  __anonstruct_Key_2_b_key_43 key_0 )) in
                 begin
                 (assert {
                 (#"/home/nik/Projects/ver/hw4/map.c" 109 16 44#
                 "expl:Pointer index bounds" true) }); _jessie_173 end) in
                 (let _jessie_175 =
                 (#"/home/nik/Projects/ver/hw4/map.c" 109 16 44#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_items_86_alloc_table
                  __anonstruct_Item_4_key_2_items_86
                  (#"/home/nik/Projects/ver/hw4/map.c" 109 16 26#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_5_map_42_alloc_table
                   !__anonstruct_Map_5_items_map_42 map_0 ))
                  (Safe_int32.to_int  !i_0_1 ) )) in
                 (let _jessie_176 = (0) in
                 (let _jessie_177 = _jessie_175 in
                 (#"/home/nik/Projects/ver/hw4/map.c" 109 16 44#
                 "expl:Pointer dereference"
                 (upd  __anonstruct_Key_2_items_86_alloc_table
                  __anonstruct_Key_2_b_items_86 _jessie_175 _jessie_174 ))))));
                  begin
                  (let _jessie_169 =
                  (let _jessie_168 =
                  (#"/home/nik/Projects/ver/hw4/map.c" 110 40 48#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Value_3_value_44_alloc_table
                   __anonstruct_Value_3_c_value_44 value )) in
                  begin
                  (assert {
                  (#"/home/nik/Projects/ver/hw4/map.c" 110 16 48#
                  "expl:Pointer index bounds" true) }); _jessie_168 end) in
                  (let _jessie_170 =
                  (#"/home/nik/Projects/ver/hw4/map.c" 110 16 48#
                  "expl:Pointer dereference"
                  (acc_offset_typesafe  voidP_items_86_alloc_table
                   __anonstruct_Item_4_value_2_items_86
                   (#"/home/nik/Projects/ver/hw4/map.c" 110 16 26#
                   "expl:Pointer dereference"
                   (acc  __anonstruct_Map_5_map_42_alloc_table
                    !__anonstruct_Map_5_items_map_42 map_0 ))
                   (Safe_int32.to_int  !i_0_1 ) )) in
                  (let _jessie_171 = (0) in
                  (let _jessie_172 = _jessie_170 in
                  (#"/home/nik/Projects/ver/hw4/map.c" 110 16 48#
                  "expl:Pointer dereference"
                  (upd  __anonstruct_Value_3_items_86_alloc_table
                   __anonstruct_Value_3_c_items_86 _jessie_170 _jessie_169 ))))));
                   begin
                   (let _jessie_164 =
                   (let _jessie_163 =
                   (#"/home/nik/Projects/ver/hw4/map.c" 111 40 48#
                   "expl:Pointer dereference"
                   (acc  __anonstruct_Value_3_value_44_alloc_table
                    __anonstruct_Value_3_d_value_44 value )) in
                   begin
                   (assert {
                   (#"/home/nik/Projects/ver/hw4/map.c" 111 16 48#
                   "expl:Pointer index bounds" true) }); _jessie_163 end) in
                   (let _jessie_165 =
                   (#"/home/nik/Projects/ver/hw4/map.c" 111 16 48#
                   "expl:Pointer dereference"
                   (acc_offset_typesafe  voidP_items_86_alloc_table
                    __anonstruct_Item_4_value_2_items_86
                    (#"/home/nik/Projects/ver/hw4/map.c" 111 16 26#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_5_map_42_alloc_table
                     !__anonstruct_Map_5_items_map_42 map_0 ))
                    (Safe_int32.to_int  !i_0_1 ) )) in
                   (let _jessie_166 = (0) in
                   (let _jessie_167 = _jessie_165 in
                   (#"/home/nik/Projects/ver/hw4/map.c" 111 16 48#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Value_3_items_86_alloc_table
                    __anonstruct_Value_3_d_items_86 _jessie_165 _jessie_164 ))))));
                    begin
                    (let _jessie_159 =
                    (let _jessie_158 =
                    (#"whole_program.jc" 873 74 86# "expl:Integer cast"
                    (Safe_int32.of_int (1))) in
                    begin
                    (assert {
                    (#"/home/nik/Projects/ver/hw4/map.c" 112 16 42#
                    "expl:Pointer index bounds" true) }); _jessie_158 end) in
                    (let _jessie_160 =
                    (#"/home/nik/Projects/ver/hw4/map.c" 112 16 26#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_5_map_42_alloc_table
                     !__anonstruct_Map_5_items_map_42 map_0 )) in
                    (let _jessie_161 = (Safe_int32.to_int  !i_0_1 ) in
                    (let _jessie_162 =
                    (shift_typesafe  _jessie_160 _jessie_161 ) in
                    (#"/home/nik/Projects/ver/hw4/map.c" 112 16 42#
                    "expl:Pointer dereference"
                    (upd_offset_typesafe  voidP_items_86_alloc_table
                     __anonstruct_Item_4_existent_items_86 _jessie_160
                     _jessie_161 _jessie_159 ))))));
                     begin
                     (let _jessie_154 =
                     (let _jessie_153 =
                     (Safe_int32.(+) 
                      (#"/home/nik/Projects/ver/hw4/map.c" 113 16 26#
                      "expl:Pointer dereference"
                      (acc  __anonstruct_Map_5_map_42_alloc_table
                       !__anonstruct_Map_5_count_map_42 map_0 ))
                      (#"whole_program.jc" 876 68 80# "expl:Integer cast"
                      (Safe_int32.of_int (1))) ) in
                     begin
                     (assert {
                     (#"/home/nik/Projects/ver/hw4/map.c" 113 16 28#
                     "expl:Pointer index bounds" true) }); _jessie_153 end)
                     in
                     (let _jessie_155 = map_0 in
                     (let _jessie_156 = (0) in
                     (let _jessie_157 = _jessie_155 in
                     (#"/home/nik/Projects/ver/hw4/map.c" 113 16 28#
                     "expl:Pointer dereference"
                     (upd  __anonstruct_Map_5_map_42_alloc_table
                      __anonstruct_Map_5_count_map_42 _jessie_155 _jessie_154
                      ))))));
                      begin
                      (__retres_0 :=
                       (let _jessie_152 =
                       (#"whole_program.jc" 878 48 60# "expl:Integer cast"
                       (Safe_int32.of_int (1))) in
                       begin
                       (assert {
                       (#"/home/nik/Projects/ver/hw4/map.c" 114 16 25#
                       "expl:Pointer index bounds" true) }); _jessie_152 end));
                       (raise (Goto_return_label_0_exc ())) end end end end
                  end end end else ()) end;
              (i_0_1 :=
               (let _jessie_183 =
               (Safe_int32.(+)  !i_0_1
                (#"whole_program.jc" 884 64 76# "expl:Integer cast"
                (Safe_int32.of_int (1))) ) in
               begin
               (assert {
               (#"/home/nik/Projects/ver/hw4/map.c" 105 43 46#
               "expl:Pointer index bounds" true) }); _jessie_183 end)) end;
              (raise (Loop_continue_exc ())) end with Loop_continue_exc
             _jessie_21 -> () end end end;
           (raise (Goto_while_0_break_0_1_exc ())) end end with
         Goto_while_0_break_0_1_exc _jessie_12 ->
         'While_0_break_0_1: 'While_0_break_0_1: () end);
       begin
       any unit
       requires { true }
       ensures {
         (#"/home/nik/Projects/ver/hw4/map.c" 118 0 1# ((=) false true)) } ;
        () end;
       (__retres_0 :=
        (let _jessie_186 =
        (#"whole_program.jc" 894 30 42# "expl:Integer cast"
        (Safe_int32.of_int (0))) in
        begin
        (assert {
        (#"/home/nik/Projects/ver/hw4/map.c" 118 0 1#
        "expl:Pointer index bounds" true) }); _jessie_186 end)) end end;
      (raise (Goto_return_label_0_exc ())) end with Goto_return_label_0_exc
     _jessie_15 ->
     'Return_label_0:
     'Return_label_0:
     begin
     (return :=
      (let _jessie_187 = !__retres_0 in
      begin
      (assert {
      (#"whole_program.jc" 896 7 24# "expl:Pointer index bounds" true) });
       _jessie_187 end)); (raise Return) end end)))); absurd  end with Return
    -> !return end)
  
end

theory Logic_same_capacity

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate same_capacity (map_21 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_21_35_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_21_35_at_L1 : (memory
  __anonstruct_Map_5 Int32.t))
  =
     (Int32.(=) (select __anonstruct_Map_5_capacity_map_21_35_at_L1 map_21)
     (select __anonstruct_Map_5_capacity_map_21_35_at_L2 map_21))
  
  
end

theory Logic_get_value_t

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use why3.Bool.Bool 
  
  function get_value_t (it_2 : (pointer voidP))
  (__anonstruct_Item_4_value_2_it_2_25_at_L : (memory voidP (pointer
  __anonstruct_Value_3))) : (pointer __anonstruct_Value_3)
  = (select __anonstruct_Item_4_value_2_it_2_25_at_L it_2)
  
  
end

module Function_addElement_behaviors
#"/home/nik/Projects/ver/hw4/map.c" 61 4 48# "expl:addElement, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_capacity 
  
  use import Logic_no_mchg 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import Axiomatic_MapCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let addElement_ensures_default #"/home/nik/Projects/ver/hw4/map.c" 61 4 48#
  "expl:Function addElement, default behavior" =
  fun
   (map_0 : (pointer __anonstruct_Map_5)) (key_0 : (pointer
   __anonstruct_Key_2)) (value : (pointer __anonstruct_Value_3))
   (__anonstruct_Key_2_a_items_86 : ref (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Key_2_b_items_86 : ref (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Value_3_c_items_86 : ref (memory __anonstruct_Value_3
   Int32.t)) (__anonstruct_Value_3_d_items_86 : ref (memory
   __anonstruct_Value_3 Int32.t)) (__anonstruct_Item_4_existent_items_86 :
   ref (memory voidP Int32.t)) (__anonstruct_Map_5_items_map_42 : ref (memory
   __anonstruct_Map_5 (pointer voidP))) (__anonstruct_Map_5_count_map_42 :
   ref (memory __anonstruct_Map_5 Int32.t))
   (__anonstruct_Key_2_key_43_alloc_table : (alloc_table __anonstruct_Key_2))
   (__anonstruct_Key_2_items_86_alloc_table : (alloc_table
   __anonstruct_Key_2)) (__anonstruct_Map_5_map_42_alloc_table : (alloc_table
   __anonstruct_Map_5)) (__anonstruct_Value_3_value_44_alloc_table :
   (alloc_table __anonstruct_Value_3))
   (__anonstruct_Value_3_items_86_alloc_table : (alloc_table
   __anonstruct_Value_3)) (voidP_items_86_alloc_table : (alloc_table voidP))
   (voidP_items_86_tag_table : (tag_table voidP))
   (__anonstruct_Key_2_a_key_43 : (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Key_2_b_key_43 : (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Value_3_c_value_44 : (memory __anonstruct_Value_3 Int32.t))
   (__anonstruct_Value_3_d_value_44 : (memory __anonstruct_Value_3 Int32.t))
   (__anonstruct_Item_4_key_2_items_86 : (memory voidP (pointer
   __anonstruct_Key_2))) (__anonstruct_Item_4_value_2_items_86 : (memory
   voidP (pointer __anonstruct_Value_3))) (__anonstruct_Map_5_capacity_map_42
   : (memory __anonstruct_Map_5 Int32.t)) 
   requires {
   (#"whole_program.jc" 513 12 1010#
   ((#"/home/nik/Projects/ver/hw4/map.h" 308 13 24#
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((<=) (offset_min __anonstruct_Map_5_map_42_alloc_table map_0) (0)))
    /\
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((>=) (offset_max __anonstruct_Map_5_map_42_alloc_table map_0) (0)))
    /\ (#"whole_program.jc" 513 12 1010# ((=) true true)))))))
   /\
   (#"whole_program.jc" 513 12 1010#
   ((#"/home/nik/Projects/ver/hw4/map.h" 308 28 39#
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((<=) (offset_min __anonstruct_Key_2_key_43_alloc_table key_0) (0)))
    /\
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((>=) (offset_max __anonstruct_Key_2_key_43_alloc_table key_0) (0)))
    /\ (#"whole_program.jc" 513 12 1010# ((=) true true)))))))
   /\
   (#"whole_program.jc" 513 12 1010#
   ((#"/home/nik/Projects/ver/hw4/map.h" 308 43 56#
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((<=) (offset_min __anonstruct_Value_3_value_44_alloc_table value) (0)))
    /\
    (#"whole_program.jc" 513 12 1010#
    ((#"whole_program.jc" 513 12 1010#
     ((>=) (offset_max __anonstruct_Value_3_value_44_alloc_table value) (0)))
    /\ (#"whole_program.jc" 513 12 1010# ((=) true true)))))))
   /\
   (#"/home/nik/Projects/ver/hw4/map.h" 309 13 30#
   (is_valid_map map_0 voidP_items_86_alloc_table
   __anonstruct_Value_3_items_86_alloc_table
   __anonstruct_Key_2_items_86_alloc_table !__anonstruct_Map_5_count_map_42
   __anonstruct_Map_5_capacity_map_42 !__anonstruct_Map_5_items_map_42
   !__anonstruct_Item_4_existent_items_86
   __anonstruct_Item_4_value_2_items_86 __anonstruct_Item_4_key_2_items_86
   !__anonstruct_Key_2_b_items_86 !__anonstruct_Key_2_a_items_86)))))))) }
   ensures {
     ("expl:Postcondition"
     ((((((((#"whole_program.jc" 530 10 334# "expl:Assigns clause"
            (not_assigns __anonstruct_Key_2_items_86_alloc_table
            __anonstruct_Key_2_items_86_alloc_table (old
            !__anonstruct_Key_2_a_items_86) !__anonstruct_Key_2_a_items_86
            (pset_deref __anonstruct_Item_4_key_2_items_86
            (pset_range
            (pset_deref (old !__anonstruct_Map_5_items_map_42)
            (pset_singleton map_0)) (0)
            (Int.(-)
            (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
            (1))))))
           /\
           (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
           (not_assigns __anonstruct_Key_2_items_86_alloc_table
           __anonstruct_Key_2_items_86_alloc_table (old
           !__anonstruct_Key_2_b_items_86) !__anonstruct_Key_2_b_items_86
           (pset_deref __anonstruct_Item_4_key_2_items_86
           (pset_range
           (pset_deref (old !__anonstruct_Map_5_items_map_42)
           (pset_singleton map_0)) (0)
           (Int.(-)
           (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
           (1)))))))
          /\
          (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
          (not_assigns __anonstruct_Value_3_items_86_alloc_table
          __anonstruct_Value_3_items_86_alloc_table (old
          !__anonstruct_Value_3_c_items_86) !__anonstruct_Value_3_c_items_86
          (pset_deref __anonstruct_Item_4_value_2_items_86
          (pset_range
          (pset_deref (old !__anonstruct_Map_5_items_map_42)
          (pset_singleton map_0)) (0)
          (Int.(-)
          (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
          (1)))))))
         /\
         (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
         (not_assigns __anonstruct_Value_3_items_86_alloc_table
         __anonstruct_Value_3_items_86_alloc_table (old
         !__anonstruct_Value_3_d_items_86) !__anonstruct_Value_3_d_items_86
         (pset_deref __anonstruct_Item_4_value_2_items_86
         (pset_range
         (pset_deref (old !__anonstruct_Map_5_items_map_42)
         (pset_singleton map_0)) (0)
         (Int.(-)
         (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0))
         (1)))))))
        /\
        (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
        (not_assigns voidP_items_86_alloc_table voidP_items_86_alloc_table
        (old !__anonstruct_Item_4_existent_items_86)
        !__anonstruct_Item_4_existent_items_86
        (pset_range
        (pset_deref (old !__anonstruct_Map_5_items_map_42)
        (pset_singleton map_0)) (0)
        (Int.(-)
        (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))
       /\
       (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
       (not_assigns __anonstruct_Map_5_map_42_alloc_table
       __anonstruct_Map_5_map_42_alloc_table (old
       !__anonstruct_Map_5_items_map_42) !__anonstruct_Map_5_items_map_42
       pset_empty)))
      /\
      (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
      (not_assigns __anonstruct_Map_5_map_42_alloc_table
      __anonstruct_Map_5_map_42_alloc_table (old
      !__anonstruct_Map_5_count_map_42) !__anonstruct_Map_5_count_map_42
      (pset_singleton map_0))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 316 12 24# "expl:Ensures clause"
      (Int32.(<=) (#"whole_program.jc" 537 33 45# "expl:Integer cast"
      (Int32.of_int (0))) result))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 316 17 29# "expl:Ensures clause"
      (Int32.(<=) result (#"whole_program.jc" 538 45 57# "expl:Integer cast"
      (Int32.of_int (1)))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 317 12 29# "expl:Ensures clause"
      (is_valid_map map_0 voidP_items_86_alloc_table
      __anonstruct_Value_3_items_86_alloc_table
      __anonstruct_Key_2_items_86_alloc_table
      !__anonstruct_Map_5_count_map_42 __anonstruct_Map_5_capacity_map_42
      !__anonstruct_Map_5_items_map_42 !__anonstruct_Item_4_existent_items_86
      __anonstruct_Item_4_value_2_items_86 __anonstruct_Item_4_key_2_items_86
      !__anonstruct_Key_2_b_items_86 !__anonstruct_Key_2_a_items_86))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 318 12 41# "expl:Ensures clause"
      (same_capacity map_0 __anonstruct_Map_5_capacity_map_42
      __anonstruct_Map_5_capacity_map_42))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 319 12 46# "expl:Ensures clause"
      (compare_keys key_0 key_0 __anonstruct_Key_2_b_key_43
      __anonstruct_Key_2_b_key_43 __anonstruct_Key_2_a_key_43
      __anonstruct_Key_2_a_key_43))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 320 12 52# "expl:Ensures clause"
      (compare_values value value __anonstruct_Value_3_d_value_44
      __anonstruct_Value_3_d_value_44 __anonstruct_Value_3_c_value_44
      __anonstruct_Value_3_c_value_44))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 322 12 305# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 545 54 66# "expl:Integer cast"
       (Int32.of_int (1)))) ->
       (exists i_13_0 : int.
        (((<=) (0) i_13_0) /\
        (((<) i_13_0
         (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0)))
        /\
        ((compare_keys
         (get_key_t
         (get_item_t map_0 i_13_0 !__anonstruct_Map_5_items_map_42)
         __anonstruct_Item_4_key_2_items_86) key_0
         __anonstruct_Key_2_b_key_43 !__anonstruct_Key_2_b_items_86
         __anonstruct_Key_2_a_key_43 !__anonstruct_Key_2_a_items_86)
        /\
        ((compare_values
         (get_value_t
         (get_item_t map_0 i_13_0 !__anonstruct_Map_5_items_map_42)
         __anonstruct_Item_4_value_2_items_86) value
         __anonstruct_Value_3_d_value_44 !__anonstruct_Value_3_d_items_86
         __anonstruct_Value_3_c_value_44 !__anonstruct_Value_3_c_items_86)
        /\
        (Int32.(=)
        (select !__anonstruct_Item_4_existent_items_86
        (shift (select !__anonstruct_Map_5_items_map_42 map_0) i_13_0))
        (#"whole_program.jc" 561 49 61# "expl:Integer cast" (Int32.of_int
        (1)))))))))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 328 12 318# "expl:Ensures clause"
      (((Int32.(=) result (#"whole_program.jc" 562 58 70# "expl:Integer cast"
        (Int32.of_int (1)))) ->
        (exists i_14 : int.
         (((<=) (0) i_14) /\
         (((<) i_14
          (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0)))
         /\
         ((compare_keys
          (get_key_t (get_item_t map_0 i_14 !__anonstruct_Map_5_items_map_42)
          __anonstruct_Item_4_key_2_items_86) key_0
          __anonstruct_Key_2_b_key_43 !__anonstruct_Key_2_b_items_86
          __anonstruct_Key_2_a_key_43 !__anonstruct_Key_2_a_items_86)
         /\
         (Int32.(=)
         (select !__anonstruct_Item_4_existent_items_86
         (shift (select !__anonstruct_Map_5_items_map_42 map_0) i_14))
         (#"whole_program.jc" 574 53 65# "expl:Integer cast" (Int32.of_int
         (1))))))))) ->
       (Int32.(=) (select !__anonstruct_Map_5_count_map_42 map_0)
       (select (old !__anonstruct_Map_5_count_map_42) map_0))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 328 12 318# "expl:Ensures clause"
      ((not
       ((Int32.(=) result (#"whole_program.jc" 577 62 74# "expl:Integer cast"
        (Int32.of_int (1)))) ->
        (exists i_15 : int.
         (((<=) (0) i_15) /\
         (((<) i_15
          (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0)))
         /\
         ((compare_keys
          (get_key_t (get_item_t map_0 i_15 !__anonstruct_Map_5_items_map_42)
          __anonstruct_Item_4_key_2_items_86) key_0
          __anonstruct_Key_2_b_key_43 !__anonstruct_Key_2_b_items_86
          __anonstruct_Key_2_a_key_43 !__anonstruct_Key_2_a_items_86)
         /\
         (Int32.(=)
         (select !__anonstruct_Item_4_existent_items_86
         (shift (select !__anonstruct_Map_5_items_map_42 map_0) i_15))
         (#"whole_program.jc" 590 57 69# "expl:Integer cast" (Int32.of_int
         (1)))))))))) ->
       ((=) (Int32.to_int (select !__anonstruct_Map_5_count_map_42 map_0))
       (Int.(+)
       (Int32.to_int (select (old !__anonstruct_Map_5_count_map_42) map_0))
       (1)))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 334 12 58# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 594 58 70# "expl:Integer cast"
       (Int32.of_int (1)))) ->
       (no_mchg map_0 key_0 __anonstruct_Map_5_capacity_map_42
       __anonstruct_Map_5_capacity_map_42 !__anonstruct_Map_5_items_map_42
       (old !__anonstruct_Map_5_items_map_42)
       !__anonstruct_Item_4_existent_items_86 (old
       !__anonstruct_Item_4_existent_items_86)
       __anonstruct_Item_4_value_2_items_86
       __anonstruct_Item_4_value_2_items_86
       __anonstruct_Item_4_key_2_items_86 __anonstruct_Item_4_key_2_items_86
       !__anonstruct_Value_3_d_items_86 (old
       !__anonstruct_Value_3_d_items_86) !__anonstruct_Value_3_c_items_86
       (old !__anonstruct_Value_3_c_items_86) !__anonstruct_Key_2_b_items_86
       (old !__anonstruct_Key_2_b_items_86) __anonstruct_Key_2_b_key_43
       !__anonstruct_Key_2_a_items_86 (old !__anonstruct_Key_2_a_items_86)
       __anonstruct_Key_2_a_key_43)))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 335 12 76# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 598 60 72# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (Int32.(=) (select (old !__anonstruct_Map_5_count_map_42) map_0)
       (select __anonstruct_Map_5_capacity_map_42 map_0))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 336 12 203# "expl:Ensures clause"
     ((Int32.(=) result (#"whole_program.jc" 601 61 73# "expl:Integer cast"
      (Int32.of_int (0)))) ->
      (forall i_16 : int.
       ((((<=) (0) i_16) /\
        ((<) i_16
        (Int32.to_int (select __anonstruct_Map_5_capacity_map_42 map_0)))) ->
        (not
        ((Int32.(=)
         (select !__anonstruct_Key_2_a_items_86
         (select __anonstruct_Item_4_key_2_items_86
         (shift (select !__anonstruct_Map_5_items_map_42 map_0) i_16)))
         (select __anonstruct_Key_2_a_key_43 key_0))
        /\
        ((Int32.(=)
         (select !__anonstruct_Key_2_b_items_86
         (select __anonstruct_Item_4_key_2_items_86
         (shift (select !__anonstruct_Map_5_items_map_42 map_0) i_16)))
         (select __anonstruct_Key_2_b_key_43 key_0))
        /\
        (Int32.(=)
        (select !__anonstruct_Item_4_existent_items_86
        (shift (select !__anonstruct_Map_5_items_map_42 map_0) i_16))
        (#"whole_program.jc" 614 61 73# "expl:Integer cast" (Int32.of_int
        (1)))))))))))))))))))))))))))))))))))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let i_0_0_0 = ref (Unsafe_int32.any_  () ) in
    (let k = ref (Unsafe_int32.any_  () ) in
    (let i_0_1 = ref (Unsafe_int32.any_  () ) in
    (let __retres_0 = ref (Unsafe_int32.any_  () ) in
    try
     begin
     try
      begin
      try
       begin
       (if
       (#"/home/nik/Projects/ver/hw4/map.c" 62 8 58# ((=)  map_0 (null  ) ))
       then (raise (Goto__LOR_0_0_exc ()))
       else
        (if
        (#"/home/nik/Projects/ver/hw4/map.c" 62 22 101#
        ((=)  (acc  !__anonstruct_Map_5_items_map_42 map_0 ) (null  ) ))
        then (raise (Goto__LOR_0_0_exc ())) else ()));
        (raise (Goto__LOR_0_1_exc ())); (raise (Goto__LOR_0_0_exc ())) end
       with Goto__LOR_0_0_exc _jessie_13 ->
       'U__LOR_0_0:
       'U__LOR_0_0:
       'U__LOR_0_0:
       'U__LOR_0_0:
       begin
       (__retres_0 :=
        (#"whole_program.jc" 630 44 57# "expl:Integer cast"
        (Unsafe_int32.of_int  (Int.(-_)  (1) ) )));
        (raise (Goto_return_label_0_exc ())) end end;
       (raise (Goto__LOR_0_1_exc ())) end with Goto__LOR_0_1_exc _jessie_14
      ->
      'U__LOR_0_1:
      'U__LOR_0_1:
      begin
      ();
       try
        begin
        (i_0_0_0 :=
         (#"whole_program.jc" 636 27 39# "expl:Integer cast"
         (Unsafe_int32.of_int (0))));
         'LoopEntry:
         begin
         'LoopEntry:
         'Loop_5:
         loop
         invariant
           { (((#"/home/nik/Projects/ver/hw4/map.c" 68 23 46#
               (#"/home/nik/Projects/ver/hw4/map.c" 68 23 46#
               ((#"/home/nik/Projects/ver/hw4/map.c" 68 23 29#
                (Int32.(<=) (#"whole_program.jc" 640 41 53#
                "expl:Integer cast" (Int32.of_int (0))) !i_0_0_0))
               /\
               (#"/home/nik/Projects/ver/hw4/map.c" 68 28 46#
               (Int32.(<=) !i_0_0_0
               (select __anonstruct_Map_5_capacity_map_42 map_0))))))
              &&
              ((#"/home/nik/Projects/ver/hw4/map.c" 69 23 66#
               (if
                ((<=) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))) then
                (((<=)
                 (offset_min voidP_items_86_alloc_table
                 (select !__anonstruct_Map_5_items_map_42 map_0)) (0))
                /\
                (((>=)
                 (offset_max voidP_items_86_alloc_table
                 (select !__anonstruct_Map_5_items_map_42 map_0))
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))
                /\
                (forall __framac_tmp12 : int.
                 ((((<=) (0) __framac_tmp12) /\
                  ((<=) __framac_tmp12
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))
                  ->
                  (((<=)
                   (offset_min __anonstruct_Key_2_items_86_alloc_table
                   (select __anonstruct_Item_4_key_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp12))) (0))
                  /\
                  (((>=)
                   (offset_max __anonstruct_Key_2_items_86_alloc_table
                   (select __anonstruct_Item_4_key_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp12))) (0))
                  /\
                  (((=) true true) /\
                  (((<=)
                   (offset_min __anonstruct_Value_3_items_86_alloc_table
                   (select __anonstruct_Item_4_value_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp12))) (0))
                  /\
                  (((>=)
                   (offset_max __anonstruct_Value_3_items_86_alloc_table
                   (select __anonstruct_Item_4_value_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp12))) (0))
                  /\ ((=) true true)))))))))) else ((=) true true)))
              &&
              ((#"/home/nik/Projects/ver/hw4/map.c" 70 23 168#
               (forall j_8 : int.
                ((((<=) (0) j_8) /\ ((<) j_8 (Int32.to_int !i_0_0_0))) ->
                 (not
                 ((Int32.(=)
                  (select !__anonstruct_Key_2_a_items_86
                  (select __anonstruct_Item_4_key_2_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_8)))
                  (select __anonstruct_Key_2_a_key_43 key_0))
                 /\
                 ((Int32.(=)
                  (select !__anonstruct_Key_2_b_items_86
                  (select __anonstruct_Item_4_key_2_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_8)))
                  (select __anonstruct_Key_2_b_key_43 key_0))
                 /\
                 (Int32.(=)
                 (select !__anonstruct_Item_4_existent_items_86
                 (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_8))
                 (#"whole_program.jc" 674 41 53# "expl:Integer cast"
                 (Int32.of_int (1))))))))))
              &&
              ((#"/home/nik/Projects/ver/hw4/map.c" 72 23 214#
               (forall j_9 : int.
                ((((<=) (0) j_9) /\ ((<) j_9 (Int32.to_int !i_0_0_0))) ->
                 ((compare_items
                  (get_item_t map_0 (Int32.to_int !i_0_0_0) (at
                  !__anonstruct_Map_5_items_map_42 'Init))
                  (get_item_t map_0 (Int32.to_int !i_0_0_0)
                  !__anonstruct_Map_5_items_map_42)
                  __anonstruct_Item_4_value_2_items_86
                  __anonstruct_Item_4_value_2_items_86
                  __anonstruct_Item_4_key_2_items_86
                  __anonstruct_Item_4_key_2_items_86
                  !__anonstruct_Value_3_d_items_86 (at
                  !__anonstruct_Value_3_d_items_86 'Init)
                  !__anonstruct_Value_3_c_items_86 (at
                  !__anonstruct_Value_3_c_items_86 'Init)
                  !__anonstruct_Key_2_b_items_86 (at
                  !__anonstruct_Key_2_b_items_86 'Init)
                  !__anonstruct_Key_2_a_items_86 (at
                  !__anonstruct_Key_2_a_items_86 'Init))
                 /\
                 ((Int32.(=)
                  (select (at !__anonstruct_Item_4_existent_items_86 'Init)
                  (shift
                  (select (at !__anonstruct_Map_5_items_map_42 'Init) map_0)
                  j_9))
                  (select !__anonstruct_Item_4_existent_items_86
                  (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_9)))
                 /\
                 (Int32.(=)
                 (select !__anonstruct_Item_4_existent_items_86
                 (shift (select !__anonstruct_Map_5_items_map_42 map_0) j_9))
                 (#"whole_program.jc" 686 38 50# "expl:Integer cast"
                 (Int32.of_int (1)))))))))
              &&
              (#"/home/nik/Projects/ver/hw4/map.c" 73 23 94#
              ((=)
              (count map_0 (0)
              (Int32.to_int
              (select __anonstruct_Map_5_capacity_map_42 map_0))
              !__anonstruct_Map_5_items_map_42
              !__anonstruct_Item_4_existent_items_86)
              (count map_0 (0)
              (Int32.to_int
              (select __anonstruct_Map_5_capacity_map_42 map_0)) (at
              !__anonstruct_Map_5_items_map_42 'Init) (at
              !__anonstruct_Item_4_existent_items_86 'Init))))))))
             /\
             (#"whole_program.jc" 638 9 12206#
             ((#"whole_program.jc" 638 9 12206#
              ((#"whole_program.jc" 638 9 12206#
               ((#"whole_program.jc" 638 9 12206#
                ((#"whole_program.jc" 638 9 12206#
                 ((#"whole_program.jc" 638 9 12206#
                  ((#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                   (not_assigns __anonstruct_Key_2_items_86_alloc_table
                   __anonstruct_Key_2_items_86_alloc_table (at
                   !__anonstruct_Key_2_a_items_86 'Init)
                   !__anonstruct_Key_2_a_items_86
                   (pset_deref __anonstruct_Item_4_key_2_items_86
                   (pset_range
                   (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                   (pset_singleton map_0)) (0)
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))
                  /\
                  (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                  (not_assigns __anonstruct_Key_2_items_86_alloc_table
                  __anonstruct_Key_2_items_86_alloc_table (at
                  !__anonstruct_Key_2_b_items_86 'Init)
                  !__anonstruct_Key_2_b_items_86
                  (pset_deref __anonstruct_Item_4_key_2_items_86
                  (pset_range
                  (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                  (pset_singleton map_0)) (0)
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))))
                 /\
                 (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                 (not_assigns __anonstruct_Value_3_items_86_alloc_table
                 __anonstruct_Value_3_items_86_alloc_table (at
                 !__anonstruct_Value_3_c_items_86 'Init)
                 !__anonstruct_Value_3_c_items_86
                 (pset_deref __anonstruct_Item_4_value_2_items_86
                 (pset_range
                 (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                 (pset_singleton map_0)) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))))
                /\
                (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                (not_assigns __anonstruct_Value_3_items_86_alloc_table
                __anonstruct_Value_3_items_86_alloc_table (at
                !__anonstruct_Value_3_d_items_86 'Init)
                !__anonstruct_Value_3_d_items_86
                (pset_deref __anonstruct_Item_4_value_2_items_86
                (pset_range
                (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                (pset_singleton map_0)) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))))
               /\
               (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
               (not_assigns voidP_items_86_alloc_table
               voidP_items_86_alloc_table (at
               !__anonstruct_Item_4_existent_items_86 'Init)
               !__anonstruct_Item_4_existent_items_86
               (pset_range
               (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
               (pset_singleton map_0)) (0)
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))))))
              /\
              (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
              (not_assigns __anonstruct_Map_5_map_42_alloc_table
              __anonstruct_Map_5_map_42_alloc_table (at
              !__anonstruct_Map_5_items_map_42 'Init)
              !__anonstruct_Map_5_items_map_42 pset_empty))))
             /\
             (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
             (not_assigns __anonstruct_Map_5_map_42_alloc_table
             __anonstruct_Map_5_map_42_alloc_table (at
             !__anonstruct_Map_5_count_map_42 'Init)
             !__anonstruct_Map_5_count_map_42 (pset_singleton map_0)))))) } 
           
          begin
          any unit requires { true } ensures { true } ;
           try
            begin
            'LoopCurrent:
            begin
            'LoopCurrent:
            (if
            (#"/home/nik/Projects/ver/hw4/map.c" 77 20 37#
            (Unsafe_int32.(<)  !i_0_0_0
             (acc  __anonstruct_Map_5_capacity_map_42 map_0 ) )) then ()
            else (raise (Goto_while_0_break_0_0_exc ())));
             (if
             (#"/home/nik/Projects/ver/hw4/map.c" 78 12 41#
             (Unsafe_int32.(=) 
              (acc  !__anonstruct_Key_2_a_items_86
               (acc  __anonstruct_Item_4_key_2_items_86
                (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                 (Unsafe_int32.to_int  !i_0_0_0 ) ) ) )
              (acc  __anonstruct_Key_2_a_key_43 key_0 ) ))
             then
              (if
              (#"/home/nik/Projects/ver/hw4/map.c" 78 45 74#
              (Unsafe_int32.(=) 
               (acc  !__anonstruct_Key_2_b_items_86
                (acc  __anonstruct_Item_4_key_2_items_86
                 (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                  (Unsafe_int32.to_int  !i_0_0_0 ) ) ) )
               (acc  __anonstruct_Key_2_b_key_43 key_0 ) ))
              then
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 78 78 105#
               (Unsafe_int32.(=) 
                (acc  !__anonstruct_Item_4_existent_items_86
                 (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                  (Unsafe_int32.to_int  !i_0_0_0 ) ) )
                (#"whole_program.jc" 710 64 76# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) ))
               then
                try
                 begin
                 (let _jessie_93 =
                 (acc  __anonstruct_Value_3_c_value_44 value ) in
                 (let _jessie_94 =
                 (acc  __anonstruct_Item_4_value_2_items_86
                  (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                   (Unsafe_int32.to_int  !i_0_0_0 ) ) ) in
                 (let _jessie_95 = (0) in
                 (let _jessie_96 = _jessie_94 in
                 (upd  __anonstruct_Value_3_c_items_86 _jessie_96 _jessie_93
                  )))));
                  begin
                  (let _jessie_88 =
                  (acc  __anonstruct_Value_3_d_value_44 value ) in
                  (let _jessie_89 =
                  (acc  __anonstruct_Item_4_value_2_items_86
                   (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                    (Unsafe_int32.to_int  !i_0_0_0 ) ) ) in
                  (let _jessie_90 = (0) in
                  (let _jessie_91 = _jessie_89 in
                  (upd  __anonstruct_Value_3_d_items_86 _jessie_91 _jessie_88
                   )))));
                   begin
                   (k :=
                    (Unsafe_int32.(+)  !i_0_0_0
                     (#"whole_program.jc" 729 63 75# "expl:Integer cast"
                     (Unsafe_int32.of_int (1))) ));
                    'LoopEntry:
                    begin
                    'LoopEntry:
                    'Loop_6:
                    loop
                    invariant
                      { (((#"/home/nik/Projects/ver/hw4/map.c" 84 35 62#
                          (#"/home/nik/Projects/ver/hw4/map.c" 84 35 62#
                          ((#"/home/nik/Projects/ver/hw4/map.c" 84 35 45#
                           ((<=) (Int.(+) (Int32.to_int !i_0_0_0) (1))
                           (Int32.to_int !k)))
                          /\
                          (#"/home/nik/Projects/ver/hw4/map.c" 84 44 62#
                          (Int32.(<=) !k
                          (select __anonstruct_Map_5_capacity_map_42 map_0))))))
                         &&
                         (#"/home/nik/Projects/ver/hw4/map.c" 85 35 228#
                         (forall j_7 : int.
                          ((((<=) (Int.(+) (Int32.to_int !i_0_0_0) (1)) j_7)
                           /\ ((<) j_7 (Int32.to_int !k))) ->
                           ((compare_items
                            (get_item_t map_0 j_7 (at
                            !__anonstruct_Map_5_items_map_42 'Init))
                            (get_item_t map_0 j_7
                            !__anonstruct_Map_5_items_map_42)
                            __anonstruct_Item_4_value_2_items_86
                            __anonstruct_Item_4_value_2_items_86
                            __anonstruct_Item_4_key_2_items_86
                            __anonstruct_Item_4_key_2_items_86
                            !__anonstruct_Value_3_d_items_86 (at
                            !__anonstruct_Value_3_d_items_86 'Init)
                            !__anonstruct_Value_3_c_items_86 (at
                            !__anonstruct_Value_3_c_items_86 'Init)
                            !__anonstruct_Key_2_b_items_86 (at
                            !__anonstruct_Key_2_b_items_86 'Init)
                            !__anonstruct_Key_2_a_items_86 (at
                            !__anonstruct_Key_2_a_items_86 'Init))
                           /\
                           ((Int32.(=)
                            (select (at
                            !__anonstruct_Item_4_existent_items_86 'Init)
                            (shift
                            (select (at !__anonstruct_Map_5_items_map_42
                            'Init) map_0) j_7))
                            (select !__anonstruct_Item_4_existent_items_86
                            (shift
                            (select !__anonstruct_Map_5_items_map_42 map_0)
                            j_7)))
                           /\
                           (Int32.(=)
                           (select !__anonstruct_Item_4_existent_items_86
                           (shift
                           (select !__anonstruct_Map_5_items_map_42 map_0)
                           j_7)) (#"whole_program.jc" 766 68 80#
                           "expl:Integer cast" (Int32.of_int (1))))))))))
                        /\
                        (#"whole_program.jc" 731 61 4373#
                        ((#"whole_program.jc" 731 61 4373#
                         ((#"whole_program.jc" 731 61 4373#
                          ((#"whole_program.jc" 731 61 4373#
                           ((#"whole_program.jc" 731 61 4373#
                            ((#"whole_program.jc" 731 61 4373#
                             ((#"whole_program.jc" 530 10 334#
                              "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Key_2_items_86_alloc_table
                              __anonstruct_Key_2_items_86_alloc_table (at
                              !__anonstruct_Key_2_a_items_86 'Init)
                              !__anonstruct_Key_2_a_items_86
                              (pset_deref __anonstruct_Item_4_key_2_items_86
                              (pset_range
                              (pset_deref (at
                              !__anonstruct_Map_5_items_map_42 'Init)
                              (pset_singleton map_0)) (0)
                              (Int.(-)
                              (Int32.to_int
                              (select __anonstruct_Map_5_capacity_map_42
                              map_0)) (1))))))
                             /\
                             (#"whole_program.jc" 530 10 334#
                             "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Key_2_items_86_alloc_table
                             __anonstruct_Key_2_items_86_alloc_table (at
                             !__anonstruct_Key_2_b_items_86 'Init)
                             !__anonstruct_Key_2_b_items_86
                             (pset_deref __anonstruct_Item_4_key_2_items_86
                             (pset_range
                             (pset_deref (at !__anonstruct_Map_5_items_map_42
                             'Init) (pset_singleton map_0)) (0)
                             (Int.(-)
                             (Int32.to_int
                             (select __anonstruct_Map_5_capacity_map_42
                             map_0)) (1))))))))
                            /\
                            (#"whole_program.jc" 530 10 334#
                            "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Value_3_items_86_alloc_table
                            __anonstruct_Value_3_items_86_alloc_table (at
                            !__anonstruct_Value_3_c_items_86 'Init)
                            !__anonstruct_Value_3_c_items_86
                            (pset_deref __anonstruct_Item_4_value_2_items_86
                            (pset_range
                            (pset_deref (at !__anonstruct_Map_5_items_map_42
                            'Init) (pset_singleton map_0)) (0)
                            (Int.(-)
                            (Int32.to_int
                            (select __anonstruct_Map_5_capacity_map_42 map_0))
                            (1))))))))
                           /\
                           (#"whole_program.jc" 530 10 334#
                           "expl:Assigns clause"
                           (not_assigns
                           __anonstruct_Value_3_items_86_alloc_table
                           __anonstruct_Value_3_items_86_alloc_table (at
                           !__anonstruct_Value_3_d_items_86 'Init)
                           !__anonstruct_Value_3_d_items_86
                           (pset_deref __anonstruct_Item_4_value_2_items_86
                           (pset_range
                           (pset_deref (at !__anonstruct_Map_5_items_map_42
                           'Init) (pset_singleton map_0)) (0)
                           (Int.(-)
                           (Int32.to_int
                           (select __anonstruct_Map_5_capacity_map_42 map_0))
                           (1))))))))
                          /\
                          (#"whole_program.jc" 530 10 334#
                          "expl:Assigns clause"
                          (not_assigns voidP_items_86_alloc_table
                          voidP_items_86_alloc_table (at
                          !__anonstruct_Item_4_existent_items_86 'Init)
                          !__anonstruct_Item_4_existent_items_86
                          (pset_range
                          (pset_deref (at !__anonstruct_Map_5_items_map_42
                          'Init) (pset_singleton map_0)) (0)
                          (Int.(-)
                          (Int32.to_int
                          (select __anonstruct_Map_5_capacity_map_42 map_0))
                          (1)))))))
                         /\
                         (#"whole_program.jc" 530 10 334#
                         "expl:Assigns clause"
                         (not_assigns __anonstruct_Map_5_map_42_alloc_table
                         __anonstruct_Map_5_map_42_alloc_table (at
                         !__anonstruct_Map_5_items_map_42 'Init)
                         !__anonstruct_Map_5_items_map_42 pset_empty))))
                        /\
                        (#"whole_program.jc" 530 10 334#
                        "expl:Assigns clause"
                        (not_assigns __anonstruct_Map_5_map_42_alloc_table
                        __anonstruct_Map_5_map_42_alloc_table (at
                        !__anonstruct_Map_5_count_map_42 'Init)
                        !__anonstruct_Map_5_count_map_42
                        (pset_singleton map_0)))))) } 
                     begin
                     any unit requires { true } ensures { true } ;
                      try
                       begin
                       'LoopCurrent:
                       begin
                       'LoopCurrent:
                       (if
                       (#"/home/nik/Projects/ver/hw4/map.c" 88 23 40#
                       (Unsafe_int32.(<)  !k
                        (acc  __anonstruct_Map_5_capacity_map_42 map_0 ) ))
                       then () else (raise (Goto_while_1_break_exc ())));
                        (k :=
                         (Unsafe_int32.(+)  !k
                          (#"whole_program.jc" 783 68 80# "expl:Integer cast"
                          (Unsafe_int32.of_int (1))) )) end;
                        (raise (Loop_continue_exc ())) end with
                       Loop_continue_exc _jessie_17 -> () end end end;
                     (raise (Goto_while_1_break_exc ())) end end end end with
                 Goto_while_1_break_exc _jessie_10 ->
                 'While_1_break:
                 'While_1_break:
                 begin
                 ();
                  begin
                  (assert {
                  (#"/home/nik/Projects/ver/hw4/map.c" 91 27 55#
                  "expl:Assertion in line 91"
                  (no_mchg map_0 key_0 __anonstruct_Map_5_capacity_map_42
                  __anonstruct_Map_5_capacity_map_42
                  !__anonstruct_Map_5_items_map_42 (at
                  !__anonstruct_Map_5_items_map_42 'Init)
                  !__anonstruct_Item_4_existent_items_86 (at
                  !__anonstruct_Item_4_existent_items_86 'Init)
                  __anonstruct_Item_4_value_2_items_86
                  __anonstruct_Item_4_value_2_items_86
                  __anonstruct_Item_4_key_2_items_86
                  __anonstruct_Item_4_key_2_items_86
                  !__anonstruct_Value_3_d_items_86 (at
                  !__anonstruct_Value_3_d_items_86 'Init)
                  !__anonstruct_Value_3_c_items_86 (at
                  !__anonstruct_Value_3_c_items_86 'Init)
                  !__anonstruct_Key_2_b_items_86 (at
                  !__anonstruct_Key_2_b_items_86 'Init)
                  __anonstruct_Key_2_b_key_43 !__anonstruct_Key_2_a_items_86
                  (at !__anonstruct_Key_2_a_items_86 'Init)
                  __anonstruct_Key_2_a_key_43)) }); () end;
                  begin
                  (__retres_0 :=
                   (#"whole_program.jc" 797 88 100# "expl:Integer cast"
                   (Unsafe_int32.of_int (1))));
                   (raise (Goto_return_label_0_exc ())) end end end else ())
              else ()) else ());
             (i_0_0_0 :=
              (Unsafe_int32.(+)  !i_0_0_0
               (#"whole_program.jc" 803 64 76# "expl:Integer cast"
               (Unsafe_int32.of_int (1))) )) end;
             (raise (Loop_continue_exc ())) end with Loop_continue_exc
            _jessie_19 -> () end end end;
          (raise (Goto_while_0_break_0_0_exc ())) end end with
        Goto_while_0_break_0_0_exc _jessie_11 ->
        'While_0_break_0_0: 'While_0_break_0_0: () end;
       (if
       (#"/home/nik/Projects/ver/hw4/map.c" 97 8 35#
       (Unsafe_int32.(=)  (acc  !__anonstruct_Map_5_count_map_42 map_0 )
        (acc  __anonstruct_Map_5_capacity_map_42 map_0 ) ))
       then
        begin
        (__retres_0 :=
         (#"whole_program.jc" 809 33 45# "expl:Integer cast"
         (Unsafe_int32.of_int (0)))); (raise (Goto_return_label_0_exc ()))
        end
       else
        try
         begin
         (i_0_1 :=
          (#"whole_program.jc" 813 28 40# "expl:Integer cast"
          (Unsafe_int32.of_int (0))));
          'LoopEntry:
          begin
          'LoopEntry:
          'Loop_7:
          loop
          invariant
            { (((#"/home/nik/Projects/ver/hw4/map.c" 101 27 50#
                (#"/home/nik/Projects/ver/hw4/map.c" 101 27 50#
                ((#"/home/nik/Projects/ver/hw4/map.c" 101 27 33#
                 (Int32.(<=) (#"whole_program.jc" 817 43 55#
                 "expl:Integer cast" (Int32.of_int (0))) !i_0_1))
                /\
                (#"/home/nik/Projects/ver/hw4/map.c" 101 32 50#
                (Int32.(<=) !i_0_1
                (select __anonstruct_Map_5_capacity_map_42 map_0))))))
               &&
               (#"/home/nik/Projects/ver/hw4/map.c" 102 27 70#
               (if
                ((<=) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))) then
                (((<=)
                 (offset_min voidP_items_86_alloc_table
                 (select !__anonstruct_Map_5_items_map_42 map_0)) (0))
                /\
                (((>=)
                 (offset_max voidP_items_86_alloc_table
                 (select !__anonstruct_Map_5_items_map_42 map_0))
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))
                /\
                (forall __framac_tmp15 : int.
                 ((((<=) (0) __framac_tmp15) /\
                  ((<=) __framac_tmp15
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))
                  ->
                  (((<=)
                   (offset_min __anonstruct_Key_2_items_86_alloc_table
                   (select __anonstruct_Item_4_key_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp15))) (0))
                  /\
                  (((>=)
                   (offset_max __anonstruct_Key_2_items_86_alloc_table
                   (select __anonstruct_Item_4_key_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp15))) (0))
                  /\
                  (((=) true true) /\
                  (((<=)
                   (offset_min __anonstruct_Value_3_items_86_alloc_table
                   (select __anonstruct_Item_4_value_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp15))) (0))
                  /\
                  (((>=)
                   (offset_max __anonstruct_Value_3_items_86_alloc_table
                   (select __anonstruct_Item_4_value_2_items_86
                   (shift (select !__anonstruct_Map_5_items_map_42 map_0)
                   __framac_tmp15))) (0))
                  /\ ((=) true true)))))))))) else ((=) true true))))
              /\
              (#"whole_program.jc" 815 9 4428#
              ((#"whole_program.jc" 815 9 4428#
               ((#"whole_program.jc" 815 9 4428#
                ((#"whole_program.jc" 815 9 4428#
                 ((#"whole_program.jc" 815 9 4428#
                  ((#"whole_program.jc" 815 9 4428#
                   ((#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                    (not_assigns __anonstruct_Key_2_items_86_alloc_table
                    __anonstruct_Key_2_items_86_alloc_table (at
                    !__anonstruct_Key_2_a_items_86 'Init)
                    !__anonstruct_Key_2_a_items_86
                    (pset_deref __anonstruct_Item_4_key_2_items_86
                    (pset_range
                    (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                    (pset_singleton map_0)) (0)
                    (Int.(-)
                    (Int32.to_int
                    (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))
                   /\
                   (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                   (not_assigns __anonstruct_Key_2_items_86_alloc_table
                   __anonstruct_Key_2_items_86_alloc_table (at
                   !__anonstruct_Key_2_b_items_86 'Init)
                   !__anonstruct_Key_2_b_items_86
                   (pset_deref __anonstruct_Item_4_key_2_items_86
                   (pset_range
                   (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                   (pset_singleton map_0)) (0)
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))))
                  /\
                  (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                  (not_assigns __anonstruct_Value_3_items_86_alloc_table
                  __anonstruct_Value_3_items_86_alloc_table (at
                  !__anonstruct_Value_3_c_items_86 'Init)
                  !__anonstruct_Value_3_c_items_86
                  (pset_deref __anonstruct_Item_4_value_2_items_86
                  (pset_range
                  (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                  (pset_singleton map_0)) (0)
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))))
                 /\
                 (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                 (not_assigns __anonstruct_Value_3_items_86_alloc_table
                 __anonstruct_Value_3_items_86_alloc_table (at
                 !__anonstruct_Value_3_d_items_86 'Init)
                 !__anonstruct_Value_3_d_items_86
                 (pset_deref __anonstruct_Item_4_value_2_items_86
                 (pset_range
                 (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                 (pset_singleton map_0)) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_42 map_0)) (1))))))))
                /\
                (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
                (not_assigns voidP_items_86_alloc_table
                voidP_items_86_alloc_table (at
                !__anonstruct_Item_4_existent_items_86 'Init)
                !__anonstruct_Item_4_existent_items_86
                (pset_range
                (pset_deref (at !__anonstruct_Map_5_items_map_42 'Init)
                (pset_singleton map_0)) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_42 map_0)) (1)))))))
               /\
               (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
               (not_assigns __anonstruct_Map_5_map_42_alloc_table
               __anonstruct_Map_5_map_42_alloc_table (at
               !__anonstruct_Map_5_items_map_42 'Init)
               !__anonstruct_Map_5_items_map_42 pset_empty))))
              /\
              (#"whole_program.jc" 530 10 334# "expl:Assigns clause"
              (not_assigns __anonstruct_Map_5_map_42_alloc_table
              __anonstruct_Map_5_map_42_alloc_table (at
              !__anonstruct_Map_5_count_map_42 'Init)
              !__anonstruct_Map_5_count_map_42 (pset_singleton map_0)))))) } 
            
           begin
           any unit requires { true } ensures { true } ;
            try
             begin
             'LoopCurrent:
             begin
             'LoopCurrent:
             (if
             (#"/home/nik/Projects/ver/hw4/map.c" 105 24 41#
             (Unsafe_int32.(<)  !i_0_1
              (acc  __anonstruct_Map_5_capacity_map_42 map_0 ) )) then ()
             else (raise (Goto_while_0_break_0_1_exc ())));
              begin
              begin
              (assert {
              (#"/home/nik/Projects/ver/hw4/map.c" 106 23 49#
              "expl:Assertion in line 106"
              (Int32.(<) (select !__anonstruct_Map_5_count_map_42 map_0)
              (select __anonstruct_Map_5_capacity_map_42 map_0))) }); () end;
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 107 16 43#
               (Unsafe_int32.(=) 
                (acc  !__anonstruct_Item_4_existent_items_86
                 (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                  (Unsafe_int32.to_int  !i_0_1 ) ) )
                (#"whole_program.jc" 859 34 46# "expl:Integer cast"
                (Unsafe_int32.of_int (0))) ))
               then
                begin
                (let _jessie_127 = (acc  __anonstruct_Key_2_a_key_43 key_0 )
                in
                (let _jessie_128 =
                (acc  __anonstruct_Item_4_key_2_items_86
                 (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                  (Unsafe_int32.to_int  !i_0_1 ) ) ) in
                (let _jessie_129 = (0) in
                (let _jessie_130 = _jessie_128 in
                (upd  __anonstruct_Key_2_a_items_86 _jessie_130 _jessie_127 )))));
                 begin
                 (let _jessie_122 = (acc  __anonstruct_Key_2_b_key_43 key_0 )
                 in
                 (let _jessie_123 =
                 (acc  __anonstruct_Item_4_key_2_items_86
                  (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                   (Unsafe_int32.to_int  !i_0_1 ) ) ) in
                 (let _jessie_124 = (0) in
                 (let _jessie_125 = _jessie_123 in
                 (upd  __anonstruct_Key_2_b_items_86 _jessie_125 _jessie_122
                  )))));
                  begin
                  (let _jessie_117 =
                  (acc  __anonstruct_Value_3_c_value_44 value ) in
                  (let _jessie_118 =
                  (acc  __anonstruct_Item_4_value_2_items_86
                   (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                    (Unsafe_int32.to_int  !i_0_1 ) ) ) in
                  (let _jessie_119 = (0) in
                  (let _jessie_120 = _jessie_118 in
                  (upd  __anonstruct_Value_3_c_items_86 _jessie_120
                   _jessie_117 )))));
                   begin
                   (let _jessie_112 =
                   (acc  __anonstruct_Value_3_d_value_44 value ) in
                   (let _jessie_113 =
                   (acc  __anonstruct_Item_4_value_2_items_86
                    (shift_  (acc  !__anonstruct_Map_5_items_map_42 map_0 )
                     (Unsafe_int32.to_int  !i_0_1 ) ) ) in
                   (let _jessie_114 = (0) in
                   (let _jessie_115 = _jessie_113 in
                   (upd  __anonstruct_Value_3_d_items_86 _jessie_115
                    _jessie_112 )))));
                    begin
                    (let _jessie_107 =
                    (#"whole_program.jc" 873 74 86# "expl:Integer cast"
                    (Unsafe_int32.of_int (1))) in
                    (let _jessie_108 =
                    (acc  !__anonstruct_Map_5_items_map_42 map_0 ) in
                    (let _jessie_109 = (Unsafe_int32.to_int  !i_0_1 ) in
                    (let _jessie_110 = (shift_  _jessie_108 _jessie_109 ) in
                    (upd  __anonstruct_Item_4_existent_items_86 _jessie_110
                     _jessie_107 )))));
                     begin
                     (let _jessie_102 =
                     (Unsafe_int32.(+) 
                      (acc  !__anonstruct_Map_5_count_map_42 map_0 )
                      (#"whole_program.jc" 876 68 80# "expl:Integer cast"
                      (Unsafe_int32.of_int (1))) ) in
                     (let _jessie_103 = map_0 in
                     (let _jessie_104 = (0) in
                     (let _jessie_105 = _jessie_103 in
                     (upd  __anonstruct_Map_5_count_map_42 _jessie_105
                      _jessie_102 )))));
                      begin
                      (__retres_0 :=
                       (#"whole_program.jc" 878 48 60# "expl:Integer cast"
                       (Unsafe_int32.of_int (1))));
                       (raise (Goto_return_label_0_exc ())) end end end end
                  end end end else ()) end;
              (i_0_1 :=
               (Unsafe_int32.(+)  !i_0_1
                (#"whole_program.jc" 884 64 76# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) )) end;
              (raise (Loop_continue_exc ())) end with Loop_continue_exc
             _jessie_21 -> () end end end;
           (raise (Goto_while_0_break_0_1_exc ())) end end with
         Goto_while_0_break_0_1_exc _jessie_12 ->
         'While_0_break_0_1: 'While_0_break_0_1: () end);
       begin
       (assert {
       (#"/home/nik/Projects/ver/hw4/map.c" 118 0 1#
       "expl:Assertion in line 118" ((=) false true)) }); () end;
       (__retres_0 :=
        (#"whole_program.jc" 894 30 42# "expl:Integer cast"
        (Unsafe_int32.of_int (0)))) end end;
      (raise (Goto_return_label_0_exc ())) end with Goto_return_label_0_exc
     _jessie_15 ->
     'Return_label_0:
     'Return_label_0: begin (return := !__retres_0); (raise Return) end end))));
     absurd  end with Return -> !return end)
  
end

module Function_getElement_safety
#"/home/nik/Projects/ver/hw4/map.c" 145 4 48# "expl:getElement, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Tag_table_type 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use import Logic_compare_values 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import core.Eq_pointer_safe 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  let getElement #"/home/nik/Projects/ver/hw4/map.c" 145 4 48#
  "expl:Function getElement, safety" =
  fun
   (map_1_0 : (pointer __anonstruct_Map_5)) (key_0_0 : (pointer
   __anonstruct_Key_2)) (value_0 : (pointer __anonstruct_Value_3))
   (__anonstruct_Value_3_c_value_0_47 : ref (memory __anonstruct_Value_3
   Int32.t)) (__anonstruct_Value_3_d_value_0_47 : ref (memory
   __anonstruct_Value_3 Int32.t)) (__anonstruct_Key_2_key_0_46_alloc_table :
   (alloc_table __anonstruct_Key_2))
   (__anonstruct_Key_2_get_item_t_101_alloc_table : (alloc_table
   __anonstruct_Key_2)) (__anonstruct_Map_5_map_1_45_alloc_table :
   (alloc_table __anonstruct_Map_5))
   (__anonstruct_Value_3_value_0_47_alloc_table : (alloc_table
   __anonstruct_Value_3)) (__anonstruct_Value_3_get_item_t_101_alloc_table :
   (alloc_table __anonstruct_Value_3)) (voidP_get_item_t_101_alloc_table :
   (alloc_table voidP)) (voidP_get_item_t_101_tag_table : (tag_table voidP))
   (__anonstruct_Key_2_a_key_0_46 : (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Key_2_a_get_item_t_101 : (memory __anonstruct_Key_2
   Int32.t)) (__anonstruct_Key_2_b_key_0_46 : (memory __anonstruct_Key_2
   Int32.t)) (__anonstruct_Key_2_b_get_item_t_101 : (memory
   __anonstruct_Key_2 Int32.t)) (__anonstruct_Value_3_c_get_item_t_101 :
   (memory __anonstruct_Value_3 Int32.t))
   (__anonstruct_Value_3_d_get_item_t_101 : (memory __anonstruct_Value_3
   Int32.t)) (__anonstruct_Item_4_key_2_get_item_t_101 : (memory voidP
   (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2_get_item_t_101
   : (memory voidP (pointer __anonstruct_Value_3)))
   (__anonstruct_Item_4_existent_get_item_t_101 : (memory voidP Int32.t))
   (__anonstruct_Map_5_items_map_1_45 : (memory __anonstruct_Map_5 (pointer
   voidP))) (__anonstruct_Map_5_capacity_map_1_45 : (memory
   __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_count_map_1_45 : (memory
   __anonstruct_Map_5 Int32.t)) 
   requires {
   (#"whole_program.jc" 902 12 793#
   ((#"/home/nik/Projects/ver/hw4/map.h" 348 13 30#
    (is_valid_map map_1_0 voidP_get_item_t_101_alloc_table
    __anonstruct_Value_3_get_item_t_101_alloc_table
    __anonstruct_Key_2_get_item_t_101_alloc_table
    __anonstruct_Map_5_count_map_1_45 __anonstruct_Map_5_capacity_map_1_45
    __anonstruct_Map_5_items_map_1_45
    __anonstruct_Item_4_existent_get_item_t_101
    __anonstruct_Item_4_value_2_get_item_t_101
    __anonstruct_Item_4_key_2_get_item_t_101
    __anonstruct_Key_2_b_get_item_t_101 __anonstruct_Key_2_a_get_item_t_101))
   /\
   (#"whole_program.jc" 902 12 793#
   ((#"/home/nik/Projects/ver/hw4/map.h" 349 13 24#
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((<=) (offset_min __anonstruct_Map_5_map_1_45_alloc_table map_1_0) (0)))
    /\
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((>=) (offset_max __anonstruct_Map_5_map_1_45_alloc_table map_1_0) (0)))
    /\ (#"whole_program.jc" 902 12 793# ((=) true true)))))))
   /\
   (#"whole_program.jc" 902 12 793#
   ((#"/home/nik/Projects/ver/hw4/map.h" 350 13 24#
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((<=) (offset_min __anonstruct_Key_2_key_0_46_alloc_table key_0_0) (0)))
    /\
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((>=) (offset_max __anonstruct_Key_2_key_0_46_alloc_table key_0_0) (0)))
    /\ (#"whole_program.jc" 902 12 793# ((=) true true)))))))
   /\
   (#"/home/nik/Projects/ver/hw4/map.h" 351 13 26#
   (#"whole_program.jc" 902 12 793#
   ((#"whole_program.jc" 902 12 793#
    ((<=) (offset_min __anonstruct_Value_3_value_0_47_alloc_table value_0)
    (0)))
   /\
   (#"whole_program.jc" 902 12 793#
   ((#"whole_program.jc" 902 12 793#
    ((>=) (offset_max __anonstruct_Value_3_value_0_47_alloc_table value_0)
    (0)))
   /\ (#"whole_program.jc" 902 12 793# ((=) true true))))))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let i_0_2 = ref (Safe_int32.any_  () ) in
    (let __retres_1 = ref (Safe_int32.any_  () ) in
    try
     begin
     try
      begin
      try
       begin
       (if
       (#"/home/nik/Projects/ver/hw4/map.c" 146 8 59#
       (#"/home/nik/Projects/ver/hw4/map.c" 146 8 59#
       (eq_pointer  __anonstruct_Map_5_map_1_45_alloc_table
        __anonstruct_Map_5_map_1_45_alloc_table map_1_0 (null  ) )))
       then (raise (Goto__LOR_0_2_exc ()))
       else
        (if
        (#"/home/nik/Projects/ver/hw4/map.c" 146 22 102#
        (#"/home/nik/Projects/ver/hw4/map.c" 146 22 102#
        (eq_pointer  voidP_get_item_t_101_alloc_table
         voidP_get_item_t_101_alloc_table
         (#"/home/nik/Projects/ver/hw4/map.c" 146 22 32#
         "expl:Pointer dereference"
         (acc  __anonstruct_Map_5_map_1_45_alloc_table
          __anonstruct_Map_5_items_map_1_45 map_1_0 )) (null  ) )))
        then (raise (Goto__LOR_0_2_exc ()))
        else
         (if
         (#"/home/nik/Projects/ver/hw4/map.c" 146 44 132#
         (#"/home/nik/Projects/ver/hw4/map.c" 146 44 132#
         (eq_pointer  __anonstruct_Key_2_key_0_46_alloc_table
          __anonstruct_Key_2_key_0_46_alloc_table key_0_0 (null  ) )))
         then (raise (Goto__LOR_0_2_exc ())) else ())));
        (raise (Goto__LOR_0_3_exc ())); (raise (Goto__LOR_0_2_exc ())) end
       with Goto__LOR_0_2_exc _jessie_23 ->
       'U__LOR_0_2:
       'U__LOR_0_2:
       'U__LOR_0_2:
       'U__LOR_0_2:
       begin
       (__retres_1 :=
        (let _jessie_205 =
        (#"whole_program.jc" 986 45 58# "expl:Integer cast"
        (Safe_int32.of_int  (Int.(-_)  (1) ) )) in
        begin
        (assert {
        (#"/home/nik/Projects/ver/hw4/map.c" 147 8 18#
        "expl:Pointer index bounds" true) }); _jessie_205 end));
        (raise (Goto_return_label_1_exc ())) end end;
       (raise (Goto__LOR_0_3_exc ())) end with Goto__LOR_0_3_exc _jessie_24
      ->
      'U__LOR_0_3:
      'U__LOR_0_3:
      begin
      ();
       'U__Pre1:
       begin
       'U__Pre1:
       begin
       any unit
       requires { true } reads { map_1_0 }
       ensures {
         (#"/home/nik/Projects/ver/hw4/map.c" 151 15 33#
         (Int32.(>=) (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)
         (#"whole_program.jc" 994 54 66# "expl:Integer cast" (Int32.of_int
         (0))))) } ; () end;
        try
         begin
         (i_0_2 :=
          (let _jessie_219 =
          (#"whole_program.jc" 998 28 40# "expl:Integer cast"
          (Safe_int32.of_int (0))) in
          begin
          (assert {
          (#"/home/nik/Projects/ver/hw4/map.c" 163 13 14#
          "expl:Pointer index bounds" true) }); _jessie_219 end));
          'LoopEntry:
          begin
          'LoopEntry:
          'Loop_12:
          loop
          invariant { (#"whole_program.jc" 1000 9 8061# true) }
            variant { (#"/home/nik/Projects/ver/hw4/map.c" 160 21 38#
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_5_capacity_map_1_45 map_1_0))
              (Int32.to_int !i_0_2))) }
           begin
           any unit
           requires { true } reads { __anonstruct_Value_3_c_value_0_47,
           __anonstruct_Value_3_d_value_0_47, key_0_0, map_1_0, value_0 }
           ensures {
             ((#"/home/nik/Projects/ver/hw4/map.c" 157 23 182#
              (forall j_10 : int.
               ((((<=) (0) j_10) /\ ((<) j_10 (Int32.to_int !i_0_2))) ->
                (not
                ((Int32.(=)
                 (select __anonstruct_Key_2_a_get_item_t_101
                 (select __anonstruct_Item_4_key_2_get_item_t_101
                 (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                 j_10))) (select __anonstruct_Key_2_a_key_0_46 key_0_0))
                /\
                ((Int32.(=)
                 (select __anonstruct_Key_2_b_get_item_t_101
                 (select __anonstruct_Item_4_key_2_get_item_t_101
                 (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                 j_10))) (select __anonstruct_Key_2_b_key_0_46 key_0_0))
                /\
                (Int32.(=)
                (select __anonstruct_Item_4_existent_get_item_t_101
                (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                j_10)) (#"whole_program.jc" 1055 42 54# "expl:Integer cast"
                (Int32.of_int (1))))))))))
             /\
             ((#"/home/nik/Projects/ver/hw4/map.c" 156 23 63#
              (compare_values value_0 value_0
              !__anonstruct_Value_3_d_value_0_47 (at
              !__anonstruct_Value_3_d_value_0_47 'U__Pre1)
              !__anonstruct_Value_3_c_value_0_47 (at
              !__anonstruct_Value_3_c_value_0_47 'U__Pre1)))
             /\
             ((#"/home/nik/Projects/ver/hw4/map.c" 155 23 66#
              (if
               ((<=) (0)
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)) (1)))
               then
               (((<=)
                (offset_min voidP_get_item_t_101_alloc_table
                (select __anonstruct_Map_5_items_map_1_45 map_1_0)) (0))
               /\
               (((>=)
                (offset_max voidP_get_item_t_101_alloc_table
                (select __anonstruct_Map_5_items_map_1_45 map_1_0))
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)) (1)))
               /\
               (forall __framac_tmp21 : int.
                ((((<=) (0) __framac_tmp21) /\
                 ((<=) __framac_tmp21
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)) (1))))
                 ->
                 (((<=)
                  (offset_min __anonstruct_Key_2_get_item_t_101_alloc_table
                  (select __anonstruct_Item_4_key_2_get_item_t_101
                  (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                  __framac_tmp21))) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Key_2_get_item_t_101_alloc_table
                  (select __anonstruct_Item_4_key_2_get_item_t_101
                  (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                  __framac_tmp21))) (0))
                 /\
                 (((=) true true) /\
                 (((<=)
                  (offset_min __anonstruct_Value_3_get_item_t_101_alloc_table
                  (select __anonstruct_Item_4_value_2_get_item_t_101
                  (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                  __framac_tmp21))) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Value_3_get_item_t_101_alloc_table
                  (select __anonstruct_Item_4_value_2_get_item_t_101
                  (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                  __framac_tmp21))) (0))
                 /\ ((=) true true)))))))))) else ((=) true true)))
             /\
             (#"/home/nik/Projects/ver/hw4/map.c" 154 23 46#
             (#"/home/nik/Projects/ver/hw4/map.c" 154 23 46#
             ((#"/home/nik/Projects/ver/hw4/map.c" 154 23 29#
              (Int32.(<=) (#"whole_program.jc" 1002 43 55#
              "expl:Integer cast" (Int32.of_int (0))) !i_0_2))
             /\
             (#"/home/nik/Projects/ver/hw4/map.c" 154 28 46#
             (Int32.(<=) !i_0_2
             (select __anonstruct_Map_5_capacity_map_1_45 map_1_0))))))))) } ;
            try
             begin
             'LoopCurrent:
             begin
             'LoopCurrent:
             (if
             (#"/home/nik/Projects/ver/hw4/map.c" 163 20 37#
             (Safe_int32.(<)  !i_0_2
              (#"/home/nik/Projects/ver/hw4/map.c" 163 24 37#
              "expl:Pointer dereference"
              (acc  __anonstruct_Map_5_map_1_45_alloc_table
               __anonstruct_Map_5_capacity_map_1_45 map_1_0 )) )) then ()
             else (raise (Goto_while_0_break_0_2_exc ())));
              (if
              (#"/home/nik/Projects/ver/hw4/map.c" 164 12 41#
              (Safe_int32.(=) 
               (#"/home/nik/Projects/ver/hw4/map.c" 164 12 31#
               "expl:Pointer dereference"
               (acc_safe  __anonstruct_Key_2_a_get_item_t_101
                (#"/home/nik/Projects/ver/hw4/map.c" 164 12 31#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_get_item_t_101_alloc_table
                 __anonstruct_Item_4_key_2_get_item_t_101
                 (#"/home/nik/Projects/ver/hw4/map.c" 164 12 22#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_5_map_1_45_alloc_table
                  __anonstruct_Map_5_items_map_1_45 map_1_0 ))
                 (Safe_int32.to_int  !i_0_2 ) )) ))
               (#"/home/nik/Projects/ver/hw4/map.c" 164 35 41#
               "expl:Pointer dereference"
               (acc  __anonstruct_Key_2_key_0_46_alloc_table
                __anonstruct_Key_2_a_key_0_46 key_0_0 )) ))
              then
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 164 45 74#
               (Safe_int32.(=) 
                (#"/home/nik/Projects/ver/hw4/map.c" 164 45 64#
                "expl:Pointer dereference"
                (acc_safe  __anonstruct_Key_2_b_get_item_t_101
                 (#"/home/nik/Projects/ver/hw4/map.c" 164 45 64#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_get_item_t_101_alloc_table
                  __anonstruct_Item_4_key_2_get_item_t_101
                  (#"/home/nik/Projects/ver/hw4/map.c" 164 45 55#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_5_map_1_45_alloc_table
                   __anonstruct_Map_5_items_map_1_45 map_1_0 ))
                  (Safe_int32.to_int  !i_0_2 ) )) ))
                (#"/home/nik/Projects/ver/hw4/map.c" 164 68 74#
                "expl:Pointer dereference"
                (acc  __anonstruct_Key_2_key_0_46_alloc_table
                 __anonstruct_Key_2_b_key_0_46 key_0_0 )) ))
               then
                (if
                (#"/home/nik/Projects/ver/hw4/map.c" 164 78 105#
                (Safe_int32.(=) 
                 (#"/home/nik/Projects/ver/hw4/map.c" 164 78 100#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_get_item_t_101_alloc_table
                  __anonstruct_Item_4_existent_get_item_t_101
                  (#"/home/nik/Projects/ver/hw4/map.c" 164 78 88#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_5_map_1_45_alloc_table
                   __anonstruct_Map_5_items_map_1_45 map_1_0 ))
                  (Safe_int32.to_int  !i_0_2 ) ))
                 (#"whole_program.jc" 1077 66 78# "expl:Integer cast"
                 (Safe_int32.of_int (1))) ))
                then
                 (if
                 (#"/home/nik/Projects/ver/hw4/map.c" 166 16 79#
                 (#"/home/nik/Projects/ver/hw4/map.c" 166 16 79#
                 (neq_pointer  __anonstruct_Value_3_value_0_47_alloc_table
                  __anonstruct_Value_3_value_0_47_alloc_table value_0
                  (null  ) )))
                 then
                  begin
                  (let _jessie_214 =
                  (let _jessie_213 =
                  (#"/home/nik/Projects/ver/hw4/map.c" 167 27 48#
                  "expl:Pointer dereference"
                  (acc_safe  __anonstruct_Value_3_c_get_item_t_101
                   (#"/home/nik/Projects/ver/hw4/map.c" 167 27 48#
                   "expl:Pointer dereference"
                   (acc_offset_typesafe  voidP_get_item_t_101_alloc_table
                    __anonstruct_Item_4_value_2_get_item_t_101
                    (#"/home/nik/Projects/ver/hw4/map.c" 167 27 37#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_5_map_1_45_alloc_table
                     __anonstruct_Map_5_items_map_1_45 map_1_0 ))
                    (Safe_int32.to_int  !i_0_2 ) )) )) in
                  begin
                  (assert {
                  (#"/home/nik/Projects/ver/hw4/map.c" 167 16 48#
                  "expl:Pointer index bounds" true) }); _jessie_213 end) in
                  (let _jessie_215 = value_0 in
                  (let _jessie_216 = (0) in
                  (let _jessie_217 = _jessie_215 in
                  (#"/home/nik/Projects/ver/hw4/map.c" 167 16 48#
                  "expl:Pointer dereference"
                  (upd  __anonstruct_Value_3_value_0_47_alloc_table
                   __anonstruct_Value_3_c_value_0_47 _jessie_215 _jessie_214
                   ))))));
                   begin
                   (let _jessie_209 =
                   (let _jessie_208 =
                   (#"/home/nik/Projects/ver/hw4/map.c" 168 27 48#
                   "expl:Pointer dereference"
                   (acc_safe  __anonstruct_Value_3_d_get_item_t_101
                    (#"/home/nik/Projects/ver/hw4/map.c" 168 27 48#
                    "expl:Pointer dereference"
                    (acc_offset_typesafe  voidP_get_item_t_101_alloc_table
                     __anonstruct_Item_4_value_2_get_item_t_101
                     (#"/home/nik/Projects/ver/hw4/map.c" 168 27 37#
                     "expl:Pointer dereference"
                     (acc  __anonstruct_Map_5_map_1_45_alloc_table
                      __anonstruct_Map_5_items_map_1_45 map_1_0 ))
                     (Safe_int32.to_int  !i_0_2 ) )) )) in
                   begin
                   (assert {
                   (#"/home/nik/Projects/ver/hw4/map.c" 168 16 48#
                   "expl:Pointer index bounds" true) }); _jessie_208 end) in
                   (let _jessie_210 = value_0 in
                   (let _jessie_211 = (0) in
                   (let _jessie_212 = _jessie_210 in
                   (#"/home/nik/Projects/ver/hw4/map.c" 168 16 48#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Value_3_value_0_47_alloc_table
                    __anonstruct_Value_3_d_value_0_47 _jessie_210 _jessie_209
                    ))))));
                    begin
                    (__retres_1 :=
                     (let _jessie_207 =
                     (#"whole_program.jc" 1096 90 102# "expl:Integer cast"
                     (Safe_int32.of_int (1))) in
                     begin
                     (assert {
                     (#"/home/nik/Projects/ver/hw4/map.c" 170 16 25#
                     "expl:Pointer index bounds" true) }); _jessie_207 end));
                     (raise (Goto_return_label_1_exc ())) end end end
                 else
                  begin
                  (__retres_1 :=
                   (let _jessie_206 =
                   (#"whole_program.jc" 1101 87 100# "expl:Integer cast"
                   (Safe_int32.of_int  (Int.(-_)  (1) ) )) in
                   begin
                   (assert {
                   (#"/home/nik/Projects/ver/hw4/map.c" 172 16 26#
                   "expl:Pointer index bounds" true) }); _jessie_206 end));
                   (raise (Goto_return_label_1_exc ())) end) else ())
               else ()) else ());
              (i_0_2 :=
               (let _jessie_218 =
               (Safe_int32.(+)  !i_0_2
                (#"whole_program.jc" 1106 64 76# "expl:Integer cast"
                (Safe_int32.of_int (1))) ) in
               begin
               (assert {
               (#"/home/nik/Projects/ver/hw4/map.c" 163 39 42#
               "expl:Pointer index bounds" true) }); _jessie_218 end)) end;
              (raise (Loop_continue_exc ())) end with Loop_continue_exc
             _jessie_27 -> () end end end;
           (raise (Goto_while_0_break_0_2_exc ())) end end with
         Goto_while_0_break_0_2_exc _jessie_22 ->
         'While_0_break_0_2: 'While_0_break_0_2: () end;
        (__retres_1 :=
         (let _jessie_220 =
         (#"whole_program.jc" 1111 30 42# "expl:Integer cast"
         (Safe_int32.of_int (0))) in
         begin
         (assert {
         (#"/home/nik/Projects/ver/hw4/map.c" 177 4 13#
         "expl:Pointer index bounds" true) }); _jessie_220 end)) end end end;
      (raise (Goto_return_label_1_exc ())) end with Goto_return_label_1_exc
     _jessie_25 ->
     'Return_label_1:
     'Return_label_1:
     begin
     (return :=
      (let _jessie_221 = !__retres_1 in
      begin
      (assert {
      (#"whole_program.jc" 1113 7 24# "expl:Pointer index bounds" true) });
       _jessie_221 end)); (raise Return) end end)); absurd  end with Return
    -> !return end)
  
end

theory Logic_same_count

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate same_count (map_20 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_20_34_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_count_map_20_34_at_L1 : (memory
  __anonstruct_Map_5 Int32.t))
  =
     (Int32.(=) (select __anonstruct_Map_5_count_map_20_34_at_L1 map_20)
     (select __anonstruct_Map_5_count_map_20_34_at_L2 map_20))
  
  
end

theory Logic_same_items

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate same_items (map_22 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_22_36_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_22_36_at_L2 : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Map_5_items_map_22_36_at_L1 : (memory __anonstruct_Map_5
  (pointer voidP))) (__anonstruct_Item_4_existent_get_item_t_68_at_L2 :
  (memory voidP Int32.t)) (__anonstruct_Item_4_existent_get_item_t_68_at_L1 :
  (memory voidP Int32.t)) (__anonstruct_Item_4_value_2_get_item_t_68_at_L2 :
  (memory voidP (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_value_2_get_item_t_68_at_L1 : (memory voidP (pointer
  __anonstruct_Value_3))) (__anonstruct_Item_4_key_2_get_item_t_68_at_L2 :
  (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_key_2_get_item_t_68_at_L1 : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Value_3_d_get_item_t_68_at_L2 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_get_item_t_68_at_L1
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_get_item_t_68_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_get_item_t_68_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Key_2_b_get_item_t_68_at_L2 :
  (memory __anonstruct_Key_2 Int32.t))
  (__anonstruct_Key_2_b_get_item_t_68_at_L1 : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_68_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_get_item_t_68_at_L1 :
  (memory __anonstruct_Key_2 Int32.t))
  =
     (forall i_6 : int.
      ((((<=) (0) i_6) /\
       (((<) i_6
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_22_36_at_L2 map_22)))
       /\
       ((item_exists_t
        (get_item_t map_22 i_6 __anonstruct_Map_5_items_map_22_36_at_L1)
        __anonstruct_Item_4_existent_get_item_t_68_at_L1)
       /\
       (item_exists_t
       (get_item_t map_22 i_6 __anonstruct_Map_5_items_map_22_36_at_L2)
       __anonstruct_Item_4_existent_get_item_t_68_at_L2)))) ->
       (compare_items
       (shift (select __anonstruct_Map_5_items_map_22_36_at_L1 map_22) i_6)
       (shift (select __anonstruct_Map_5_items_map_22_36_at_L2 map_22) i_6)
       __anonstruct_Item_4_value_2_get_item_t_68_at_L2
       __anonstruct_Item_4_value_2_get_item_t_68_at_L1
       __anonstruct_Item_4_key_2_get_item_t_68_at_L2
       __anonstruct_Item_4_key_2_get_item_t_68_at_L1
       __anonstruct_Value_3_d_get_item_t_68_at_L2
       __anonstruct_Value_3_d_get_item_t_68_at_L1
       __anonstruct_Value_3_c_get_item_t_68_at_L2
       __anonstruct_Value_3_c_get_item_t_68_at_L1
       __anonstruct_Key_2_b_get_item_t_68_at_L2
       __anonstruct_Key_2_b_get_item_t_68_at_L1
       __anonstruct_Key_2_a_get_item_t_68_at_L2
       __anonstruct_Key_2_a_get_item_t_68_at_L1)))
  
  
end

module Function_getElement_behaviors
#"/home/nik/Projects/ver/hw4/map.c" 145 4 48# "expl:getElement, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_items 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let getElement_ensures_default
  #"/home/nik/Projects/ver/hw4/map.c" 145 4 48#
  "expl:Function getElement, default behavior" =
  fun
   (map_1_0 : (pointer __anonstruct_Map_5)) (key_0_0 : (pointer
   __anonstruct_Key_2)) (value_0 : (pointer __anonstruct_Value_3))
   (__anonstruct_Value_3_c_value_0_47 : ref (memory __anonstruct_Value_3
   Int32.t)) (__anonstruct_Value_3_d_value_0_47 : ref (memory
   __anonstruct_Value_3 Int32.t)) (__anonstruct_Key_2_key_0_46_alloc_table :
   (alloc_table __anonstruct_Key_2))
   (__anonstruct_Key_2_get_item_t_101_alloc_table : (alloc_table
   __anonstruct_Key_2)) (__anonstruct_Map_5_map_1_45_alloc_table :
   (alloc_table __anonstruct_Map_5))
   (__anonstruct_Value_3_value_0_47_alloc_table : (alloc_table
   __anonstruct_Value_3)) (__anonstruct_Value_3_get_item_t_101_alloc_table :
   (alloc_table __anonstruct_Value_3)) (voidP_get_item_t_101_alloc_table :
   (alloc_table voidP)) (voidP_get_item_t_101_tag_table : (tag_table voidP))
   (__anonstruct_Key_2_a_key_0_46 : (memory __anonstruct_Key_2 Int32.t))
   (__anonstruct_Key_2_a_get_item_t_101 : (memory __anonstruct_Key_2
   Int32.t)) (__anonstruct_Key_2_b_key_0_46 : (memory __anonstruct_Key_2
   Int32.t)) (__anonstruct_Key_2_b_get_item_t_101 : (memory
   __anonstruct_Key_2 Int32.t)) (__anonstruct_Value_3_c_get_item_t_101 :
   (memory __anonstruct_Value_3 Int32.t))
   (__anonstruct_Value_3_d_get_item_t_101 : (memory __anonstruct_Value_3
   Int32.t)) (__anonstruct_Item_4_key_2_get_item_t_101 : (memory voidP
   (pointer __anonstruct_Key_2))) (__anonstruct_Item_4_value_2_get_item_t_101
   : (memory voidP (pointer __anonstruct_Value_3)))
   (__anonstruct_Item_4_existent_get_item_t_101 : (memory voidP Int32.t))
   (__anonstruct_Map_5_items_map_1_45 : (memory __anonstruct_Map_5 (pointer
   voidP))) (__anonstruct_Map_5_capacity_map_1_45 : (memory
   __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_count_map_1_45 : (memory
   __anonstruct_Map_5 Int32.t)) 
   requires {
   (#"whole_program.jc" 902 12 793#
   ((#"/home/nik/Projects/ver/hw4/map.h" 348 13 30#
    (is_valid_map map_1_0 voidP_get_item_t_101_alloc_table
    __anonstruct_Value_3_get_item_t_101_alloc_table
    __anonstruct_Key_2_get_item_t_101_alloc_table
    __anonstruct_Map_5_count_map_1_45 __anonstruct_Map_5_capacity_map_1_45
    __anonstruct_Map_5_items_map_1_45
    __anonstruct_Item_4_existent_get_item_t_101
    __anonstruct_Item_4_value_2_get_item_t_101
    __anonstruct_Item_4_key_2_get_item_t_101
    __anonstruct_Key_2_b_get_item_t_101 __anonstruct_Key_2_a_get_item_t_101))
   /\
   (#"whole_program.jc" 902 12 793#
   ((#"/home/nik/Projects/ver/hw4/map.h" 349 13 24#
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((<=) (offset_min __anonstruct_Map_5_map_1_45_alloc_table map_1_0) (0)))
    /\
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((>=) (offset_max __anonstruct_Map_5_map_1_45_alloc_table map_1_0) (0)))
    /\ (#"whole_program.jc" 902 12 793# ((=) true true)))))))
   /\
   (#"whole_program.jc" 902 12 793#
   ((#"/home/nik/Projects/ver/hw4/map.h" 350 13 24#
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((<=) (offset_min __anonstruct_Key_2_key_0_46_alloc_table key_0_0) (0)))
    /\
    (#"whole_program.jc" 902 12 793#
    ((#"whole_program.jc" 902 12 793#
     ((>=) (offset_max __anonstruct_Key_2_key_0_46_alloc_table key_0_0) (0)))
    /\ (#"whole_program.jc" 902 12 793# ((=) true true)))))))
   /\
   (#"/home/nik/Projects/ver/hw4/map.h" 351 13 26#
   (#"whole_program.jc" 902 12 793#
   ((#"whole_program.jc" 902 12 793#
    ((<=) (offset_min __anonstruct_Value_3_value_0_47_alloc_table value_0)
    (0)))
   /\
   (#"whole_program.jc" 902 12 793#
   ((#"whole_program.jc" 902 12 793#
    ((>=) (offset_max __anonstruct_Value_3_value_0_47_alloc_table value_0)
    (0)))
   /\ (#"whole_program.jc" 902 12 793# ((=) true true))))))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"whole_program.jc" 916 10 32# "expl:Assigns clause"
       (not_assigns __anonstruct_Value_3_value_0_47_alloc_table
       __anonstruct_Value_3_value_0_47_alloc_table (old
       !__anonstruct_Value_3_c_value_0_47) !__anonstruct_Value_3_c_value_0_47
       (pset_singleton value_0)))
      /\
      (#"whole_program.jc" 916 10 32# "expl:Assigns clause"
      (not_assigns __anonstruct_Value_3_value_0_47_alloc_table
      __anonstruct_Value_3_value_0_47_alloc_table (old
      !__anonstruct_Value_3_d_value_0_47) !__anonstruct_Value_3_d_value_0_47
      (pset_singleton value_0))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      (is_valid_map map_1_0 voidP_get_item_t_101_alloc_table
      __anonstruct_Value_3_get_item_t_101_alloc_table
      __anonstruct_Key_2_get_item_t_101_alloc_table
      __anonstruct_Map_5_count_map_1_45 __anonstruct_Map_5_capacity_map_1_45
      __anonstruct_Map_5_items_map_1_45
      __anonstruct_Item_4_existent_get_item_t_101
      __anonstruct_Item_4_value_2_get_item_t_101
      __anonstruct_Item_4_key_2_get_item_t_101
      __anonstruct_Key_2_b_get_item_t_101
      __anonstruct_Key_2_a_get_item_t_101))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 358 12 41# "expl:Ensures clause"
      (same_capacity map_1_0 __anonstruct_Map_5_capacity_map_1_45
      __anonstruct_Map_5_capacity_map_1_45))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 359 12 38# "expl:Ensures clause"
      (same_count map_1_0 __anonstruct_Map_5_count_map_1_45
      __anonstruct_Map_5_count_map_1_45))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 360 12 38# "expl:Ensures clause"
      (same_items map_1_0 __anonstruct_Map_5_capacity_map_1_45
      __anonstruct_Map_5_items_map_1_45 __anonstruct_Map_5_items_map_1_45
      __anonstruct_Item_4_existent_get_item_t_101
      __anonstruct_Item_4_existent_get_item_t_101
      __anonstruct_Item_4_value_2_get_item_t_101
      __anonstruct_Item_4_value_2_get_item_t_101
      __anonstruct_Item_4_key_2_get_item_t_101
      __anonstruct_Item_4_key_2_get_item_t_101
      __anonstruct_Value_3_d_get_item_t_101
      __anonstruct_Value_3_d_get_item_t_101
      __anonstruct_Value_3_c_get_item_t_101
      __anonstruct_Value_3_c_get_item_t_101
      __anonstruct_Key_2_b_get_item_t_101 __anonstruct_Key_2_b_get_item_t_101
      __anonstruct_Key_2_a_get_item_t_101
      __anonstruct_Key_2_a_get_item_t_101))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 361 12 45# "expl:Ensures clause"
      (compare_keys key_0_0 key_0_0 __anonstruct_Key_2_b_key_0_46
      __anonstruct_Key_2_b_key_0_46 __anonstruct_Key_2_a_key_0_46
      __anonstruct_Key_2_a_key_0_46))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 362 12 23# "expl:Ensures clause"
      (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
       ((<=) (offset_min __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
       (0)))
      /\
      (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
       ((>=) (offset_max __anonstruct_Key_2_key_0_46_alloc_table key_0_0)
       (0)))
      /\
      (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      ((=) true true)))))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 363 12 25# "expl:Ensures clause"
      (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
       ((<=) (offset_min __anonstruct_Value_3_value_0_47_alloc_table value_0)
       (0)))
      /\
      (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
       ((>=) (offset_max __anonstruct_Value_3_value_0_47_alloc_table value_0)
       (0)))
      /\
      (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
      ((=) true true)))))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 365 12 24# "expl:Ensures clause"
      (Int32.(<=) (#"whole_program.jc" 935 47 59# "expl:Integer cast"
      (Int32.of_int (0))) result))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 365 17 29# "expl:Ensures clause"
      (Int32.(<=) result (#"whole_program.jc" 936 59 71# "expl:Integer cast"
      (Int32.of_int (1)))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29# "expl:Ensures clause"
     ((#"/home/nik/Projects/ver/hw4/map.h" 367 12 310# "expl:Ensures clause"
      ((Int32.(=) result (#"whole_program.jc" 937 60 72# "expl:Integer cast"
       (Int32.of_int (1)))) ->
       (exists i_17 : int.
        (((<=) (0) i_17) /\
        (((<) i_17
         (Int32.to_int (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)))
        /\
        ((compare_keys key_0_0
         (get_key_t
         (get_item_t map_1_0 i_17 __anonstruct_Map_5_items_map_1_45)
         __anonstruct_Item_4_key_2_get_item_t_101)
         __anonstruct_Key_2_b_get_item_t_101 __anonstruct_Key_2_b_key_0_46
         __anonstruct_Key_2_a_get_item_t_101 __anonstruct_Key_2_a_key_0_46)
        /\
        ((compare_values value_0
         (get_value_t
         (get_item_t map_1_0 i_17 __anonstruct_Map_5_items_map_1_45)
         __anonstruct_Item_4_value_2_get_item_t_101)
         __anonstruct_Value_3_d_get_item_t_101
         !__anonstruct_Value_3_d_value_0_47
         __anonstruct_Value_3_c_get_item_t_101
         !__anonstruct_Value_3_c_value_0_47)
        /\
        (Int32.(=)
        (select __anonstruct_Item_4_existent_get_item_t_101
        (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0) i_17))
        (#"whole_program.jc" 956 55 67# "expl:Integer cast" (Int32.of_int
        (1)))))))))))
     /\
     (#"/home/nik/Projects/ver/hw4/map.h" 374 12 260# "expl:Ensures clause"
     ((Int32.(=) result (#"whole_program.jc" 957 61 73# "expl:Integer cast"
      (Int32.of_int (0)))) ->
      ((compare_values value_0 value_0 !__anonstruct_Value_3_d_value_0_47
       (old !__anonstruct_Value_3_d_value_0_47)
       !__anonstruct_Value_3_c_value_0_47 (old
       !__anonstruct_Value_3_c_value_0_47))
      /\
      (forall i_18 : int.
       ((((<=) (0) i_18) /\
        ((<) i_18
        (Int32.to_int (select __anonstruct_Map_5_capacity_map_1_45 map_1_0))))
        ->
        (not
        ((Int32.(=)
         (select __anonstruct_Key_2_a_get_item_t_101
         (select __anonstruct_Item_4_key_2_get_item_t_101
         (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0) i_18)))
         (select __anonstruct_Key_2_a_key_0_46 key_0_0))
        /\
        ((Int32.(=)
         (select __anonstruct_Key_2_b_get_item_t_101
         (select __anonstruct_Item_4_key_2_get_item_t_101
         (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0) i_18)))
         (select __anonstruct_Key_2_b_key_0_46 key_0_0))
        /\
        (Int32.(=)
        (select __anonstruct_Item_4_existent_get_item_t_101
        (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0) i_18))
        (#"whole_program.jc" 973 63 75# "expl:Integer cast" (Int32.of_int
        (1))))))))))))))))))))))))))))))))))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let i_0_2 = ref (Unsafe_int32.any_  () ) in
    (let __retres_1 = ref (Unsafe_int32.any_  () ) in
    try
     begin
     try
      begin
      try
       begin
       (if
       (#"/home/nik/Projects/ver/hw4/map.c" 146 8 59#
       ((=)  map_1_0 (null  ) )) then (raise (Goto__LOR_0_2_exc ()))
       else
        (if
        (#"/home/nik/Projects/ver/hw4/map.c" 146 22 102#
        ((=)  (acc  __anonstruct_Map_5_items_map_1_45 map_1_0 ) (null  ) ))
        then (raise (Goto__LOR_0_2_exc ()))
        else
         (if
         (#"/home/nik/Projects/ver/hw4/map.c" 146 44 132#
         ((=)  key_0_0 (null  ) )) then (raise (Goto__LOR_0_2_exc ()))
         else ()))); (raise (Goto__LOR_0_3_exc ()));
        (raise (Goto__LOR_0_2_exc ())) end with Goto__LOR_0_2_exc _jessie_23
       ->
       'U__LOR_0_2:
       'U__LOR_0_2:
       'U__LOR_0_2:
       'U__LOR_0_2:
       begin
       (__retres_1 :=
        (#"whole_program.jc" 986 45 58# "expl:Integer cast"
        (Unsafe_int32.of_int  (Int.(-_)  (1) ) )));
        (raise (Goto_return_label_1_exc ())) end end;
       (raise (Goto__LOR_0_3_exc ())) end with Goto__LOR_0_3_exc _jessie_24
      ->
      'U__LOR_0_3:
      'U__LOR_0_3:
      begin
      ();
       'U__Pre1:
       begin
       'U__Pre1:
       begin
       (assert {
       (#"/home/nik/Projects/ver/hw4/map.c" 151 15 33#
       "expl:Assertion in line 151"
       (Int32.(>=) (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)
       (#"whole_program.jc" 994 54 66# "expl:Integer cast" (Int32.of_int
       (0))))) }); () end;
        try
         begin
         (i_0_2 :=
          (#"whole_program.jc" 998 28 40# "expl:Integer cast"
          (Unsafe_int32.of_int (0))));
          'LoopEntry:
          begin
          'LoopEntry:
          'Loop_11:
          loop
          invariant
            { (((#"/home/nik/Projects/ver/hw4/map.c" 154 23 46#
                (#"/home/nik/Projects/ver/hw4/map.c" 154 23 46#
                ((#"/home/nik/Projects/ver/hw4/map.c" 154 23 29#
                 (Int32.(<=) (#"whole_program.jc" 1002 43 55#
                 "expl:Integer cast" (Int32.of_int (0))) !i_0_2))
                /\
                (#"/home/nik/Projects/ver/hw4/map.c" 154 28 46#
                (Int32.(<=) !i_0_2
                (select __anonstruct_Map_5_capacity_map_1_45 map_1_0))))))
               &&
               ((#"/home/nik/Projects/ver/hw4/map.c" 155 23 66#
                (if
                 ((<=) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)) (1)))
                 then
                 (((<=)
                  (offset_min voidP_get_item_t_101_alloc_table
                  (select __anonstruct_Map_5_items_map_1_45 map_1_0)) (0))
                 /\
                 (((>=)
                  (offset_max voidP_get_item_t_101_alloc_table
                  (select __anonstruct_Map_5_items_map_1_45 map_1_0))
                  (Int.(-)
                  (Int32.to_int
                  (select __anonstruct_Map_5_capacity_map_1_45 map_1_0)) (1)))
                 /\
                 (forall __framac_tmp21 : int.
                  ((((<=) (0) __framac_tmp21) /\
                   ((<=) __framac_tmp21
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_5_capacity_map_1_45 map_1_0))
                   (1)))) ->
                   (((<=)
                    (offset_min __anonstruct_Key_2_get_item_t_101_alloc_table
                    (select __anonstruct_Item_4_key_2_get_item_t_101
                    (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                    __framac_tmp21))) (0))
                   /\
                   (((>=)
                    (offset_max __anonstruct_Key_2_get_item_t_101_alloc_table
                    (select __anonstruct_Item_4_key_2_get_item_t_101
                    (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                    __framac_tmp21))) (0))
                   /\
                   (((=) true true) /\
                   (((<=)
                    (offset_min
                    __anonstruct_Value_3_get_item_t_101_alloc_table
                    (select __anonstruct_Item_4_value_2_get_item_t_101
                    (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                    __framac_tmp21))) (0))
                   /\
                   (((>=)
                    (offset_max
                    __anonstruct_Value_3_get_item_t_101_alloc_table
                    (select __anonstruct_Item_4_value_2_get_item_t_101
                    (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                    __framac_tmp21))) (0))
                   /\ ((=) true true)))))))))) else ((=) true true)))
               &&
               ((#"/home/nik/Projects/ver/hw4/map.c" 156 23 63#
                (compare_values value_0 value_0
                !__anonstruct_Value_3_d_value_0_47 (at
                !__anonstruct_Value_3_d_value_0_47 'U__Pre1)
                !__anonstruct_Value_3_c_value_0_47 (at
                !__anonstruct_Value_3_c_value_0_47 'U__Pre1)))
               &&
               (#"/home/nik/Projects/ver/hw4/map.c" 157 23 182#
               (forall j_10 : int.
                ((((<=) (0) j_10) /\ ((<) j_10 (Int32.to_int !i_0_2))) ->
                 (not
                 ((Int32.(=)
                  (select __anonstruct_Key_2_a_get_item_t_101
                  (select __anonstruct_Item_4_key_2_get_item_t_101
                  (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                  j_10))) (select __anonstruct_Key_2_a_key_0_46 key_0_0))
                 /\
                 ((Int32.(=)
                  (select __anonstruct_Key_2_b_get_item_t_101
                  (select __anonstruct_Item_4_key_2_get_item_t_101
                  (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                  j_10))) (select __anonstruct_Key_2_b_key_0_46 key_0_0))
                 /\
                 (Int32.(=)
                 (select __anonstruct_Item_4_existent_get_item_t_101
                 (shift (select __anonstruct_Map_5_items_map_1_45 map_1_0)
                 j_10)) (#"whole_program.jc" 1055 42 54# "expl:Integer cast"
                 (Int32.of_int (1)))))))))))))
              /\
              (#"whole_program.jc" 1000 9 8061#
              ((#"whole_program.jc" 916 10 32# "expl:Assigns clause"
               (not_assigns __anonstruct_Value_3_value_0_47_alloc_table
               __anonstruct_Value_3_value_0_47_alloc_table (at
               !__anonstruct_Value_3_c_value_0_47 'Init)
               !__anonstruct_Value_3_c_value_0_47 (pset_singleton value_0)))
              /\
              (#"whole_program.jc" 916 10 32# "expl:Assigns clause"
              (not_assigns __anonstruct_Value_3_value_0_47_alloc_table
              __anonstruct_Value_3_value_0_47_alloc_table (at
              !__anonstruct_Value_3_d_value_0_47 'Init)
              !__anonstruct_Value_3_d_value_0_47 (pset_singleton value_0)))))) }
            
           begin
           any unit requires { true } ensures { true } ;
            try
             begin
             'LoopCurrent:
             begin
             'LoopCurrent:
             (if
             (#"/home/nik/Projects/ver/hw4/map.c" 163 20 37#
             (Unsafe_int32.(<)  !i_0_2
              (acc  __anonstruct_Map_5_capacity_map_1_45 map_1_0 ) )) 
             then () else (raise (Goto_while_0_break_0_2_exc ())));
              (if
              (#"/home/nik/Projects/ver/hw4/map.c" 164 12 41#
              (Unsafe_int32.(=) 
               (acc  __anonstruct_Key_2_a_get_item_t_101
                (acc  __anonstruct_Item_4_key_2_get_item_t_101
                 (shift_  (acc  __anonstruct_Map_5_items_map_1_45 map_1_0 )
                  (Unsafe_int32.to_int  !i_0_2 ) ) ) )
               (acc  __anonstruct_Key_2_a_key_0_46 key_0_0 ) ))
              then
               (if
               (#"/home/nik/Projects/ver/hw4/map.c" 164 45 74#
               (Unsafe_int32.(=) 
                (acc  __anonstruct_Key_2_b_get_item_t_101
                 (acc  __anonstruct_Item_4_key_2_get_item_t_101
                  (shift_  (acc  __anonstruct_Map_5_items_map_1_45 map_1_0 )
                   (Unsafe_int32.to_int  !i_0_2 ) ) ) )
                (acc  __anonstruct_Key_2_b_key_0_46 key_0_0 ) ))
               then
                (if
                (#"/home/nik/Projects/ver/hw4/map.c" 164 78 105#
                (Unsafe_int32.(=) 
                 (acc  __anonstruct_Item_4_existent_get_item_t_101
                  (shift_  (acc  __anonstruct_Map_5_items_map_1_45 map_1_0 )
                   (Unsafe_int32.to_int  !i_0_2 ) ) )
                 (#"whole_program.jc" 1077 66 78# "expl:Integer cast"
                 (Unsafe_int32.of_int (1))) ))
                then
                 (if
                 (#"/home/nik/Projects/ver/hw4/map.c" 166 16 79#
                 ((<>)  value_0 (null  ) ))
                 then
                  begin
                  (let _jessie_197 =
                  (acc  __anonstruct_Value_3_c_get_item_t_101
                   (acc  __anonstruct_Item_4_value_2_get_item_t_101
                    (shift_ 
                     (acc  __anonstruct_Map_5_items_map_1_45 map_1_0 )
                     (Unsafe_int32.to_int  !i_0_2 ) ) ) ) in
                  (let _jessie_198 = value_0 in
                  (let _jessie_199 = (0) in
                  (let _jessie_200 = _jessie_198 in
                  (upd  __anonstruct_Value_3_c_value_0_47 _jessie_200
                   _jessie_197 )))));
                   begin
                   (let _jessie_192 =
                   (acc  __anonstruct_Value_3_d_get_item_t_101
                    (acc  __anonstruct_Item_4_value_2_get_item_t_101
                     (shift_ 
                      (acc  __anonstruct_Map_5_items_map_1_45 map_1_0 )
                      (Unsafe_int32.to_int  !i_0_2 ) ) ) ) in
                   (let _jessie_193 = value_0 in
                   (let _jessie_194 = (0) in
                   (let _jessie_195 = _jessie_193 in
                   (upd  __anonstruct_Value_3_d_value_0_47 _jessie_195
                    _jessie_192 )))));
                    begin
                    (__retres_1 :=
                     (#"whole_program.jc" 1096 90 102# "expl:Integer cast"
                     (Unsafe_int32.of_int (1))));
                     (raise (Goto_return_label_1_exc ())) end end end
                 else
                  begin
                  (__retres_1 :=
                   (#"whole_program.jc" 1101 87 100# "expl:Integer cast"
                   (Unsafe_int32.of_int  (Int.(-_)  (1) ) )));
                   (raise (Goto_return_label_1_exc ())) end) else ())
               else ()) else ());
              (i_0_2 :=
               (Unsafe_int32.(+)  !i_0_2
                (#"whole_program.jc" 1106 64 76# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) )) end;
              (raise (Loop_continue_exc ())) end with Loop_continue_exc
             _jessie_27 -> () end end end;
           (raise (Goto_while_0_break_0_2_exc ())) end end with
         Goto_while_0_break_0_2_exc _jessie_22 ->
         'While_0_break_0_2: 'While_0_break_0_2: () end;
        (__retres_1 :=
         (#"whole_program.jc" 1111 30 42# "expl:Integer cast"
         (Unsafe_int32.of_int (0)))) end end end;
      (raise (Goto_return_label_1_exc ())) end with Goto_return_label_1_exc
     _jessie_25 ->
     'Return_label_1:
     'Return_label_1: begin (return := !__retres_1); (raise Return) end end));
     absurd  end with Return -> !return end)
  
end

theory Axiomatic_CountLem

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_MapCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  lemma L_count_split #"/home/nik/Projects/ver/hw4/map.h" 116 24 253#
  "expl:Lemma l_count_split"  :
  (forall voidP_items_278_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_3_items_278_alloc_table_at_L : (alloc_table
    __anonstruct_Value_3).
    (forall __anonstruct_Key_2_items_278_alloc_table_at_L : (alloc_table
     __anonstruct_Key_2).
     (forall __anonstruct_Map_5_count_map_6_52_at_L : (memory
      __anonstruct_Map_5 Int32.t).
      (forall __anonstruct_Map_5_capacity_map_6_52_at_L : (memory
       __anonstruct_Map_5 Int32.t).
       (forall __anonstruct_Map_5_items_map_6_52_at_L : (memory
        __anonstruct_Map_5 (pointer voidP)).
        (forall __anonstruct_Item_4_existent_items_278_at_L : (memory voidP
         Int32.t).
         (forall __anonstruct_Item_4_value_2_items_278_at_L : (memory voidP
          (pointer __anonstruct_Value_3)).
          (forall __anonstruct_Item_4_key_2_items_278_at_L : (memory voidP
           (pointer __anonstruct_Key_2)).
           (forall __anonstruct_Key_2_b_items_278_at_L : (memory
            __anonstruct_Key_2 Int32.t).
            (forall __anonstruct_Key_2_a_items_278_at_L : (memory
             __anonstruct_Key_2 Int32.t).
             (#"/home/nik/Projects/ver/hw4/map.h" 118 8 202#
             (forall map_6 : (pointer __anonstruct_Map_5).
              (forall i : int.
               (((is_valid_map map_6 voidP_items_278_alloc_table_at_L
                 __anonstruct_Value_3_items_278_alloc_table_at_L
                 __anonstruct_Key_2_items_278_alloc_table_at_L
                 __anonstruct_Map_5_count_map_6_52_at_L
                 __anonstruct_Map_5_capacity_map_6_52_at_L
                 __anonstruct_Map_5_items_map_6_52_at_L
                 __anonstruct_Item_4_existent_items_278_at_L
                 __anonstruct_Item_4_value_2_items_278_at_L
                 __anonstruct_Item_4_key_2_items_278_at_L
                 __anonstruct_Key_2_b_items_278_at_L
                 __anonstruct_Key_2_a_items_278_at_L)
                /\
                (((<) (0) i) /\
                ((<) i
                (Int32.to_int
                (select __anonstruct_Map_5_capacity_map_6_52_at_L map_6)))))
                ->
                ((=)
                (count map_6 (0) i __anonstruct_Map_5_items_map_6_52_at_L
                __anonstruct_Item_4_existent_items_278_at_L)
                (Int.(+)
                (count map_6 (0) (Int.(-) i (1))
                __anonstruct_Map_5_items_map_6_52_at_L
                __anonstruct_Item_4_existent_items_278_at_L)
                (count map_6 (Int.(-) i (1)) i
                __anonstruct_Map_5_items_map_6_52_at_L
                __anonstruct_Item_4_existent_items_278_at_L))))))))))))))))))
  
  lemma L_count_split2 #"/home/nik/Projects/ver/hw4/map.h" 121 65 302#
  "expl:Lemma l_count_split2"  :
  (forall voidP_items_270_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_3_items_270_alloc_table_at_L : (alloc_table
    __anonstruct_Value_3).
    (forall __anonstruct_Key_2_items_270_alloc_table_at_L : (alloc_table
     __anonstruct_Key_2).
     (forall __anonstruct_Map_5_count_map_7_53_at_L : (memory
      __anonstruct_Map_5 Int32.t).
      (forall __anonstruct_Map_5_capacity_map_7_53_at_L : (memory
       __anonstruct_Map_5 Int32.t).
       (forall __anonstruct_Map_5_items_map_7_53_at_L : (memory
        __anonstruct_Map_5 (pointer voidP)).
        (forall __anonstruct_Item_4_existent_items_270_at_L : (memory voidP
         Int32.t).
         (forall __anonstruct_Item_4_value_2_items_270_at_L : (memory voidP
          (pointer __anonstruct_Value_3)).
          (forall __anonstruct_Item_4_key_2_items_270_at_L : (memory voidP
           (pointer __anonstruct_Key_2)).
           (forall __anonstruct_Key_2_b_items_270_at_L : (memory
            __anonstruct_Key_2 Int32.t).
            (forall __anonstruct_Key_2_a_items_270_at_L : (memory
             __anonstruct_Key_2 Int32.t).
             (#"/home/nik/Projects/ver/hw4/map.h" 124 8 208#
             (forall map_7 : (pointer __anonstruct_Map_5).
              (forall i_0 : int.
               (forall j : int.
                (((is_valid_map map_7 voidP_items_270_alloc_table_at_L
                  __anonstruct_Value_3_items_270_alloc_table_at_L
                  __anonstruct_Key_2_items_270_alloc_table_at_L
                  __anonstruct_Map_5_count_map_7_53_at_L
                  __anonstruct_Map_5_capacity_map_7_53_at_L
                  __anonstruct_Map_5_items_map_7_53_at_L
                  __anonstruct_Item_4_existent_items_270_at_L
                  __anonstruct_Item_4_value_2_items_270_at_L
                  __anonstruct_Item_4_key_2_items_270_at_L
                  __anonstruct_Key_2_b_items_270_at_L
                  __anonstruct_Key_2_a_items_270_at_L)
                 /\
                 (((<) (0) i_0) /\
                 (((<) i_0 j) /\
                 ((<) j
                 (Int32.to_int
                 (select __anonstruct_Map_5_capacity_map_7_53_at_L map_7))))))
                 ->
                 ((=)
                 (count map_7 (0) j __anonstruct_Map_5_items_map_7_53_at_L
                 __anonstruct_Item_4_existent_items_270_at_L)
                 (Int.(+)
                 (count map_7 (0) i_0 __anonstruct_Map_5_items_map_7_53_at_L
                 __anonstruct_Item_4_existent_items_270_at_L)
                 (count map_7 i_0 j __anonstruct_Map_5_items_map_7_53_at_L
                 __anonstruct_Item_4_existent_items_270_at_L)))))))))))))))))))
  
  lemma L_count_one_p #"/home/nik/Projects/ver/hw4/map.h" 127 57 416#
  "expl:Lemma l_count_one_p"  :
  (forall voidP_items_55_alloc_table_at_L : (alloc_table voidP).
   (forall __anonstruct_Value_3_items_55_alloc_table_at_L : (alloc_table
    __anonstruct_Value_3).
    (forall __anonstruct_Key_2_items_55_alloc_table_at_L : (alloc_table
     __anonstruct_Key_2).
     (forall __anonstruct_Map_5_count_map_8_54_at_L : (memory
      __anonstruct_Map_5 Int32.t).
      (forall __anonstruct_Map_5_capacity_map_8_54_at_L : (memory
       __anonstruct_Map_5 Int32.t).
       (forall __anonstruct_Map_5_items_map_8_54_at_L : (memory
        __anonstruct_Map_5 (pointer voidP)).
        (forall __anonstruct_Item_4_existent_items_55_at_L : (memory voidP
         Int32.t).
         (forall __anonstruct_Item_4_value_2_items_55_at_L : (memory voidP
          (pointer __anonstruct_Value_3)).
          (forall __anonstruct_Item_4_key_2_items_55_at_L : (memory voidP
           (pointer __anonstruct_Key_2)).
           (forall __anonstruct_Key_2_b_items_55_at_L : (memory
            __anonstruct_Key_2 Int32.t).
            (forall __anonstruct_Key_2_a_items_55_at_L : (memory
             __anonstruct_Key_2 Int32.t).
             (#"/home/nik/Projects/ver/hw4/map.h" 130 8 327#
             (forall map_8 : (pointer __anonstruct_Map_5).
              (forall i_1 : int.
               ((is_valid_map map_8 voidP_items_55_alloc_table_at_L
                __anonstruct_Value_3_items_55_alloc_table_at_L
                __anonstruct_Key_2_items_55_alloc_table_at_L
                __anonstruct_Map_5_count_map_8_54_at_L
                __anonstruct_Map_5_capacity_map_8_54_at_L
                __anonstruct_Map_5_items_map_8_54_at_L
                __anonstruct_Item_4_existent_items_55_at_L
                __anonstruct_Item_4_value_2_items_55_at_L
                __anonstruct_Item_4_key_2_items_55_at_L
                __anonstruct_Key_2_b_items_55_at_L
                __anonstruct_Key_2_a_items_55_at_L) ->
                ((count_one_p map_8 i_1 (Int.(+) i_1 (1))
                 __anonstruct_Map_5_items_map_8_54_at_L
                 __anonstruct_Item_4_existent_items_55_at_L)
                /\
                ((=)
                (count map_8 i_1 (Int.(+) i_1 (1))
                __anonstruct_Map_5_items_map_8_54_at_L
                __anonstruct_Item_4_existent_items_55_at_L)
                (if
                 ((<>)
                 (Int32.to_int
                 (select __anonstruct_Item_4_existent_items_55_at_L
                 (shift (select __anonstruct_Map_5_items_map_8_54_at_L map_8)
                 i_1))) (0)) then (1) else (0)))))))))))))))))))
  
end

theory Logic_type_padding

  use why3.Bool.Bool 
  
  type padding 
  
end

module Struct___anonstruct_Key_2_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_2 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Key_2
  (p : (pointer __anonstruct_Key_2)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) :
    unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Key_2_alloc_table p)) }
    writes { __anonstruct_Key_2_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_2_alloc_table (old
       !__anonstruct_Key_2_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_2 p (old
       !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_2 p
      (offset_max (old !__anonstruct_Key_2_alloc_table) p)
      !__anonstruct_Key_2_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_2_requires
  (n : int) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) :
     (pointer __anonstruct_Key_2)
     requires { ((>=) n (0)) } writes { __anonstruct_Key_2_alloc_table,
     __anonstruct_Key_2_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_2 result (0) (Int.(-) n (1))
        !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_2 result n (old
        !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_2 result (old
        !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_2 result (0) n
        !__anonstruct_Key_2_tag_table)
       /\
       (container_of_struct___anonstruct_Key_2 result (0) n
       !__anonstruct_Key_2_tag_table))))))) }
  
end

module Struct___anonstruct_Key_2_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_2 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Key_2
  (p : (pointer __anonstruct_Key_2)) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) :
    unit
    requires { true } writes { __anonstruct_Key_2_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_2_alloc_table (old
       !__anonstruct_Key_2_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_2 p (old
       !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_2 p
      (offset_max (old !__anonstruct_Key_2_alloc_table) p)
      !__anonstruct_Key_2_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_2
  (n : int) 
   (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
    (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) :
     (pointer __anonstruct_Key_2)
     requires { true } writes { __anonstruct_Key_2_alloc_table,
     __anonstruct_Key_2_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_2 result (0) (Int.(-) n (1))
        !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_2 result n (old
        !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_2 result (old
        !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_2 result (Int.(-) n (1)) (old
        !__anonstruct_Key_2_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_2 result (0) n
        !__anonstruct_Key_2_tag_table)
       /\
       (container_of_struct___anonstruct_Key_2 result (0) n
       !__anonstruct_Key_2_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Key_2
  (__anonstruct_Key_2_alloc_table : ref (alloc_table __anonstruct_Key_2)) 
   (__anonstruct_Key_2_tag_table : ref (tag_table __anonstruct_Key_2)) :
    (pointer __anonstruct_Key_2)
    requires { true } writes { __anonstruct_Key_2_alloc_table,
    __anonstruct_Key_2_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Key_2 result (0) (0)
       !__anonstruct_Key_2_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Key_2 result (1) (old
       !__anonstruct_Key_2_alloc_table) !__anonstruct_Key_2_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Key_2 result (old
       !__anonstruct_Key_2_tag_table) !__anonstruct_Key_2_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Key_2 result (0) (old
       !__anonstruct_Key_2_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Key_2 result (0) (old
       !__anonstruct_Key_2_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Key_2 result
       !__anonstruct_Key_2_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Key_2 result
      !__anonstruct_Key_2_tag_table))))))) }
  
end

theory Struct___anonstruct_Map_5

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Map_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Map_5_tag  : (tag_id
  __anonstruct_Map_5)
  
  axiom U___anonstruct_Map_5_parenttag_bottom  :
  (parenttag __anonstruct_Map_5_tag bottom_tag)
  
  axiom U___anonstruct_Map_5_is_final  :
  (forall __anonstruct_Map_5_tag_table : (tag_table __anonstruct_Map_5).
   (forall p : (pointer __anonstruct_Map_5).
    ((instanceof __anonstruct_Map_5_tag_table p __anonstruct_Map_5_tag) ->
     ((=) (typeof __anonstruct_Map_5_tag_table p) __anonstruct_Map_5_tag))))
  
  predicate frame_tag_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (old___anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5))
  =
     ((tag_extends old___anonstruct_Map_5_tag_table
      __anonstruct_Map_5_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Map_5_tag_table
     __anonstruct_Map_5_tag_table p))
  
  predicate frame_free_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (old___anonstruct_Map_5_alloc_table : (alloc_table
  __anonstruct_Map_5)) (__anonstruct_Map_5_alloc_table : (alloc_table
  __anonstruct_Map_5))
  =
     ((free_extends old___anonstruct_Map_5_alloc_table
      __anonstruct_Map_5_alloc_table)
     /\
     (free_block old___anonstruct_Map_5_alloc_table
     __anonstruct_Map_5_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (n : int) (old___anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5)) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  =
     ((alloc_extends old___anonstruct_Map_5_alloc_table
      __anonstruct_Map_5_alloc_table)
     /\
     (alloc_block old___anonstruct_Map_5_alloc_table
     __anonstruct_Map_5_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (n : int) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5)) = (tag_fresh __anonstruct_Map_5_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (n : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = (alloc_fresh __anonstruct_Map_5_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5)) = true
  
  predicate container_of_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (l : int) (r : int) (__anonstruct_Map_5_tag_table :
  (tag_table __anonstruct_Map_5)) = true
  
  predicate typeof_singleton_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5))
  = ((=) (typeof __anonstruct_Map_5_tag_table p) __anonstruct_Map_5_tag)
  
  predicate typeof_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (l : int) (r : int) (__anonstruct_Map_5_tag_table :
  (tag_table __anonstruct_Map_5))
  =
     (((=) (typeof __anonstruct_Map_5_tag_table p) __anonstruct_Map_5_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Map_5_tag_table (shift p i))
       __anonstruct_Map_5_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (__anonstruct_Map_5_tag_table : (tag_table
  __anonstruct_Map_5))
  = (instanceof __anonstruct_Map_5_tag_table p __anonstruct_Map_5_tag)
  
  predicate instanceof_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (l : int) (r : int) (__anonstruct_Map_5_tag_table :
  (tag_table __anonstruct_Map_5))
  =
     ((instanceof __anonstruct_Map_5_tag_table p __anonstruct_Map_5_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Map_5_tag_table (shift p i)
       __anonstruct_Map_5_tag))))
  
  predicate right_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (b : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = ((>=) (offset_max __anonstruct_Map_5_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = ((<=) (offset_min __anonstruct_Map_5_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  = ((=) (offset_min __anonstruct_Map_5_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (b : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  =
     (((<=) (offset_min __anonstruct_Map_5_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Map_5_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Map_5 (p : (pointer
  __anonstruct_Map_5)) (a : int) (b : int) (__anonstruct_Map_5_alloc_table :
  (alloc_table __anonstruct_Map_5))
  =
     (((=) (offset_min __anonstruct_Map_5_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Map_5_alloc_table p) b))
  
  axiom U___anonstruct_Map_5_int  :
  ((=) (int_of_tag __anonstruct_Map_5_tag) (6))
  
end

module Struct___anonstruct_Map_5_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_5 
  
  use import Root___anonstruct_Map_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Map_5
  (p : (pointer __anonstruct_Map_5)) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) :
    unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Map_5_alloc_table p)) }
    writes { __anonstruct_Map_5_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_5_alloc_table (old
       !__anonstruct_Map_5_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_5 p (old
       !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_5 p
      (offset_max (old !__anonstruct_Map_5_alloc_table) p)
      !__anonstruct_Map_5_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_5_requires
  (n : int) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) 
    (__anonstruct_Map_5_tag_table : ref (tag_table __anonstruct_Map_5)) :
     (pointer __anonstruct_Map_5)
     requires { ((>=) n (0)) } writes { __anonstruct_Map_5_alloc_table,
     __anonstruct_Map_5_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_5 result (0) (Int.(-) n (1))
        !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_5 result n (old
        !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_5 result (old
        !__anonstruct_Map_5_tag_table) !__anonstruct_Map_5_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_5 result (0) n
        !__anonstruct_Map_5_tag_table)
       /\
       (container_of_struct___anonstruct_Map_5 result (0) n
       !__anonstruct_Map_5_tag_table))))))) }
  
end

module Struct___anonstruct_Map_5_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_5 
  
  use import Root___anonstruct_Map_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Map_5
  (p : (pointer __anonstruct_Map_5)) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) :
    unit
    requires { true } writes { __anonstruct_Map_5_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_5_alloc_table (old
       !__anonstruct_Map_5_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_5 p (old
       !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_5 p
      (offset_max (old !__anonstruct_Map_5_alloc_table) p)
      !__anonstruct_Map_5_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_5
  (n : int) 
   (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) 
    (__anonstruct_Map_5_tag_table : ref (tag_table __anonstruct_Map_5)) :
     (pointer __anonstruct_Map_5)
     requires { true } writes { __anonstruct_Map_5_alloc_table,
     __anonstruct_Map_5_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_5 result (0) (Int.(-) n (1))
        !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_5 result n (old
        !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_5 result (old
        !__anonstruct_Map_5_tag_table) !__anonstruct_Map_5_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_5 result (Int.(-) n (1)) (old
        !__anonstruct_Map_5_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_5 result (0) n
        !__anonstruct_Map_5_tag_table)
       /\
       (container_of_struct___anonstruct_Map_5 result (0) n
       !__anonstruct_Map_5_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Map_5
  (__anonstruct_Map_5_alloc_table : ref (alloc_table __anonstruct_Map_5)) 
   (__anonstruct_Map_5_tag_table : ref (tag_table __anonstruct_Map_5)) :
    (pointer __anonstruct_Map_5)
    requires { true } writes { __anonstruct_Map_5_alloc_table,
    __anonstruct_Map_5_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Map_5 result (0) (0)
       !__anonstruct_Map_5_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Map_5 result (1) (old
       !__anonstruct_Map_5_alloc_table) !__anonstruct_Map_5_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Map_5 result (old
       !__anonstruct_Map_5_tag_table) !__anonstruct_Map_5_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Map_5 result (0) (old
       !__anonstruct_Map_5_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Map_5 result (0) (old
       !__anonstruct_Map_5_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Map_5 result
       !__anonstruct_Map_5_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Map_5 result
      !__anonstruct_Map_5_tag_table))))))) }
  
end

module Struct___anonstruct_Value_3_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_3 
  
  use import Root___anonstruct_Value_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Value_3
  (p : (pointer __anonstruct_Value_3)) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Value_3_alloc_table p)) }
    writes { __anonstruct_Value_3_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_3_alloc_table (old
       !__anonstruct_Value_3_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_3 p (old
       !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_3 p
      (offset_max (old !__anonstruct_Value_3_alloc_table) p)
      !__anonstruct_Value_3_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_3_requires
  (n : int) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) 
    (__anonstruct_Value_3_tag_table : ref (tag_table __anonstruct_Value_3)) :
     (pointer __anonstruct_Value_3)
     requires { ((>=) n (0)) } writes { __anonstruct_Value_3_alloc_table,
     __anonstruct_Value_3_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_3 result (0) (Int.(-) n (1))
        !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_3 result n (old
        !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_3 result (old
        !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_3 result (0) n
        !__anonstruct_Value_3_tag_table)
       /\
       (container_of_struct___anonstruct_Value_3 result (0) n
       !__anonstruct_Value_3_tag_table))))))) }
  
end

module Struct___anonstruct_Value_3_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_3 
  
  use import Root___anonstruct_Value_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Value_3
  (p : (pointer __anonstruct_Value_3)) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) : unit
    requires { true } writes { __anonstruct_Value_3_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_3_alloc_table (old
       !__anonstruct_Value_3_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_3 p (old
       !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_3 p
      (offset_max (old !__anonstruct_Value_3_alloc_table) p)
      !__anonstruct_Value_3_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_3
  (n : int) 
   (__anonstruct_Value_3_alloc_table : ref (alloc_table
    __anonstruct_Value_3)) 
    (__anonstruct_Value_3_tag_table : ref (tag_table __anonstruct_Value_3)) :
     (pointer __anonstruct_Value_3)
     requires { true } writes { __anonstruct_Value_3_alloc_table,
     __anonstruct_Value_3_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_3 result (0) (Int.(-) n (1))
        !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_3 result n (old
        !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_3 result (old
        !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_3 result (Int.(-) n (1)) (old
        !__anonstruct_Value_3_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_3 result (0) n
        !__anonstruct_Value_3_tag_table)
       /\
       (container_of_struct___anonstruct_Value_3 result (0) n
       !__anonstruct_Value_3_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Value_3
  (__anonstruct_Value_3_alloc_table : ref (alloc_table
   __anonstruct_Value_3)) 
   (__anonstruct_Value_3_tag_table : ref (tag_table __anonstruct_Value_3)) :
    (pointer __anonstruct_Value_3)
    requires { true } writes { __anonstruct_Value_3_alloc_table,
    __anonstruct_Value_3_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Value_3 result (0) (0)
       !__anonstruct_Value_3_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Value_3 result (1) (old
       !__anonstruct_Value_3_alloc_table) !__anonstruct_Value_3_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Value_3 result (old
       !__anonstruct_Value_3_tag_table) !__anonstruct_Value_3_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Value_3 result (0) (old
       !__anonstruct_Value_3_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Value_3 result (0) (old
       !__anonstruct_Value_3_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Value_3 result
       !__anonstruct_Value_3_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Value_3 result
      !__anonstruct_Value_3_tag_table))))))) }
  
end

theory Struct_charP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import Struct_voidP 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Charp_tag_id 
  
  predicate frame_tag_struct_charP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_charP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (fresh_tag_struct_voidP p n voidP_tag_table)
  
  predicate fresh_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (fresh_alloc_struct_voidP p n voidP_alloc_table)
  
  predicate container_of_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_charP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) charP_tag)
  
  predicate typeof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) charP_tag))))
  
  predicate instanceof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p charP_tag)
  
  predicate instanceof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) charP_tag))))
  
  predicate right_valid_struct_charP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (right_valid_struct_voidP p b voidP_alloc_table)
  
  predicate left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate strict_left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (strict_left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate valid_struct_charP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (valid_struct_voidP p a b voidP_alloc_table)
  
  predicate strict_valid_struct_charP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  = (strict_valid_struct_voidP p a b voidP_alloc_table)
  
end

module Struct_charP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_charP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_charP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_charP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_charP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_charP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_charP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_charP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_charP result !voidP_tag_table) /\
      (container_of_singleton_struct_charP result !voidP_tag_table))))))) }
  
end

module Struct_voidP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_voidP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_voidP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_voidP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_voidP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_voidP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_voidP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_voidP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_voidP result !voidP_tag_table) /\
      (container_of_singleton_struct_voidP result !voidP_tag_table))))))) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint8.to_int n)) \/
     (Bit_int8_of_Bit_uint8.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { (Int8.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Uint64.to_int n)) \/
     (Bit_uint32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { (Uint32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint64.to_int n)) \/
     (Bit_uint16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint64.to_int n)) \/
     (Bit_int8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { (Int8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires {
     ((Bit_int64.in_bounds (Uint64.to_int n)) \/
     (Bit_int64_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { (Int64.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint64.to_int n)) \/
     (Bit_int32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { (Int32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint64.to_int n)) \/
     (Bit_int16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { (Int16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint32.to_int n)) \/
     (Bit_uint16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint32.to_int n)) \/
     (Bit_int8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { (Int8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint32.to_int n)) \/
     (Bit_int32_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { (Int32.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint32.to_int n)) \/
     (Bit_int16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { (Int16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint16.to_int n)) \/
     (Bit_int8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { (Int8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint16.to_int n)) \/
     (Bit_int16_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { (Int16.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Int64.to_int n)) \/
     (Bit_int32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { (Int32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int64.to_int n)) \/
     (Bit_int16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { (Int16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int32.to_int n)) \/
     (Bit_int16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { (Int16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint64.to_int n)) \/
     (Bit_uint8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint32.to_int n)) \/
     (Bit_uint8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint16.to_int n)) \/
     (Bit_uint8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int8.to_int n)) \/
     (Bit_uint8_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { (Uint8.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int64.to_int n)) \/
     (Bit_uint8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { (Uint8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int32.to_int n)) \/
     (Bit_uint8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { (Uint8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int16.to_int n)) \/
     (Bit_uint8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { (Uint8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int8.to_int n)) \/
     (Bit_uint64_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { (Uint64.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true } ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int64.to_int n)) \/
     (Bit_uint64_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { (Uint64.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int32.to_int n)) \/
     (Bit_uint64_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_bit_uint64_of_Safe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int16.to_int n)) \/
     (Bit_uint64_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { (Uint64.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int8.to_int n)) \/
     (Bit_uint32_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { (Uint32.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true } ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int64.to_int n)) \/
     (Bit_uint32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { (Uint32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int32.to_int n)) \/
     (Bit_uint32_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { (Uint32.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int16.to_int n)) \/
     (Bit_uint32_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { (Uint32.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int8.to_int n)) \/
     (Bit_uint16_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { (Uint16.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true } ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int64.to_int n)) \/
     (Bit_uint16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { (Uint16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int32.to_int n)) \/
     (Bit_uint16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { (Uint16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int16.to_int n)) \/
     (Bit_uint16_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { (Uint16.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int64.to_int n)) \/
     (Bit_int8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { (Int8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int32.to_int n)) \/
     (Bit_int8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { (Int8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int16.to_int n)) \/
     (Bit_int8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { (Int8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

theory Logic_is_valid_map_mem

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map_mem (map_9 : (pointer __anonstruct_Map_5))
  (voidP_items_56_alloc_table_at_L : (alloc_table voidP))
  (__anonstruct_Value_3_items_56_alloc_table_at_L : (alloc_table
  __anonstruct_Value_3)) (__anonstruct_Map_5_map_9_6_alloc_table_at_L :
  (alloc_table __anonstruct_Map_5))
  (__anonstruct_Key_2_items_56_alloc_table_at_L : (alloc_table
  __anonstruct_Key_2)) (__anonstruct_Map_5_capacity_map_9_6_at_L : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_items_map_9_6_at_L :
  (memory __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_value_2_items_56_at_L : (memory voidP (pointer
  __anonstruct_Value_3))) (__anonstruct_Item_4_key_2_items_56_at_L : (memory
  voidP (pointer __anonstruct_Key_2)))
  =
     ((((<=) (offset_min __anonstruct_Map_5_map_9_6_alloc_table_at_L map_9)
       (0))
      /\
      (((>=) (offset_max __anonstruct_Map_5_map_9_6_alloc_table_at_L map_9)
       (0))
      /\ ((=) true true)))
     /\
     (((=)
      (offset_max voidP_items_56_alloc_table_at_L
      (select __anonstruct_Map_5_items_map_9_6_at_L map_9))
      (Int.(-)
      (Int32.to_int (select __anonstruct_Map_5_capacity_map_9_6_at_L map_9))
      (1)))
     /\
     (if
      ((<=) (0)
      (Int.(-)
      (Int32.to_int (select __anonstruct_Map_5_capacity_map_9_6_at_L map_9))
      (1))) then
      (((<=)
       (offset_min voidP_items_56_alloc_table_at_L
       (select __anonstruct_Map_5_items_map_9_6_at_L map_9)) (0))
      /\
      (((>=)
       (offset_max voidP_items_56_alloc_table_at_L
       (select __anonstruct_Map_5_items_map_9_6_at_L map_9))
       (Int.(-)
       (Int32.to_int (select __anonstruct_Map_5_capacity_map_9_6_at_L map_9))
       (1)))
      /\
      (forall __framac_tmp1 : int.
       ((((<=) (0) __framac_tmp1) /\
        ((<=) __framac_tmp1
        (Int.(-)
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_9_6_at_L map_9)) (1)))) ->
        (((<=)
         (offset_min __anonstruct_Key_2_items_56_alloc_table_at_L
         (select __anonstruct_Item_4_key_2_items_56_at_L
         (shift (select __anonstruct_Map_5_items_map_9_6_at_L map_9)
         __framac_tmp1))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Key_2_items_56_alloc_table_at_L
         (select __anonstruct_Item_4_key_2_items_56_at_L
         (shift (select __anonstruct_Map_5_items_map_9_6_at_L map_9)
         __framac_tmp1))) (0))
        /\
        (((=) true true) /\
        (((<=)
         (offset_min __anonstruct_Value_3_items_56_alloc_table_at_L
         (select __anonstruct_Item_4_value_2_items_56_at_L
         (shift (select __anonstruct_Map_5_items_map_9_6_at_L map_9)
         __framac_tmp1))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Value_3_items_56_alloc_table_at_L
         (select __anonstruct_Item_4_value_2_items_56_at_L
         (shift (select __anonstruct_Map_5_items_map_9_6_at_L map_9)
         __framac_tmp1))) (0))
        /\ ((=) true true)))))))))) else ((=) true true))))
  
  
end

theory Logic_is_valid_map_sizes

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate is_valid_map_sizes (map_10 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_10_7_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_10_7_at_L : (memory
  __anonstruct_Map_5 Int32.t))
  =
     ((Int32.(<=) (#"whole_program.jc" 138 6 18# "expl:Integer cast"
      (Int32.of_int (0)))
      (select __anonstruct_Map_5_count_map_10_7_at_L map_10))
     /\
     (Int32.(<=) (select __anonstruct_Map_5_count_map_10_7_at_L map_10)
     (select __anonstruct_Map_5_capacity_map_10_7_at_L map_10)))
  
  
end

theory Logic_begin_ok

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate begin_ok (map_11 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_11_8_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_11_8_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_57_at_L : (memory voidP Int32.t))
  =
     ((Int32.(>) (select __anonstruct_Map_5_count_map_11_8_at_L map_11)
      (#"whole_program.jc" 141 21 33# "expl:Integer cast" (Int32.of_int
      (0)))) ->
      (Int32.(=)
      (select __anonstruct_Item_4_existent_items_57_at_L
      (shift (select __anonstruct_Map_5_items_map_11_8_at_L map_11) (0)))
      (#"whole_program.jc" 142 38 50# "expl:Integer cast" (Int32.of_int
      (1)))))
  
  
end

theory Logic_is_valid_item

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_valid_item (map_12 : (pointer __anonstruct_Map_5)) (idx : int)
  (__anonstruct_Map_5_capacity_map_12_9_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_12_9_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_58_at_L : (memory voidP Int32.t))
  =
     ((((<=) (0) idx) /\
      ((<) idx
      (Int32.to_int
      (select __anonstruct_Map_5_capacity_map_12_9_at_L map_12)))) ->
      ((Int32.(<=) (#"whole_program.jc" 146 8 20# "expl:Integer cast"
       (Int32.of_int (0)))
       (select __anonstruct_Item_4_existent_items_58_at_L
       (shift (select __anonstruct_Map_5_items_map_12_9_at_L map_12) idx)))
      /\
      (Int32.(<=)
      (select __anonstruct_Item_4_existent_items_58_at_L
      (shift (select __anonstruct_Map_5_items_map_12_9_at_L map_12) idx))
      (#"whole_program.jc" 147 42 54# "expl:Integer cast" (Int32.of_int
      (1))))))
  
  
end

theory Logic_count_ok

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_MapCount 
  
  use why3.Bool.Bool 
  
  predicate count_ok (map_13 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_13_10_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_13_10_at_L : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_items_map_13_10_at_L :
  (memory __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_128_at_L : (memory voidP Int32.t))
  =
     ((=)
     (count_exist map_13 __anonstruct_Map_5_capacity_map_13_10_at_L
     __anonstruct_Map_5_items_map_13_10_at_L
     __anonstruct_Item_4_existent_items_128_at_L)
     (Int32.to_int (select __anonstruct_Map_5_count_map_13_10_at_L map_13)))
  
  
end

theory Logic_gap_ok

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate gap_ok (map_14 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_14_11_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_14_11_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_59_at_L : (memory voidP Int32.t))
  =
     (forall i_2 : int.
      (forall j_0 : int.
       ((((<) (Int.(+) i_2 (1)) j_0) /\
        (((<) j_0
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_14_11_at_L map_14)))
        /\
        (((<=) (0) i_2) /\
        (((<) i_2
         (Int.(-)
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_14_11_at_L map_14)) (1)))
        /\
        ((Int32.(=)
         (select __anonstruct_Item_4_existent_items_59_at_L
         (shift (select __anonstruct_Map_5_items_map_14_11_at_L map_14) i_2))
         (#"whole_program.jc" 158 46 58# "expl:Integer cast" (Int32.of_int
         (0))))
        /\
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_59_at_L
        (shift (select __anonstruct_Map_5_items_map_14_11_at_L map_14)
        (Int.(+) i_2 (1)))) (#"whole_program.jc" 159 51 63#
        "expl:Integer cast" (Int32.of_int (0))))))))) ->
        (Int32.(=)
        (select __anonstruct_Item_4_existent_items_59_at_L
        (shift (select __anonstruct_Map_5_items_map_14_11_at_L map_14) j_0))
        (#"whole_program.jc" 160 44 56# "expl:Integer cast" (Int32.of_int
        (0)))))))
  
  
end

theory Logic_is_valid_items

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_item 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_valid_items (map_15 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_15_12_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_15_12_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_items_132_at_L : (memory voidP Int32.t))
  =
     (forall i_3 : int.
      ((((<=) (0) i_3) /\
       ((<) i_3
       (Int32.to_int
       (select __anonstruct_Map_5_capacity_map_15_12_at_L map_15)))) ->
       (is_valid_item map_15 i_3 __anonstruct_Map_5_capacity_map_15_12_at_L
       __anonstruct_Map_5_items_map_15_12_at_L
       __anonstruct_Item_4_existent_items_132_at_L)))
  
  
end

theory Logic_compare_keys_now

  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_keys_now (k1_0 : (pointer __anonstruct_Key_2)) (k2_0 :
  (pointer __anonstruct_Key_2)) (__anonstruct_Key_2_b_k2_0_18_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_b_k1_0_17_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k2_0_18_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_k1_0_17_at_L : (memory
  __anonstruct_Key_2 Int32.t))
  =
     (compare_keys k1_0 k2_0 __anonstruct_Key_2_b_k2_0_18_at_L
     __anonstruct_Key_2_b_k1_0_17_at_L __anonstruct_Key_2_a_k2_0_18_at_L
     __anonstruct_Key_2_a_k1_0_17_at_L)
  
  
end

theory Logic_compare_values_now

  use import Root___anonstruct_Value_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_compare_values 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate compare_values_now (v1_0 : (pointer __anonstruct_Value_3)) (v2_0
  : (pointer __anonstruct_Value_3)) (__anonstruct_Value_3_d_v2_0_20_at_L :
  (memory __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_v1_0_19_at_L
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_v2_0_20_at_L : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_v1_0_19_at_L : (memory
  __anonstruct_Value_3 Int32.t))
  =
     (compare_values v1_0 v2_0 __anonstruct_Value_3_d_v2_0_20_at_L
     __anonstruct_Value_3_d_v1_0_19_at_L __anonstruct_Value_3_c_v2_0_20_at_L
     __anonstruct_Value_3_c_v1_0_19_at_L)
  
  
end

theory Logic_valid_existence

  use import core.Voidp 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate valid_existence (it : (pointer voidP))
  (__anonstruct_Item_4_existent_it_21_at_L : (memory voidP Int32.t))
  =
     ((Int32.(<=) (#"whole_program.jc" 184 6 18# "expl:Integer cast"
      (Int32.of_int (0)))
      (select __anonstruct_Item_4_existent_it_21_at_L it))
     /\
     (Int32.(<=) (select __anonstruct_Item_4_existent_it_21_at_L it)
     (#"whole_program.jc" 184 54 66# "expl:Integer cast" (Int32.of_int (1)))))
  
  
end

theory Logic_all_valid_existence

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_valid_existence 
  
  use import Logic_get_item_t 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate all_valid_existence (map_17 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_17_29_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_17_29_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_get_item_t_61_at_L : (memory voidP Int32.t))
  =
     (forall i_4 : int.
      ((((<=) (0) i_4) /\
       ((<=) i_4
       (Int32.to_int
       (select __anonstruct_Map_5_capacity_map_17_29_at_L map_17)))) ->
       (valid_existence
       (get_item_t map_17 i_4 __anonstruct_Map_5_items_map_17_29_at_L)
       __anonstruct_Item_4_existent_get_item_t_61_at_L)))
  
  
end

theory Logic_unique_keys

  use import core.Voidp 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_keys_now 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate unique_keys (map_18 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_18_30_at_L : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_items_map_18_30_at_L : (memory
  __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Item_4_existent_get_item_t_62_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_4_key_2_get_item_t_62_at_L : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Key_2_b_get_item_t_62_at_L : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_get_item_t_62_at_L :
  (memory __anonstruct_Key_2 Int32.t))
  =
     (forall i_5 : int.
      (forall j_1 : int.
       ((((<=) (0) i_5) /\
        (((<) i_5
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_18_30_at_L map_18)))
        /\
        (((>)
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_18_30_at_L map_18)) j_1)
        /\
        (((>) j_1 i_5) /\
        ((item_exists_t
         (get_item_t map_18 i_5 __anonstruct_Map_5_items_map_18_30_at_L)
         __anonstruct_Item_4_existent_get_item_t_62_at_L)
        /\
        (item_exists_t
        (get_item_t map_18 j_1 __anonstruct_Map_5_items_map_18_30_at_L)
        __anonstruct_Item_4_existent_get_item_t_62_at_L)))))) ->
        (not
        (compare_keys_now
        (get_key_t
        (get_item_t map_18 i_5 __anonstruct_Map_5_items_map_18_30_at_L)
        __anonstruct_Item_4_key_2_get_item_t_62_at_L)
        (get_key_t
        (get_item_t map_18 j_1 __anonstruct_Map_5_items_map_18_30_at_L)
        __anonstruct_Item_4_key_2_get_item_t_62_at_L)
        __anonstruct_Key_2_b_get_item_t_62_at_L
        __anonstruct_Key_2_b_get_item_t_62_at_L
        __anonstruct_Key_2_a_get_item_t_62_at_L
        __anonstruct_Key_2_a_get_item_t_62_at_L)))))
  
  
end

theory Logic_count_lowers

  use import Root___anonstruct_Map_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate count_lowers (map_19 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_count_map_19_33_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_count_map_19_33_at_L1 : (memory
  __anonstruct_Map_5 Int32.t))
  =
     ((=)
     (Int32.to_int (select __anonstruct_Map_5_count_map_19_33_at_L1 map_19))
     (Int.(+)
     (Int32.to_int (select __anonstruct_Map_5_count_map_19_33_at_L2 map_19))
     (1)))
  
  
end

theory Logic_no_new

  use import core.Voidp 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_exists_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_items 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate no_new (map_24 : (pointer __anonstruct_Map_5))
  (__anonstruct_Map_5_capacity_map_24_39_at_L2 : (memory __anonstruct_Map_5
  Int32.t)) (__anonstruct_Map_5_capacity_map_24_39_at_L1 : (memory
  __anonstruct_Map_5 Int32.t)) (__anonstruct_Map_5_items_map_24_39_at_L2 :
  (memory __anonstruct_Map_5 (pointer voidP)))
  (__anonstruct_Map_5_items_map_24_39_at_L1 : (memory __anonstruct_Map_5
  (pointer voidP))) (__anonstruct_Item_4_existent_get_item_t_77_at_L2 :
  (memory voidP Int32.t)) (__anonstruct_Item_4_existent_get_item_t_77_at_L1 :
  (memory voidP Int32.t)) (__anonstruct_Item_4_value_2_get_item_t_77_at_L2 :
  (memory voidP (pointer __anonstruct_Value_3)))
  (__anonstruct_Item_4_value_2_get_item_t_77_at_L1 : (memory voidP (pointer
  __anonstruct_Value_3))) (__anonstruct_Item_4_key_2_get_item_t_77_at_L2 :
  (memory voidP (pointer __anonstruct_Key_2)))
  (__anonstruct_Item_4_key_2_get_item_t_77_at_L1 : (memory voidP (pointer
  __anonstruct_Key_2))) (__anonstruct_Value_3_d_get_item_t_77_at_L2 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Value_3_d_get_item_t_77_at_L1
  : (memory __anonstruct_Value_3 Int32.t))
  (__anonstruct_Value_3_c_get_item_t_77_at_L2 : (memory __anonstruct_Value_3
  Int32.t)) (__anonstruct_Value_3_c_get_item_t_77_at_L1 : (memory
  __anonstruct_Value_3 Int32.t)) (__anonstruct_Key_2_b_get_item_t_77_at_L2 :
  (memory __anonstruct_Key_2 Int32.t))
  (__anonstruct_Key_2_b_get_item_t_77_at_L1 : (memory __anonstruct_Key_2
  Int32.t)) (__anonstruct_Key_2_a_get_item_t_77_at_L2 : (memory
  __anonstruct_Key_2 Int32.t)) (__anonstruct_Key_2_a_get_item_t_77_at_L1 :
  (memory __anonstruct_Key_2 Int32.t))
  =
     (forall i_8 : int.
      ((((<=) (0) i_8) /\
       (((<) i_8
        (Int32.to_int
        (select __anonstruct_Map_5_capacity_map_24_39_at_L2 map_24)))
       /\
       (item_exists_t
       (get_item_t map_24 i_8 __anonstruct_Map_5_items_map_24_39_at_L2)
       __anonstruct_Item_4_existent_get_item_t_77_at_L2))) ->
       (exists j_3 : int.
        (((<=) (0) j_3) /\
        (((<=) j_3
         (Int32.to_int
         (select __anonstruct_Map_5_capacity_map_24_39_at_L1 map_24)))
        /\
        ((item_exists_t
         (get_item_t map_24 j_3 __anonstruct_Map_5_items_map_24_39_at_L1)
         __anonstruct_Item_4_existent_get_item_t_77_at_L1)
        /\
        (compare_items
        (get_item_t map_24 i_8 __anonstruct_Map_5_items_map_24_39_at_L2)
        (get_item_t map_24 j_3 __anonstruct_Map_5_items_map_24_39_at_L1)
        __anonstruct_Item_4_value_2_get_item_t_77_at_L2
        __anonstruct_Item_4_value_2_get_item_t_77_at_L1
        __anonstruct_Item_4_key_2_get_item_t_77_at_L2
        __anonstruct_Item_4_key_2_get_item_t_77_at_L1
        __anonstruct_Value_3_d_get_item_t_77_at_L2
        __anonstruct_Value_3_d_get_item_t_77_at_L1
        __anonstruct_Value_3_c_get_item_t_77_at_L2
        __anonstruct_Value_3_c_get_item_t_77_at_L1
        __anonstruct_Key_2_b_get_item_t_77_at_L2
        __anonstruct_Key_2_b_get_item_t_77_at_L1
        __anonstruct_Key_2_a_get_item_t_77_at_L2
        __anonstruct_Key_2_a_get_item_t_77_at_L1)))))))
  
  
end

module Function_initializeMap

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val initializeMap
  (map_2 : (pointer __anonstruct_Map_5)) 
   (size : Int32.t) 
    (voidP_items_82_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Value_3_items_82_alloc_table : ref (alloc_table
      __anonstruct_Value_3)) 
      (__anonstruct_Key_2_items_82_alloc_table : ref (alloc_table
       __anonstruct_Key_2)) 
       (voidP_items_82_tag_table : ref (tag_table voidP)) 
        (__anonstruct_Value_3_items_82_tag_table : ref (tag_table
         __anonstruct_Value_3)) 
         (__anonstruct_Key_2_items_82_tag_table : ref (tag_table
          __anonstruct_Key_2)) 
          (__anonstruct_Map_5_count_map_2_41 : ref (memory __anonstruct_Map_5
           Int32.t)) 
           (__anonstruct_Map_5_capacity_map_2_41 : ref (memory
            __anonstruct_Map_5 Int32.t)) 
            (__anonstruct_Map_5_items_map_2_41 : ref (memory
             __anonstruct_Map_5 (pointer voidP))) 
             (__anonstruct_Item_4_existent_items_82 : ref (memory voidP
              Int32.t)) 
              (__anonstruct_Map_5_map_2_41_alloc_table : (alloc_table
               __anonstruct_Map_5)) 
               (__anonstruct_Item_4_value_2_items_82 : (memory voidP (pointer
                __anonstruct_Value_3))) 
                (__anonstruct_Item_4_key_2_items_82 : (memory voidP (pointer
                 __anonstruct_Key_2))) 
                 (__anonstruct_Key_2_b_items_82 : (memory __anonstruct_Key_2
                  Int32.t)) 
                  (__anonstruct_Key_2_a_items_82 : (memory __anonstruct_Key_2
                   Int32.t)) : Int32.t
                   requires { true } reads {
                   __anonstruct_Item_4_existent_items_82,
                   __anonstruct_Key_2_items_82_alloc_table,
                   __anonstruct_Map_5_capacity_map_2_41,
                   __anonstruct_Map_5_count_map_2_41,
                   __anonstruct_Map_5_items_map_2_41,
                   __anonstruct_Value_3_items_82_alloc_table,
                   voidP_items_82_alloc_table, voidP_items_82_tag_table }
                   writes { __anonstruct_Item_4_existent_items_82,
                   __anonstruct_Key_2_items_82_alloc_table,
                   __anonstruct_Key_2_items_82_tag_table,
                   __anonstruct_Map_5_capacity_map_2_41,
                   __anonstruct_Map_5_count_map_2_41,
                   __anonstruct_Map_5_items_map_2_41,
                   __anonstruct_Value_3_items_82_alloc_table,
                   __anonstruct_Value_3_items_82_tag_table,
                   voidP_items_82_alloc_table, voidP_items_82_tag_table }
                   ensures {
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 319 42 54#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       ((=)
                       (offset_max !voidP_items_82_alloc_table
                       (select !__anonstruct_Map_5_items_map_2_41 map_2))
                       (Int.(-) (Int32.to_int size) (1)))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 293 12 50#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 322 44 56#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       ((strict_left_valid_struct___anonstruct_Item_4
                        (select !__anonstruct_Map_5_items_map_2_41 map_2) (0)
                        !__anonstruct_Key_2_items_82_alloc_table
                        !__anonstruct_Value_3_items_82_alloc_table
                        !voidP_items_82_alloc_table
                        __anonstruct_Item_4_key_2_items_82
                        __anonstruct_Item_4_value_2_items_82)
                       /\
                       (right_valid_struct___anonstruct_Item_4
                       (select !__anonstruct_Map_5_items_map_2_41 map_2)
                       (Int.(-_) 1) !__anonstruct_Key_2_items_82_alloc_table
                       !__anonstruct_Value_3_items_82_alloc_table
                       !voidP_items_82_alloc_table
                       __anonstruct_Item_4_key_2_items_82
                       __anonstruct_Item_4_value_2_items_82))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 294 12 50#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 324 46 58#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (Int32.(=)
                       (select !__anonstruct_Map_5_capacity_map_2_41 map_2)
                       size)))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 295 12 44#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 326 48 60#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (Int32.(=)
                       (select !__anonstruct_Map_5_count_map_2_41 map_2)
                       (#"whole_program.jc" 327 62 74# "expl:Integer cast"
                       (Int32.of_int (0))))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 296 12 46#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 328 50 62#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (is_valid_map map_2 !voidP_items_82_alloc_table
                       !__anonstruct_Value_3_items_82_alloc_table
                       !__anonstruct_Key_2_items_82_alloc_table
                       !__anonstruct_Map_5_count_map_2_41
                       !__anonstruct_Map_5_capacity_map_2_41
                       !__anonstruct_Map_5_items_map_2_41
                       !__anonstruct_Item_4_existent_items_82
                       __anonstruct_Item_4_value_2_items_82
                       __anonstruct_Item_4_key_2_items_82
                       __anonstruct_Key_2_b_items_82
                       __anonstruct_Key_2_a_items_82)))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 297 12 102#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 330 52 64#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (forall i_12 : int.
                        ((((<=) (0) i_12) /\
                         ((<) i_12
                         (Int32.to_int
                         (select !__anonstruct_Map_5_capacity_map_2_41 map_2))))
                         ->
                         (Int32.(=)
                         (select !__anonstruct_Item_4_existent_items_82
                         (shift
                         (select !__anonstruct_Map_5_items_map_2_41 map_2)
                         i_12)) (#"whole_program.jc" 336 47 59#
                         "expl:Integer cast" (Int32.of_int (0))))))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 298 12 56#
                     "expl:Ensures clause"
                     ((Int32.(=) result (#"whole_program.jc" 337 53 65#
                      "expl:Integer cast" (Int32.of_int (0)))) ->
                      (fresh_alloc_struct___anonstruct_Item_4
                      (select !__anonstruct_Map_5_items_map_2_41 map_2) (0)
                      (old !__anonstruct_Key_2_items_82_alloc_table) (old
                      !__anonstruct_Value_3_items_82_alloc_table) (old
                      !voidP_items_82_alloc_table)
                      __anonstruct_Item_4_key_2_items_82
                      __anonstruct_Item_4_value_2_items_82)))))))))))))))) }
  
end

module Function_initializeMap_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_4 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_valid_map 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val initializeMap
  (map_2 : (pointer __anonstruct_Map_5)) 
   (size : Int32.t) 
    (voidP_items_82_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Value_3_items_82_alloc_table : ref (alloc_table
      __anonstruct_Value_3)) 
      (__anonstruct_Key_2_items_82_alloc_table : ref (alloc_table
       __anonstruct_Key_2)) 
       (voidP_items_82_tag_table : ref (tag_table voidP)) 
        (__anonstruct_Value_3_items_82_tag_table : ref (tag_table
         __anonstruct_Value_3)) 
         (__anonstruct_Key_2_items_82_tag_table : ref (tag_table
          __anonstruct_Key_2)) 
          (__anonstruct_Map_5_count_map_2_41 : ref (memory __anonstruct_Map_5
           Int32.t)) 
           (__anonstruct_Map_5_capacity_map_2_41 : ref (memory
            __anonstruct_Map_5 Int32.t)) 
            (__anonstruct_Map_5_items_map_2_41 : ref (memory
             __anonstruct_Map_5 (pointer voidP))) 
             (__anonstruct_Item_4_existent_items_82 : ref (memory voidP
              Int32.t)) 
              (__anonstruct_Map_5_map_2_41_alloc_table : (alloc_table
               __anonstruct_Map_5)) 
               (__anonstruct_Item_4_value_2_items_82 : (memory voidP (pointer
                __anonstruct_Value_3))) 
                (__anonstruct_Item_4_key_2_items_82 : (memory voidP (pointer
                 __anonstruct_Key_2))) 
                 (__anonstruct_Key_2_b_items_82 : (memory __anonstruct_Key_2
                  Int32.t)) 
                  (__anonstruct_Key_2_a_items_82 : (memory __anonstruct_Key_2
                   Int32.t)) : Int32.t
                   requires {
                     ("expl:Internal"
                     (#"whole_program.jc" 314 12 242# "expl:Requires clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 289 13 24#
                      "expl:Requires clause"
                      (#"whole_program.jc" 314 12 242# "expl:Requires clause"
                      ((#"whole_program.jc" 314 12 242#
                       "expl:Requires clause"
                       ((<=)
                       (offset_min __anonstruct_Map_5_map_2_41_alloc_table
                       map_2) (0)))
                      /\
                      (#"whole_program.jc" 314 12 242# "expl:Requires clause"
                      ((#"whole_program.jc" 314 12 242#
                       "expl:Requires clause"
                       ((>=)
                       (offset_max __anonstruct_Map_5_map_2_41_alloc_table
                       map_2) (0)))
                      /\
                      (#"whole_program.jc" 314 12 242# "expl:Requires clause"
                      ((=) true true)))))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 290 13 22#
                     "expl:Requires clause"
                     (Int32.(>=) size (#"whole_program.jc" 317 31 43#
                     "expl:Integer cast" (Int32.of_int (0)))))))) }
                   reads { __anonstruct_Item_4_existent_items_82,
                   __anonstruct_Key_2_items_82_alloc_table,
                   __anonstruct_Map_5_capacity_map_2_41,
                   __anonstruct_Map_5_count_map_2_41,
                   __anonstruct_Map_5_items_map_2_41,
                   __anonstruct_Value_3_items_82_alloc_table,
                   voidP_items_82_alloc_table, voidP_items_82_tag_table }
                   writes { __anonstruct_Item_4_existent_items_82,
                   __anonstruct_Key_2_items_82_alloc_table,
                   __anonstruct_Key_2_items_82_tag_table,
                   __anonstruct_Map_5_capacity_map_2_41,
                   __anonstruct_Map_5_count_map_2_41,
                   __anonstruct_Map_5_items_map_2_41,
                   __anonstruct_Value_3_items_82_alloc_table,
                   __anonstruct_Value_3_items_82_tag_table,
                   voidP_items_82_alloc_table, voidP_items_82_tag_table }
                   ensures {
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 319 42 54#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       ((=)
                       (offset_max !voidP_items_82_alloc_table
                       (select !__anonstruct_Map_5_items_map_2_41 map_2))
                       (Int.(-) (Int32.to_int size) (1)))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 293 12 50#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 322 44 56#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       ((strict_left_valid_struct___anonstruct_Item_4
                        (select !__anonstruct_Map_5_items_map_2_41 map_2) (0)
                        !__anonstruct_Key_2_items_82_alloc_table
                        !__anonstruct_Value_3_items_82_alloc_table
                        !voidP_items_82_alloc_table
                        __anonstruct_Item_4_key_2_items_82
                        __anonstruct_Item_4_value_2_items_82)
                       /\
                       (right_valid_struct___anonstruct_Item_4
                       (select !__anonstruct_Map_5_items_map_2_41 map_2)
                       (Int.(-_) 1) !__anonstruct_Key_2_items_82_alloc_table
                       !__anonstruct_Value_3_items_82_alloc_table
                       !voidP_items_82_alloc_table
                       __anonstruct_Item_4_key_2_items_82
                       __anonstruct_Item_4_value_2_items_82))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 294 12 50#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 324 46 58#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (Int32.(=)
                       (select !__anonstruct_Map_5_capacity_map_2_41 map_2)
                       size)))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 295 12 44#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 326 48 60#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (Int32.(=)
                       (select !__anonstruct_Map_5_count_map_2_41 map_2)
                       (#"whole_program.jc" 327 62 74# "expl:Integer cast"
                       (Int32.of_int (0))))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 296 12 46#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 328 50 62#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (is_valid_map map_2 !voidP_items_82_alloc_table
                       !__anonstruct_Value_3_items_82_alloc_table
                       !__anonstruct_Key_2_items_82_alloc_table
                       !__anonstruct_Map_5_count_map_2_41
                       !__anonstruct_Map_5_capacity_map_2_41
                       !__anonstruct_Map_5_items_map_2_41
                       !__anonstruct_Item_4_existent_items_82
                       __anonstruct_Item_4_value_2_items_82
                       __anonstruct_Item_4_key_2_items_82
                       __anonstruct_Key_2_b_items_82
                       __anonstruct_Key_2_a_items_82)))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 292 12 64#
                     "expl:Ensures clause"
                     ((#"/home/nik/Projects/ver/hw4/map.h" 297 12 102#
                      "expl:Ensures clause"
                      ((Int32.(=) result (#"whole_program.jc" 330 52 64#
                       "expl:Integer cast" (Int32.of_int (0)))) ->
                       (forall i_12 : int.
                        ((((<=) (0) i_12) /\
                         ((<) i_12
                         (Int32.to_int
                         (select !__anonstruct_Map_5_capacity_map_2_41 map_2))))
                         ->
                         (Int32.(=)
                         (select !__anonstruct_Item_4_existent_items_82
                         (shift
                         (select !__anonstruct_Map_5_items_map_2_41 map_2)
                         i_12)) (#"whole_program.jc" 336 47 59#
                         "expl:Integer cast" (Int32.of_int (0))))))))
                     /\
                     (#"/home/nik/Projects/ver/hw4/map.h" 298 12 56#
                     "expl:Ensures clause"
                     ((Int32.(=) result (#"whole_program.jc" 337 53 65#
                      "expl:Integer cast" (Int32.of_int (0)))) ->
                      (fresh_alloc_struct___anonstruct_Item_4
                      (select !__anonstruct_Map_5_items_map_2_41 map_2) (0)
                      (old !__anonstruct_Key_2_items_82_alloc_table) (old
                      !__anonstruct_Value_3_items_82_alloc_table) (old
                      !voidP_items_82_alloc_table)
                      __anonstruct_Item_4_key_2_items_82
                      __anonstruct_Item_4_value_2_items_82)))))))))))))))) }
  
end

module Function_addElement

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_capacity 
  
  use import Logic_no_mchg 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val addElement
  (map_0 : (pointer __anonstruct_Map_5)) 
   (key_0 : (pointer __anonstruct_Key_2)) 
    (value : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Map_5_count_map_42 : ref (memory __anonstruct_Map_5
      Int32.t)) 
      (__anonstruct_Map_5_items_map_42 : ref (memory __anonstruct_Map_5
       (pointer voidP))) 
       (__anonstruct_Item_4_existent_items_86 : ref (memory voidP Int32.t)) 
        (__anonstruct_Value_3_d_items_86 : ref (memory __anonstruct_Value_3
         Int32.t)) 
         (__anonstruct_Value_3_c_items_86 : ref (memory __anonstruct_Value_3
          Int32.t)) 
          (__anonstruct_Key_2_b_items_86 : ref (memory __anonstruct_Key_2
           Int32.t)) 
           (__anonstruct_Key_2_a_items_86 : ref (memory __anonstruct_Key_2
            Int32.t)) 
            (voidP_items_86_alloc_table : (alloc_table voidP)) 
             (__anonstruct_Value_3_items_86_alloc_table : (alloc_table
              __anonstruct_Value_3)) 
              (__anonstruct_Value_3_value_44_alloc_table : (alloc_table
               __anonstruct_Value_3)) 
               (__anonstruct_Map_5_map_42_alloc_table : (alloc_table
                __anonstruct_Map_5)) 
                (__anonstruct_Key_2_items_86_alloc_table : (alloc_table
                 __anonstruct_Key_2)) 
                 (__anonstruct_Key_2_key_43_alloc_table : (alloc_table
                  __anonstruct_Key_2)) 
                  (voidP_items_86_tag_table : (tag_table voidP)) 
                   (__anonstruct_Map_5_capacity_map_42 : (memory
                    __anonstruct_Map_5 Int32.t)) 
                    (__anonstruct_Item_4_value_2_items_86 : (memory voidP
                     (pointer __anonstruct_Value_3))) 
                     (__anonstruct_Item_4_key_2_items_86 : (memory voidP
                      (pointer __anonstruct_Key_2))) 
                      (__anonstruct_Value_3_d_value_44 : (memory
                       __anonstruct_Value_3 Int32.t)) 
                       (__anonstruct_Value_3_c_value_44 : (memory
                        __anonstruct_Value_3 Int32.t)) 
                        (__anonstruct_Key_2_b_key_43 : (memory
                         __anonstruct_Key_2 Int32.t)) 
                         (__anonstruct_Key_2_a_key_43 : (memory
                          __anonstruct_Key_2 Int32.t)) : Int32.t
                          requires { true } reads {
                          __anonstruct_Item_4_existent_items_86,
                          __anonstruct_Key_2_a_items_86,
                          __anonstruct_Key_2_b_items_86,
                          __anonstruct_Map_5_count_map_42,
                          __anonstruct_Map_5_items_map_42,
                          __anonstruct_Value_3_c_items_86,
                          __anonstruct_Value_3_d_items_86 } writes {
                          __anonstruct_Item_4_existent_items_86,
                          __anonstruct_Key_2_a_items_86,
                          __anonstruct_Key_2_b_items_86,
                          __anonstruct_Map_5_count_map_42,
                          __anonstruct_Map_5_items_map_42,
                          __anonstruct_Value_3_c_items_86,
                          __anonstruct_Value_3_d_items_86 }
                          ensures {
                            ((((((((#"whole_program.jc" 530 10 334#
                                   "expl:Assigns clause"
                                   (not_assigns
                                   __anonstruct_Key_2_items_86_alloc_table
                                   __anonstruct_Key_2_items_86_alloc_table
                                   (old !__anonstruct_Key_2_a_items_86)
                                   !__anonstruct_Key_2_a_items_86
                                   (pset_deref
                                   __anonstruct_Item_4_key_2_items_86
                                   (pset_range
                                   (pset_deref (old
                                   !__anonstruct_Map_5_items_map_42)
                                   (pset_singleton map_0)) (0)
                                   (Int.(-)
                                   (Int32.to_int
                                   (select __anonstruct_Map_5_capacity_map_42
                                   map_0)) (1))))))
                                  /\
                                  (#"whole_program.jc" 530 10 334#
                                  "expl:Assigns clause"
                                  (not_assigns
                                  __anonstruct_Key_2_items_86_alloc_table
                                  __anonstruct_Key_2_items_86_alloc_table
                                  (old !__anonstruct_Key_2_b_items_86)
                                  !__anonstruct_Key_2_b_items_86
                                  (pset_deref
                                  __anonstruct_Item_4_key_2_items_86
                                  (pset_range
                                  (pset_deref (old
                                  !__anonstruct_Map_5_items_map_42)
                                  (pset_singleton map_0)) (0)
                                  (Int.(-)
                                  (Int32.to_int
                                  (select __anonstruct_Map_5_capacity_map_42
                                  map_0)) (1)))))))
                                 /\
                                 (#"whole_program.jc" 530 10 334#
                                 "expl:Assigns clause"
                                 (not_assigns
                                 __anonstruct_Value_3_items_86_alloc_table
                                 __anonstruct_Value_3_items_86_alloc_table
                                 (old !__anonstruct_Value_3_c_items_86)
                                 !__anonstruct_Value_3_c_items_86
                                 (pset_deref
                                 __anonstruct_Item_4_value_2_items_86
                                 (pset_range
                                 (pset_deref (old
                                 !__anonstruct_Map_5_items_map_42)
                                 (pset_singleton map_0)) (0)
                                 (Int.(-)
                                 (Int32.to_int
                                 (select __anonstruct_Map_5_capacity_map_42
                                 map_0)) (1)))))))
                                /\
                                (#"whole_program.jc" 530 10 334#
                                "expl:Assigns clause"
                                (not_assigns
                                __anonstruct_Value_3_items_86_alloc_table
                                __anonstruct_Value_3_items_86_alloc_table
                                (old !__anonstruct_Value_3_d_items_86)
                                !__anonstruct_Value_3_d_items_86
                                (pset_deref
                                __anonstruct_Item_4_value_2_items_86
                                (pset_range
                                (pset_deref (old
                                !__anonstruct_Map_5_items_map_42)
                                (pset_singleton map_0)) (0)
                                (Int.(-)
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_42
                                map_0)) (1)))))))
                               /\
                               (#"whole_program.jc" 530 10 334#
                               "expl:Assigns clause"
                               (not_assigns voidP_items_86_alloc_table
                               voidP_items_86_alloc_table (old
                               !__anonstruct_Item_4_existent_items_86)
                               !__anonstruct_Item_4_existent_items_86
                               (pset_range
                               (pset_deref (old
                               !__anonstruct_Map_5_items_map_42)
                               (pset_singleton map_0)) (0)
                               (Int.(-)
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_42
                               map_0)) (1))))))
                              /\
                              (#"whole_program.jc" 530 10 334#
                              "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Map_5_map_42_alloc_table
                              __anonstruct_Map_5_map_42_alloc_table (old
                              !__anonstruct_Map_5_items_map_42)
                              !__anonstruct_Map_5_items_map_42 pset_empty)))
                             /\
                             (#"whole_program.jc" 530 10 334#
                             "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Map_5_map_42_alloc_table
                             __anonstruct_Map_5_map_42_alloc_table (old
                             !__anonstruct_Map_5_count_map_42)
                             !__anonstruct_Map_5_count_map_42
                             (pset_singleton map_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 316 12 24#
                             "expl:Ensures clause"
                             (Int32.(<=) (#"whole_program.jc" 537 33 45#
                             "expl:Integer cast" (Int32.of_int (0))) result))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 316 17 29#
                             "expl:Ensures clause"
                             (Int32.(<=) result
                             (#"whole_program.jc" 538 45 57#
                             "expl:Integer cast" (Int32.of_int (1)))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 317 12 29#
                             "expl:Ensures clause"
                             (is_valid_map map_0 voidP_items_86_alloc_table
                             __anonstruct_Value_3_items_86_alloc_table
                             __anonstruct_Key_2_items_86_alloc_table
                             !__anonstruct_Map_5_count_map_42
                             __anonstruct_Map_5_capacity_map_42
                             !__anonstruct_Map_5_items_map_42
                             !__anonstruct_Item_4_existent_items_86
                             __anonstruct_Item_4_value_2_items_86
                             __anonstruct_Item_4_key_2_items_86
                             !__anonstruct_Key_2_b_items_86
                             !__anonstruct_Key_2_a_items_86))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 318 12 41#
                             "expl:Ensures clause"
                             (same_capacity map_0
                             __anonstruct_Map_5_capacity_map_42
                             __anonstruct_Map_5_capacity_map_42))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 319 12 46#
                             "expl:Ensures clause"
                             (compare_keys key_0 key_0
                             __anonstruct_Key_2_b_key_43
                             __anonstruct_Key_2_b_key_43
                             __anonstruct_Key_2_a_key_43
                             __anonstruct_Key_2_a_key_43))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 320 12 52#
                             "expl:Ensures clause"
                             (compare_values value value
                             __anonstruct_Value_3_d_value_44
                             __anonstruct_Value_3_d_value_44
                             __anonstruct_Value_3_c_value_44
                             __anonstruct_Value_3_c_value_44))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 322 12 305#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 545 54 66#
                              "expl:Integer cast" (Int32.of_int (1)))) ->
                              (exists i_13_0 : int.
                               (((<=) (0) i_13_0) /\
                               (((<) i_13_0
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_42
                                map_0)))
                               /\
                               ((compare_keys
                                (get_key_t
                                (get_item_t map_0 i_13_0
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_key_2_items_86) key_0
                                __anonstruct_Key_2_b_key_43
                                !__anonstruct_Key_2_b_items_86
                                __anonstruct_Key_2_a_key_43
                                !__anonstruct_Key_2_a_items_86)
                               /\
                               ((compare_values
                                (get_value_t
                                (get_item_t map_0 i_13_0
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_value_2_items_86) value
                                __anonstruct_Value_3_d_value_44
                                !__anonstruct_Value_3_d_items_86
                                __anonstruct_Value_3_c_value_44
                                !__anonstruct_Value_3_c_items_86)
                               /\
                               (Int32.(=)
                               (select !__anonstruct_Item_4_existent_items_86
                               (shift
                               (select !__anonstruct_Map_5_items_map_42
                               map_0) i_13_0))
                               (#"whole_program.jc" 561 49 61#
                               "expl:Integer cast" (Int32.of_int (1)))))))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 328 12 318#
                             "expl:Ensures clause"
                             (((Int32.(=) result
                               (#"whole_program.jc" 562 58 70#
                               "expl:Integer cast" (Int32.of_int (1)))) ->
                               (exists i_14 : int.
                                (((<=) (0) i_14) /\
                                (((<) i_14
                                 (Int32.to_int
                                 (select __anonstruct_Map_5_capacity_map_42
                                 map_0)))
                                /\
                                ((compare_keys
                                 (get_key_t
                                 (get_item_t map_0 i_14
                                 !__anonstruct_Map_5_items_map_42)
                                 __anonstruct_Item_4_key_2_items_86) key_0
                                 __anonstruct_Key_2_b_key_43
                                 !__anonstruct_Key_2_b_items_86
                                 __anonstruct_Key_2_a_key_43
                                 !__anonstruct_Key_2_a_items_86)
                                /\
                                (Int32.(=)
                                (select
                                !__anonstruct_Item_4_existent_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_14)) (#"whole_program.jc" 574 53 65#
                                "expl:Integer cast" (Int32.of_int (1)))))))))
                              ->
                              (Int32.(=)
                              (select !__anonstruct_Map_5_count_map_42 map_0)
                              (select (old !__anonstruct_Map_5_count_map_42)
                              map_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 328 12 318#
                             "expl:Ensures clause"
                             ((not
                              ((Int32.(=) result
                               (#"whole_program.jc" 577 62 74#
                               "expl:Integer cast" (Int32.of_int (1)))) ->
                               (exists i_15 : int.
                                (((<=) (0) i_15) /\
                                (((<) i_15
                                 (Int32.to_int
                                 (select __anonstruct_Map_5_capacity_map_42
                                 map_0)))
                                /\
                                ((compare_keys
                                 (get_key_t
                                 (get_item_t map_0 i_15
                                 !__anonstruct_Map_5_items_map_42)
                                 __anonstruct_Item_4_key_2_items_86) key_0
                                 __anonstruct_Key_2_b_key_43
                                 !__anonstruct_Key_2_b_items_86
                                 __anonstruct_Key_2_a_key_43
                                 !__anonstruct_Key_2_a_items_86)
                                /\
                                (Int32.(=)
                                (select
                                !__anonstruct_Item_4_existent_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_15)) (#"whole_program.jc" 590 57 69#
                                "expl:Integer cast" (Int32.of_int (1))))))))))
                              ->
                              ((=)
                              (Int32.to_int
                              (select !__anonstruct_Map_5_count_map_42 map_0))
                              (Int.(+)
                              (Int32.to_int
                              (select (old !__anonstruct_Map_5_count_map_42)
                              map_0)) (1)))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 334 12 58#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 594 58 70#
                              "expl:Integer cast" (Int32.of_int (1)))) ->
                              (no_mchg map_0 key_0
                              __anonstruct_Map_5_capacity_map_42
                              __anonstruct_Map_5_capacity_map_42
                              !__anonstruct_Map_5_items_map_42 (old
                              !__anonstruct_Map_5_items_map_42)
                              !__anonstruct_Item_4_existent_items_86 (old
                              !__anonstruct_Item_4_existent_items_86)
                              __anonstruct_Item_4_value_2_items_86
                              __anonstruct_Item_4_value_2_items_86
                              __anonstruct_Item_4_key_2_items_86
                              __anonstruct_Item_4_key_2_items_86
                              !__anonstruct_Value_3_d_items_86 (old
                              !__anonstruct_Value_3_d_items_86)
                              !__anonstruct_Value_3_c_items_86 (old
                              !__anonstruct_Value_3_c_items_86)
                              !__anonstruct_Key_2_b_items_86 (old
                              !__anonstruct_Key_2_b_items_86)
                              __anonstruct_Key_2_b_key_43
                              !__anonstruct_Key_2_a_items_86 (old
                              !__anonstruct_Key_2_a_items_86)
                              __anonstruct_Key_2_a_key_43)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 335 12 76#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 598 60 72#
                              "expl:Integer cast" (Int32.of_int (0)))) ->
                              (Int32.(=)
                              (select (old !__anonstruct_Map_5_count_map_42)
                              map_0)
                              (select __anonstruct_Map_5_capacity_map_42
                              map_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 336 12 203#
                            "expl:Ensures clause"
                            ((Int32.(=) result
                             (#"whole_program.jc" 601 61 73#
                             "expl:Integer cast" (Int32.of_int (0)))) ->
                             (forall i_16 : int.
                              ((((<=) (0) i_16) /\
                               ((<) i_16
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_42
                               map_0)))) ->
                               (not
                               ((Int32.(=)
                                (select !__anonstruct_Key_2_a_items_86
                                (select __anonstruct_Item_4_key_2_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_16)))
                                (select __anonstruct_Key_2_a_key_43 key_0))
                               /\
                               ((Int32.(=)
                                (select !__anonstruct_Key_2_b_items_86
                                (select __anonstruct_Item_4_key_2_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_16)))
                                (select __anonstruct_Key_2_b_key_43 key_0))
                               /\
                               (Int32.(=)
                               (select !__anonstruct_Item_4_existent_items_86
                               (shift
                               (select !__anonstruct_Map_5_items_map_42
                               map_0) i_16)) (#"whole_program.jc" 614 61 73#
                               "expl:Integer cast" (Int32.of_int (1)))))))))))))))))))))))))))))))))))
                            }
  
end

module Function_addElement_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_capacity 
  
  use import Logic_no_mchg 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val addElement
  (map_0 : (pointer __anonstruct_Map_5)) 
   (key_0 : (pointer __anonstruct_Key_2)) 
    (value : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Map_5_count_map_42 : ref (memory __anonstruct_Map_5
      Int32.t)) 
      (__anonstruct_Map_5_items_map_42 : ref (memory __anonstruct_Map_5
       (pointer voidP))) 
       (__anonstruct_Item_4_existent_items_86 : ref (memory voidP Int32.t)) 
        (__anonstruct_Value_3_d_items_86 : ref (memory __anonstruct_Value_3
         Int32.t)) 
         (__anonstruct_Value_3_c_items_86 : ref (memory __anonstruct_Value_3
          Int32.t)) 
          (__anonstruct_Key_2_b_items_86 : ref (memory __anonstruct_Key_2
           Int32.t)) 
           (__anonstruct_Key_2_a_items_86 : ref (memory __anonstruct_Key_2
            Int32.t)) 
            (voidP_items_86_alloc_table : (alloc_table voidP)) 
             (__anonstruct_Value_3_items_86_alloc_table : (alloc_table
              __anonstruct_Value_3)) 
              (__anonstruct_Value_3_value_44_alloc_table : (alloc_table
               __anonstruct_Value_3)) 
               (__anonstruct_Map_5_map_42_alloc_table : (alloc_table
                __anonstruct_Map_5)) 
                (__anonstruct_Key_2_items_86_alloc_table : (alloc_table
                 __anonstruct_Key_2)) 
                 (__anonstruct_Key_2_key_43_alloc_table : (alloc_table
                  __anonstruct_Key_2)) 
                  (voidP_items_86_tag_table : (tag_table voidP)) 
                   (__anonstruct_Map_5_capacity_map_42 : (memory
                    __anonstruct_Map_5 Int32.t)) 
                    (__anonstruct_Item_4_value_2_items_86 : (memory voidP
                     (pointer __anonstruct_Value_3))) 
                     (__anonstruct_Item_4_key_2_items_86 : (memory voidP
                      (pointer __anonstruct_Key_2))) 
                      (__anonstruct_Value_3_d_value_44 : (memory
                       __anonstruct_Value_3 Int32.t)) 
                       (__anonstruct_Value_3_c_value_44 : (memory
                        __anonstruct_Value_3 Int32.t)) 
                        (__anonstruct_Key_2_b_key_43 : (memory
                         __anonstruct_Key_2 Int32.t)) 
                         (__anonstruct_Key_2_a_key_43 : (memory
                          __anonstruct_Key_2 Int32.t)) : Int32.t
                          requires {
                            ("expl:Internal"
                            (#"whole_program.jc" 513 12 1010#
                            "expl:Requires clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 308 13 24#
                             "expl:Requires clause"
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 513 12 1010#
                              "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Map_5_map_42_alloc_table map_0)
                              (0)))
                             /\
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 513 12 1010#
                              "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Map_5_map_42_alloc_table map_0)
                              (0)))
                             /\
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause" ((=) true true)))))))
                            /\
                            (#"whole_program.jc" 513 12 1010#
                            "expl:Requires clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 308 28 39#
                             "expl:Requires clause"
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 513 12 1010#
                              "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Key_2_key_43_alloc_table key_0)
                              (0)))
                             /\
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 513 12 1010#
                              "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Key_2_key_43_alloc_table key_0)
                              (0)))
                             /\
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause" ((=) true true)))))))
                            /\
                            (#"whole_program.jc" 513 12 1010#
                            "expl:Requires clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 308 43 56#
                             "expl:Requires clause"
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 513 12 1010#
                              "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Value_3_value_44_alloc_table
                              value) (0)))
                             /\
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 513 12 1010#
                              "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Value_3_value_44_alloc_table
                              value) (0)))
                             /\
                             (#"whole_program.jc" 513 12 1010#
                             "expl:Requires clause" ((=) true true)))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 309 13 30#
                            "expl:Requires clause"
                            (is_valid_map map_0 voidP_items_86_alloc_table
                            __anonstruct_Value_3_items_86_alloc_table
                            __anonstruct_Key_2_items_86_alloc_table
                            !__anonstruct_Map_5_count_map_42
                            __anonstruct_Map_5_capacity_map_42
                            !__anonstruct_Map_5_items_map_42
                            !__anonstruct_Item_4_existent_items_86
                            __anonstruct_Item_4_value_2_items_86
                            __anonstruct_Item_4_key_2_items_86
                            !__anonstruct_Key_2_b_items_86
                            !__anonstruct_Key_2_a_items_86))))))))) }
                          reads { __anonstruct_Item_4_existent_items_86,
                          __anonstruct_Key_2_a_items_86,
                          __anonstruct_Key_2_b_items_86,
                          __anonstruct_Map_5_count_map_42,
                          __anonstruct_Map_5_items_map_42,
                          __anonstruct_Value_3_c_items_86,
                          __anonstruct_Value_3_d_items_86 } writes {
                          __anonstruct_Item_4_existent_items_86,
                          __anonstruct_Key_2_a_items_86,
                          __anonstruct_Key_2_b_items_86,
                          __anonstruct_Map_5_count_map_42,
                          __anonstruct_Map_5_items_map_42,
                          __anonstruct_Value_3_c_items_86,
                          __anonstruct_Value_3_d_items_86 }
                          ensures {
                            ((((((((#"whole_program.jc" 530 10 334#
                                   "expl:Assigns clause"
                                   (not_assigns
                                   __anonstruct_Key_2_items_86_alloc_table
                                   __anonstruct_Key_2_items_86_alloc_table
                                   (old !__anonstruct_Key_2_a_items_86)
                                   !__anonstruct_Key_2_a_items_86
                                   (pset_deref
                                   __anonstruct_Item_4_key_2_items_86
                                   (pset_range
                                   (pset_deref (old
                                   !__anonstruct_Map_5_items_map_42)
                                   (pset_singleton map_0)) (0)
                                   (Int.(-)
                                   (Int32.to_int
                                   (select __anonstruct_Map_5_capacity_map_42
                                   map_0)) (1))))))
                                  /\
                                  (#"whole_program.jc" 530 10 334#
                                  "expl:Assigns clause"
                                  (not_assigns
                                  __anonstruct_Key_2_items_86_alloc_table
                                  __anonstruct_Key_2_items_86_alloc_table
                                  (old !__anonstruct_Key_2_b_items_86)
                                  !__anonstruct_Key_2_b_items_86
                                  (pset_deref
                                  __anonstruct_Item_4_key_2_items_86
                                  (pset_range
                                  (pset_deref (old
                                  !__anonstruct_Map_5_items_map_42)
                                  (pset_singleton map_0)) (0)
                                  (Int.(-)
                                  (Int32.to_int
                                  (select __anonstruct_Map_5_capacity_map_42
                                  map_0)) (1)))))))
                                 /\
                                 (#"whole_program.jc" 530 10 334#
                                 "expl:Assigns clause"
                                 (not_assigns
                                 __anonstruct_Value_3_items_86_alloc_table
                                 __anonstruct_Value_3_items_86_alloc_table
                                 (old !__anonstruct_Value_3_c_items_86)
                                 !__anonstruct_Value_3_c_items_86
                                 (pset_deref
                                 __anonstruct_Item_4_value_2_items_86
                                 (pset_range
                                 (pset_deref (old
                                 !__anonstruct_Map_5_items_map_42)
                                 (pset_singleton map_0)) (0)
                                 (Int.(-)
                                 (Int32.to_int
                                 (select __anonstruct_Map_5_capacity_map_42
                                 map_0)) (1)))))))
                                /\
                                (#"whole_program.jc" 530 10 334#
                                "expl:Assigns clause"
                                (not_assigns
                                __anonstruct_Value_3_items_86_alloc_table
                                __anonstruct_Value_3_items_86_alloc_table
                                (old !__anonstruct_Value_3_d_items_86)
                                !__anonstruct_Value_3_d_items_86
                                (pset_deref
                                __anonstruct_Item_4_value_2_items_86
                                (pset_range
                                (pset_deref (old
                                !__anonstruct_Map_5_items_map_42)
                                (pset_singleton map_0)) (0)
                                (Int.(-)
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_42
                                map_0)) (1)))))))
                               /\
                               (#"whole_program.jc" 530 10 334#
                               "expl:Assigns clause"
                               (not_assigns voidP_items_86_alloc_table
                               voidP_items_86_alloc_table (old
                               !__anonstruct_Item_4_existent_items_86)
                               !__anonstruct_Item_4_existent_items_86
                               (pset_range
                               (pset_deref (old
                               !__anonstruct_Map_5_items_map_42)
                               (pset_singleton map_0)) (0)
                               (Int.(-)
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_42
                               map_0)) (1))))))
                              /\
                              (#"whole_program.jc" 530 10 334#
                              "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Map_5_map_42_alloc_table
                              __anonstruct_Map_5_map_42_alloc_table (old
                              !__anonstruct_Map_5_items_map_42)
                              !__anonstruct_Map_5_items_map_42 pset_empty)))
                             /\
                             (#"whole_program.jc" 530 10 334#
                             "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Map_5_map_42_alloc_table
                             __anonstruct_Map_5_map_42_alloc_table (old
                             !__anonstruct_Map_5_count_map_42)
                             !__anonstruct_Map_5_count_map_42
                             (pset_singleton map_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 316 12 24#
                             "expl:Ensures clause"
                             (Int32.(<=) (#"whole_program.jc" 537 33 45#
                             "expl:Integer cast" (Int32.of_int (0))) result))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 316 17 29#
                             "expl:Ensures clause"
                             (Int32.(<=) result
                             (#"whole_program.jc" 538 45 57#
                             "expl:Integer cast" (Int32.of_int (1)))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 317 12 29#
                             "expl:Ensures clause"
                             (is_valid_map map_0 voidP_items_86_alloc_table
                             __anonstruct_Value_3_items_86_alloc_table
                             __anonstruct_Key_2_items_86_alloc_table
                             !__anonstruct_Map_5_count_map_42
                             __anonstruct_Map_5_capacity_map_42
                             !__anonstruct_Map_5_items_map_42
                             !__anonstruct_Item_4_existent_items_86
                             __anonstruct_Item_4_value_2_items_86
                             __anonstruct_Item_4_key_2_items_86
                             !__anonstruct_Key_2_b_items_86
                             !__anonstruct_Key_2_a_items_86))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 318 12 41#
                             "expl:Ensures clause"
                             (same_capacity map_0
                             __anonstruct_Map_5_capacity_map_42
                             __anonstruct_Map_5_capacity_map_42))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 319 12 46#
                             "expl:Ensures clause"
                             (compare_keys key_0 key_0
                             __anonstruct_Key_2_b_key_43
                             __anonstruct_Key_2_b_key_43
                             __anonstruct_Key_2_a_key_43
                             __anonstruct_Key_2_a_key_43))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 320 12 52#
                             "expl:Ensures clause"
                             (compare_values value value
                             __anonstruct_Value_3_d_value_44
                             __anonstruct_Value_3_d_value_44
                             __anonstruct_Value_3_c_value_44
                             __anonstruct_Value_3_c_value_44))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 322 12 305#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 545 54 66#
                              "expl:Integer cast" (Int32.of_int (1)))) ->
                              (exists i_13_0 : int.
                               (((<=) (0) i_13_0) /\
                               (((<) i_13_0
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_42
                                map_0)))
                               /\
                               ((compare_keys
                                (get_key_t
                                (get_item_t map_0 i_13_0
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_key_2_items_86) key_0
                                __anonstruct_Key_2_b_key_43
                                !__anonstruct_Key_2_b_items_86
                                __anonstruct_Key_2_a_key_43
                                !__anonstruct_Key_2_a_items_86)
                               /\
                               ((compare_values
                                (get_value_t
                                (get_item_t map_0 i_13_0
                                !__anonstruct_Map_5_items_map_42)
                                __anonstruct_Item_4_value_2_items_86) value
                                __anonstruct_Value_3_d_value_44
                                !__anonstruct_Value_3_d_items_86
                                __anonstruct_Value_3_c_value_44
                                !__anonstruct_Value_3_c_items_86)
                               /\
                               (Int32.(=)
                               (select !__anonstruct_Item_4_existent_items_86
                               (shift
                               (select !__anonstruct_Map_5_items_map_42
                               map_0) i_13_0))
                               (#"whole_program.jc" 561 49 61#
                               "expl:Integer cast" (Int32.of_int (1)))))))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 328 12 318#
                             "expl:Ensures clause"
                             (((Int32.(=) result
                               (#"whole_program.jc" 562 58 70#
                               "expl:Integer cast" (Int32.of_int (1)))) ->
                               (exists i_14 : int.
                                (((<=) (0) i_14) /\
                                (((<) i_14
                                 (Int32.to_int
                                 (select __anonstruct_Map_5_capacity_map_42
                                 map_0)))
                                /\
                                ((compare_keys
                                 (get_key_t
                                 (get_item_t map_0 i_14
                                 !__anonstruct_Map_5_items_map_42)
                                 __anonstruct_Item_4_key_2_items_86) key_0
                                 __anonstruct_Key_2_b_key_43
                                 !__anonstruct_Key_2_b_items_86
                                 __anonstruct_Key_2_a_key_43
                                 !__anonstruct_Key_2_a_items_86)
                                /\
                                (Int32.(=)
                                (select
                                !__anonstruct_Item_4_existent_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_14)) (#"whole_program.jc" 574 53 65#
                                "expl:Integer cast" (Int32.of_int (1)))))))))
                              ->
                              (Int32.(=)
                              (select !__anonstruct_Map_5_count_map_42 map_0)
                              (select (old !__anonstruct_Map_5_count_map_42)
                              map_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 328 12 318#
                             "expl:Ensures clause"
                             ((not
                              ((Int32.(=) result
                               (#"whole_program.jc" 577 62 74#
                               "expl:Integer cast" (Int32.of_int (1)))) ->
                               (exists i_15 : int.
                                (((<=) (0) i_15) /\
                                (((<) i_15
                                 (Int32.to_int
                                 (select __anonstruct_Map_5_capacity_map_42
                                 map_0)))
                                /\
                                ((compare_keys
                                 (get_key_t
                                 (get_item_t map_0 i_15
                                 !__anonstruct_Map_5_items_map_42)
                                 __anonstruct_Item_4_key_2_items_86) key_0
                                 __anonstruct_Key_2_b_key_43
                                 !__anonstruct_Key_2_b_items_86
                                 __anonstruct_Key_2_a_key_43
                                 !__anonstruct_Key_2_a_items_86)
                                /\
                                (Int32.(=)
                                (select
                                !__anonstruct_Item_4_existent_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_15)) (#"whole_program.jc" 590 57 69#
                                "expl:Integer cast" (Int32.of_int (1))))))))))
                              ->
                              ((=)
                              (Int32.to_int
                              (select !__anonstruct_Map_5_count_map_42 map_0))
                              (Int.(+)
                              (Int32.to_int
                              (select (old !__anonstruct_Map_5_count_map_42)
                              map_0)) (1)))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 334 12 58#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 594 58 70#
                              "expl:Integer cast" (Int32.of_int (1)))) ->
                              (no_mchg map_0 key_0
                              __anonstruct_Map_5_capacity_map_42
                              __anonstruct_Map_5_capacity_map_42
                              !__anonstruct_Map_5_items_map_42 (old
                              !__anonstruct_Map_5_items_map_42)
                              !__anonstruct_Item_4_existent_items_86 (old
                              !__anonstruct_Item_4_existent_items_86)
                              __anonstruct_Item_4_value_2_items_86
                              __anonstruct_Item_4_value_2_items_86
                              __anonstruct_Item_4_key_2_items_86
                              __anonstruct_Item_4_key_2_items_86
                              !__anonstruct_Value_3_d_items_86 (old
                              !__anonstruct_Value_3_d_items_86)
                              !__anonstruct_Value_3_c_items_86 (old
                              !__anonstruct_Value_3_c_items_86)
                              !__anonstruct_Key_2_b_items_86 (old
                              !__anonstruct_Key_2_b_items_86)
                              __anonstruct_Key_2_b_key_43
                              !__anonstruct_Key_2_a_items_86 (old
                              !__anonstruct_Key_2_a_items_86)
                              __anonstruct_Key_2_a_key_43)))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 316 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 335 12 76#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 598 60 72#
                              "expl:Integer cast" (Int32.of_int (0)))) ->
                              (Int32.(=)
                              (select (old !__anonstruct_Map_5_count_map_42)
                              map_0)
                              (select __anonstruct_Map_5_capacity_map_42
                              map_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 336 12 203#
                            "expl:Ensures clause"
                            ((Int32.(=) result
                             (#"whole_program.jc" 601 61 73#
                             "expl:Integer cast" (Int32.of_int (0)))) ->
                             (forall i_16 : int.
                              ((((<=) (0) i_16) /\
                               ((<) i_16
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_42
                               map_0)))) ->
                               (not
                               ((Int32.(=)
                                (select !__anonstruct_Key_2_a_items_86
                                (select __anonstruct_Item_4_key_2_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_16)))
                                (select __anonstruct_Key_2_a_key_43 key_0))
                               /\
                               ((Int32.(=)
                                (select !__anonstruct_Key_2_b_items_86
                                (select __anonstruct_Item_4_key_2_items_86
                                (shift
                                (select !__anonstruct_Map_5_items_map_42
                                map_0) i_16)))
                                (select __anonstruct_Key_2_b_key_43 key_0))
                               /\
                               (Int32.(=)
                               (select !__anonstruct_Item_4_existent_items_86
                               (shift
                               (select !__anonstruct_Map_5_items_map_42
                               map_0) i_16)) (#"whole_program.jc" 614 61 73#
                               "expl:Integer cast" (Int32.of_int (1)))))))))))))))))))))))))))))))))))
                            }
  
end

module Function_getElement

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_items 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_1_0 : (pointer __anonstruct_Map_5)) 
   (key_0_0 : (pointer __anonstruct_Key_2)) 
    (value_0 : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Value_3_d_value_0_47 : ref (memory __anonstruct_Value_3
      Int32.t)) 
      (__anonstruct_Value_3_c_value_0_47 : ref (memory __anonstruct_Value_3
       Int32.t)) 
       (voidP_get_item_t_101_alloc_table : (alloc_table voidP)) 
        (__anonstruct_Value_3_get_item_t_101_alloc_table : (alloc_table
         __anonstruct_Value_3)) 
         (__anonstruct_Value_3_value_0_47_alloc_table : (alloc_table
          __anonstruct_Value_3)) 
          (__anonstruct_Map_5_map_1_45_alloc_table : (alloc_table
           __anonstruct_Map_5)) 
           (__anonstruct_Key_2_get_item_t_101_alloc_table : (alloc_table
            __anonstruct_Key_2)) 
            (__anonstruct_Key_2_key_0_46_alloc_table : (alloc_table
             __anonstruct_Key_2)) 
             (voidP_get_item_t_101_tag_table : (tag_table voidP)) 
              (__anonstruct_Map_5_count_map_1_45 : (memory __anonstruct_Map_5
               Int32.t)) 
               (__anonstruct_Map_5_capacity_map_1_45 : (memory
                __anonstruct_Map_5 Int32.t)) 
                (__anonstruct_Map_5_items_map_1_45 : (memory
                 __anonstruct_Map_5 (pointer voidP))) 
                 (__anonstruct_Item_4_existent_get_item_t_101 : (memory voidP
                  Int32.t)) 
                  (__anonstruct_Item_4_value_2_get_item_t_101 : (memory voidP
                   (pointer __anonstruct_Value_3))) 
                   (__anonstruct_Item_4_key_2_get_item_t_101 : (memory voidP
                    (pointer __anonstruct_Key_2))) 
                    (__anonstruct_Value_3_d_get_item_t_101 : (memory
                     __anonstruct_Value_3 Int32.t)) 
                     (__anonstruct_Value_3_c_get_item_t_101 : (memory
                      __anonstruct_Value_3 Int32.t)) 
                      (__anonstruct_Key_2_b_get_item_t_101 : (memory
                       __anonstruct_Key_2 Int32.t)) 
                       (__anonstruct_Key_2_b_key_0_46 : (memory
                        __anonstruct_Key_2 Int32.t)) 
                        (__anonstruct_Key_2_a_get_item_t_101 : (memory
                         __anonstruct_Key_2 Int32.t)) 
                         (__anonstruct_Key_2_a_key_0_46 : (memory
                          __anonstruct_Key_2 Int32.t)) : Int32.t
                          requires { true } reads {
                          __anonstruct_Value_3_c_value_0_47,
                          __anonstruct_Value_3_d_value_0_47 } writes {
                          __anonstruct_Value_3_c_value_0_47,
                          __anonstruct_Value_3_d_value_0_47 }
                          ensures {
                            (((#"whole_program.jc" 916 10 32#
                              "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Value_3_value_0_47_alloc_table
                              __anonstruct_Value_3_value_0_47_alloc_table
                              (old !__anonstruct_Value_3_c_value_0_47)
                              !__anonstruct_Value_3_c_value_0_47
                              (pset_singleton value_0)))
                             /\
                             (#"whole_program.jc" 916 10 32#
                             "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Value_3_value_0_47_alloc_table
                             __anonstruct_Value_3_value_0_47_alloc_table (old
                             !__anonstruct_Value_3_d_value_0_47)
                             !__anonstruct_Value_3_d_value_0_47
                             (pset_singleton value_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             (is_valid_map map_1_0
                             voidP_get_item_t_101_alloc_table
                             __anonstruct_Value_3_get_item_t_101_alloc_table
                             __anonstruct_Key_2_get_item_t_101_alloc_table
                             __anonstruct_Map_5_count_map_1_45
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 358 12 41#
                             "expl:Ensures clause"
                             (same_capacity map_1_0
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_capacity_map_1_45))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 359 12 38#
                             "expl:Ensures clause"
                             (same_count map_1_0
                             __anonstruct_Map_5_count_map_1_45
                             __anonstruct_Map_5_count_map_1_45))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 360 12 38#
                             "expl:Ensures clause"
                             (same_items map_1_0
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Value_3_d_get_item_t_101
                             __anonstruct_Value_3_d_get_item_t_101
                             __anonstruct_Value_3_c_get_item_t_101
                             __anonstruct_Value_3_c_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 361 12 45#
                             "expl:Ensures clause"
                             (compare_keys key_0_0 key_0_0
                             __anonstruct_Key_2_b_key_0_46
                             __anonstruct_Key_2_b_key_0_46
                             __anonstruct_Key_2_a_key_0_46
                             __anonstruct_Key_2_a_key_0_46))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 362 12 23#
                             "expl:Ensures clause"
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Key_2_key_0_46_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Key_2_key_0_46_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause" ((=) true true)))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 363 12 25#
                             "expl:Ensures clause"
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Value_3_value_0_47_alloc_table
                              value_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Value_3_value_0_47_alloc_table
                              value_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause" ((=) true true)))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 365 12 24#
                             "expl:Ensures clause"
                             (Int32.(<=) (#"whole_program.jc" 935 47 59#
                             "expl:Integer cast" (Int32.of_int (0))) result))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 365 17 29#
                             "expl:Ensures clause"
                             (Int32.(<=) result
                             (#"whole_program.jc" 936 59 71#
                             "expl:Integer cast" (Int32.of_int (1)))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 367 12 310#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 937 60 72#
                              "expl:Integer cast" (Int32.of_int (1)))) ->
                              (exists i_17 : int.
                               (((<=) (0) i_17) /\
                               (((<) i_17
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_1_45
                                map_1_0)))
                               /\
                               ((compare_keys key_0_0
                                (get_key_t
                                (get_item_t map_1_0 i_17
                                __anonstruct_Map_5_items_map_1_45)
                                __anonstruct_Item_4_key_2_get_item_t_101)
                                __anonstruct_Key_2_b_get_item_t_101
                                __anonstruct_Key_2_b_key_0_46
                                __anonstruct_Key_2_a_get_item_t_101
                                __anonstruct_Key_2_a_key_0_46)
                               /\
                               ((compare_values value_0
                                (get_value_t
                                (get_item_t map_1_0 i_17
                                __anonstruct_Map_5_items_map_1_45)
                                __anonstruct_Item_4_value_2_get_item_t_101)
                                __anonstruct_Value_3_d_get_item_t_101
                                !__anonstruct_Value_3_d_value_0_47
                                __anonstruct_Value_3_c_get_item_t_101
                                !__anonstruct_Value_3_c_value_0_47)
                               /\
                               (Int32.(=)
                               (select
                               __anonstruct_Item_4_existent_get_item_t_101
                               (shift
                               (select __anonstruct_Map_5_items_map_1_45
                               map_1_0) i_17))
                               (#"whole_program.jc" 956 55 67#
                               "expl:Integer cast" (Int32.of_int (1)))))))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 374 12 260#
                            "expl:Ensures clause"
                            ((Int32.(=) result
                             (#"whole_program.jc" 957 61 73#
                             "expl:Integer cast" (Int32.of_int (0)))) ->
                             ((compare_values value_0 value_0
                              !__anonstruct_Value_3_d_value_0_47 (old
                              !__anonstruct_Value_3_d_value_0_47)
                              !__anonstruct_Value_3_c_value_0_47 (old
                              !__anonstruct_Value_3_c_value_0_47))
                             /\
                             (forall i_18 : int.
                              ((((<=) (0) i_18) /\
                               ((<) i_18
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_1_45
                               map_1_0)))) ->
                               (not
                               ((Int32.(=)
                                (select __anonstruct_Key_2_a_get_item_t_101
                                (select
                                __anonstruct_Item_4_key_2_get_item_t_101
                                (shift
                                (select __anonstruct_Map_5_items_map_1_45
                                map_1_0) i_18)))
                                (select __anonstruct_Key_2_a_key_0_46
                                key_0_0))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Key_2_b_get_item_t_101
                                (select
                                __anonstruct_Item_4_key_2_get_item_t_101
                                (shift
                                (select __anonstruct_Map_5_items_map_1_45
                                map_1_0) i_18)))
                                (select __anonstruct_Key_2_b_key_0_46
                                key_0_0))
                               /\
                               (Int32.(=)
                               (select
                               __anonstruct_Item_4_existent_get_item_t_101
                               (shift
                               (select __anonstruct_Map_5_items_map_1_45
                               map_1_0) i_18))
                               (#"whole_program.jc" 973 63 75#
                               "expl:Integer cast" (Int32.of_int (1))))))))))))))))))))))))))))))))))
                            }
  
end

module Function_getElement_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_3 
  
  use import Root___anonstruct_Map_5 
  
  use import Root___anonstruct_Key_2 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_same_items 
  
  use import Logic_same_count 
  
  use import Logic_same_capacity 
  
  use import Logic_is_valid_map 
  
  use import Logic_get_value_t 
  
  use import Logic_get_key_t 
  
  use import Logic_get_item_t 
  
  use import Logic_compare_values 
  
  use import Logic_compare_keys 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_1_0 : (pointer __anonstruct_Map_5)) 
   (key_0_0 : (pointer __anonstruct_Key_2)) 
    (value_0 : (pointer __anonstruct_Value_3)) 
     (__anonstruct_Value_3_d_value_0_47 : ref (memory __anonstruct_Value_3
      Int32.t)) 
      (__anonstruct_Value_3_c_value_0_47 : ref (memory __anonstruct_Value_3
       Int32.t)) 
       (voidP_get_item_t_101_alloc_table : (alloc_table voidP)) 
        (__anonstruct_Value_3_get_item_t_101_alloc_table : (alloc_table
         __anonstruct_Value_3)) 
         (__anonstruct_Value_3_value_0_47_alloc_table : (alloc_table
          __anonstruct_Value_3)) 
          (__anonstruct_Map_5_map_1_45_alloc_table : (alloc_table
           __anonstruct_Map_5)) 
           (__anonstruct_Key_2_get_item_t_101_alloc_table : (alloc_table
            __anonstruct_Key_2)) 
            (__anonstruct_Key_2_key_0_46_alloc_table : (alloc_table
             __anonstruct_Key_2)) 
             (voidP_get_item_t_101_tag_table : (tag_table voidP)) 
              (__anonstruct_Map_5_count_map_1_45 : (memory __anonstruct_Map_5
               Int32.t)) 
               (__anonstruct_Map_5_capacity_map_1_45 : (memory
                __anonstruct_Map_5 Int32.t)) 
                (__anonstruct_Map_5_items_map_1_45 : (memory
                 __anonstruct_Map_5 (pointer voidP))) 
                 (__anonstruct_Item_4_existent_get_item_t_101 : (memory voidP
                  Int32.t)) 
                  (__anonstruct_Item_4_value_2_get_item_t_101 : (memory voidP
                   (pointer __anonstruct_Value_3))) 
                   (__anonstruct_Item_4_key_2_get_item_t_101 : (memory voidP
                    (pointer __anonstruct_Key_2))) 
                    (__anonstruct_Value_3_d_get_item_t_101 : (memory
                     __anonstruct_Value_3 Int32.t)) 
                     (__anonstruct_Value_3_c_get_item_t_101 : (memory
                      __anonstruct_Value_3 Int32.t)) 
                      (__anonstruct_Key_2_b_get_item_t_101 : (memory
                       __anonstruct_Key_2 Int32.t)) 
                       (__anonstruct_Key_2_b_key_0_46 : (memory
                        __anonstruct_Key_2 Int32.t)) 
                        (__anonstruct_Key_2_a_get_item_t_101 : (memory
                         __anonstruct_Key_2 Int32.t)) 
                         (__anonstruct_Key_2_a_key_0_46 : (memory
                          __anonstruct_Key_2 Int32.t)) : Int32.t
                          requires {
                            ("expl:Internal"
                            (#"whole_program.jc" 902 12 793#
                            "expl:Requires clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 348 13 30#
                             "expl:Requires clause"
                             (is_valid_map map_1_0
                             voidP_get_item_t_101_alloc_table
                             __anonstruct_Value_3_get_item_t_101_alloc_table
                             __anonstruct_Key_2_get_item_t_101_alloc_table
                             __anonstruct_Map_5_count_map_1_45
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101))
                            /\
                            (#"whole_program.jc" 902 12 793#
                            "expl:Requires clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 349 13 24#
                             "expl:Requires clause"
                             (#"whole_program.jc" 902 12 793#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 902 12 793#
                              "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Map_5_map_1_45_alloc_table
                              map_1_0) (0)))
                             /\
                             (#"whole_program.jc" 902 12 793#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 902 12 793#
                              "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Map_5_map_1_45_alloc_table
                              map_1_0) (0)))
                             /\
                             (#"whole_program.jc" 902 12 793#
                             "expl:Requires clause" ((=) true true)))))))
                            /\
                            (#"whole_program.jc" 902 12 793#
                            "expl:Requires clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 350 13 24#
                             "expl:Requires clause"
                             (#"whole_program.jc" 902 12 793#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 902 12 793#
                              "expl:Requires clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Key_2_key_0_46_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"whole_program.jc" 902 12 793#
                             "expl:Requires clause"
                             ((#"whole_program.jc" 902 12 793#
                              "expl:Requires clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Key_2_key_0_46_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"whole_program.jc" 902 12 793#
                             "expl:Requires clause" ((=) true true)))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 351 13 26#
                            "expl:Requires clause"
                            (#"whole_program.jc" 902 12 793#
                            "expl:Requires clause"
                            ((#"whole_program.jc" 902 12 793#
                             "expl:Requires clause"
                             ((<=)
                             (offset_min
                             __anonstruct_Value_3_value_0_47_alloc_table
                             value_0) (0)))
                            /\
                            (#"whole_program.jc" 902 12 793#
                            "expl:Requires clause"
                            ((#"whole_program.jc" 902 12 793#
                             "expl:Requires clause"
                             ((>=)
                             (offset_max
                             __anonstruct_Value_3_value_0_47_alloc_table
                             value_0) (0)))
                            /\
                            (#"whole_program.jc" 902 12 793#
                            "expl:Requires clause" ((=) true true))))))))))))))
                            }
                          reads { __anonstruct_Value_3_c_value_0_47,
                          __anonstruct_Value_3_d_value_0_47 } writes {
                          __anonstruct_Value_3_c_value_0_47,
                          __anonstruct_Value_3_d_value_0_47 }
                          ensures {
                            (((#"whole_program.jc" 916 10 32#
                              "expl:Assigns clause"
                              (not_assigns
                              __anonstruct_Value_3_value_0_47_alloc_table
                              __anonstruct_Value_3_value_0_47_alloc_table
                              (old !__anonstruct_Value_3_c_value_0_47)
                              !__anonstruct_Value_3_c_value_0_47
                              (pset_singleton value_0)))
                             /\
                             (#"whole_program.jc" 916 10 32#
                             "expl:Assigns clause"
                             (not_assigns
                             __anonstruct_Value_3_value_0_47_alloc_table
                             __anonstruct_Value_3_value_0_47_alloc_table (old
                             !__anonstruct_Value_3_d_value_0_47)
                             !__anonstruct_Value_3_d_value_0_47
                             (pset_singleton value_0))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             (is_valid_map map_1_0
                             voidP_get_item_t_101_alloc_table
                             __anonstruct_Value_3_get_item_t_101_alloc_table
                             __anonstruct_Key_2_get_item_t_101_alloc_table
                             __anonstruct_Map_5_count_map_1_45
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 358 12 41#
                             "expl:Ensures clause"
                             (same_capacity map_1_0
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_capacity_map_1_45))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 359 12 38#
                             "expl:Ensures clause"
                             (same_count map_1_0
                             __anonstruct_Map_5_count_map_1_45
                             __anonstruct_Map_5_count_map_1_45))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 360 12 38#
                             "expl:Ensures clause"
                             (same_items map_1_0
                             __anonstruct_Map_5_capacity_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Map_5_items_map_1_45
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_existent_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_value_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Item_4_key_2_get_item_t_101
                             __anonstruct_Value_3_d_get_item_t_101
                             __anonstruct_Value_3_d_get_item_t_101
                             __anonstruct_Value_3_c_get_item_t_101
                             __anonstruct_Value_3_c_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_b_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101
                             __anonstruct_Key_2_a_get_item_t_101))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 361 12 45#
                             "expl:Ensures clause"
                             (compare_keys key_0_0 key_0_0
                             __anonstruct_Key_2_b_key_0_46
                             __anonstruct_Key_2_b_key_0_46
                             __anonstruct_Key_2_a_key_0_46
                             __anonstruct_Key_2_a_key_0_46))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 362 12 23#
                             "expl:Ensures clause"
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Key_2_key_0_46_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Key_2_key_0_46_alloc_table
                              key_0_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause" ((=) true true)))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 363 12 25#
                             "expl:Ensures clause"
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((<=)
                              (offset_min
                              __anonstruct_Value_3_value_0_47_alloc_table
                              value_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause"
                             ((#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                              "expl:Ensures clause"
                              ((>=)
                              (offset_max
                              __anonstruct_Value_3_value_0_47_alloc_table
                              value_0) (0)))
                             /\
                             (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                             "expl:Ensures clause" ((=) true true)))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 365 12 24#
                             "expl:Ensures clause"
                             (Int32.(<=) (#"whole_program.jc" 935 47 59#
                             "expl:Integer cast" (Int32.of_int (0))) result))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 365 17 29#
                             "expl:Ensures clause"
                             (Int32.(<=) result
                             (#"whole_program.jc" 936 59 71#
                             "expl:Integer cast" (Int32.of_int (1)))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 357 12 29#
                            "expl:Ensures clause"
                            ((#"/home/nik/Projects/ver/hw4/map.h" 367 12 310#
                             "expl:Ensures clause"
                             ((Int32.(=) result
                              (#"whole_program.jc" 937 60 72#
                              "expl:Integer cast" (Int32.of_int (1)))) ->
                              (exists i_17 : int.
                               (((<=) (0) i_17) /\
                               (((<) i_17
                                (Int32.to_int
                                (select __anonstruct_Map_5_capacity_map_1_45
                                map_1_0)))
                               /\
                               ((compare_keys key_0_0
                                (get_key_t
                                (get_item_t map_1_0 i_17
                                __anonstruct_Map_5_items_map_1_45)
                                __anonstruct_Item_4_key_2_get_item_t_101)
                                __anonstruct_Key_2_b_get_item_t_101
                                __anonstruct_Key_2_b_key_0_46
                                __anonstruct_Key_2_a_get_item_t_101
                                __anonstruct_Key_2_a_key_0_46)
                               /\
                               ((compare_values value_0
                                (get_value_t
                                (get_item_t map_1_0 i_17
                                __anonstruct_Map_5_items_map_1_45)
                                __anonstruct_Item_4_value_2_get_item_t_101)
                                __anonstruct_Value_3_d_get_item_t_101
                                !__anonstruct_Value_3_d_value_0_47
                                __anonstruct_Value_3_c_get_item_t_101
                                !__anonstruct_Value_3_c_value_0_47)
                               /\
                               (Int32.(=)
                               (select
                               __anonstruct_Item_4_existent_get_item_t_101
                               (shift
                               (select __anonstruct_Map_5_items_map_1_45
                               map_1_0) i_17))
                               (#"whole_program.jc" 956 55 67#
                               "expl:Integer cast" (Int32.of_int (1)))))))))))
                            /\
                            (#"/home/nik/Projects/ver/hw4/map.h" 374 12 260#
                            "expl:Ensures clause"
                            ((Int32.(=) result
                             (#"whole_program.jc" 957 61 73#
                             "expl:Integer cast" (Int32.of_int (0)))) ->
                             ((compare_values value_0 value_0
                              !__anonstruct_Value_3_d_value_0_47 (old
                              !__anonstruct_Value_3_d_value_0_47)
                              !__anonstruct_Value_3_c_value_0_47 (old
                              !__anonstruct_Value_3_c_value_0_47))
                             /\
                             (forall i_18 : int.
                              ((((<=) (0) i_18) /\
                               ((<) i_18
                               (Int32.to_int
                               (select __anonstruct_Map_5_capacity_map_1_45
                               map_1_0)))) ->
                               (not
                               ((Int32.(=)
                                (select __anonstruct_Key_2_a_get_item_t_101
                                (select
                                __anonstruct_Item_4_key_2_get_item_t_101
                                (shift
                                (select __anonstruct_Map_5_items_map_1_45
                                map_1_0) i_18)))
                                (select __anonstruct_Key_2_a_key_0_46
                                key_0_0))
                               /\
                               ((Int32.(=)
                                (select __anonstruct_Key_2_b_get_item_t_101
                                (select
                                __anonstruct_Item_4_key_2_get_item_t_101
                                (shift
                                (select __anonstruct_Map_5_items_map_1_45
                                map_1_0) i_18)))
                                (select __anonstruct_Key_2_b_key_0_46
                                key_0_0))
                               /\
                               (Int32.(=)
                               (select
                               __anonstruct_Item_4_existent_get_item_t_101
                               (shift
                               (select __anonstruct_Map_5_items_map_1_45
                               map_1_0) i_18))
                               (#"whole_program.jc" 973 63 75#
                               "expl:Integer cast" (Int32.of_int (1))))))))))))))))))))))))))))))))))
                            }
  
end
